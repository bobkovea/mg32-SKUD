Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to mg32x02z_chipinit.o(.text.ChipInit) for ChipInit
    main.o(.text.main) refers to wdt.o(.text.wdt_disable) for wdt_disable
    main.o(.text.main) refers to iap.o(.text.IAP_Init) for IAP_Init
    main.o(.text.main) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    main.o(.text.main) refers to mg32x02z_tm_drv.o(.text.TM_IT_Config) for TM_IT_Config
    main.o(.text.main) refers to mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd) for TM_ITEA_Cmd
    main.o(.text.main) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    main.o(.text.main) refers to mg32x02z_urt_drv.o(.text.URT_Cmd) for URT_Cmd
    main.o(.text.main) refers to mg32x02z_urt_drv.o(.text.URT_IT_Config) for URT_IT_Config
    main.o(.text.main) refers to mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd) for URT_ITEA_Cmd
    main.o(.text.main) refers to keys.o(.text.CopyFlash) for CopyFlash
    main.o(.text.main) refers to keys.o(.text.FillFlash) for FillFlash
    main.o(.text.main) refers to usart.o(.text.URT_WriteWord) for URT_WriteWord
    main.o(.text.main) refers to keys.o(.text.DS1990_GetID) for DS1990_GetID
    main.o(.text.main) refers to keys.o(.text.RemoveKey) for RemoveKey
    main.o(.text.main) refers to timers.o(.text.delay_ms) for delay_ms
    main.o(.text.main) refers to keys.o(.bss.keyCurrent) for keyCurrent
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    prsm3.o(.text.PRSM3AddNewByte) refers to mg32x02z_urt_drv.o(.text.URT_GetRXData) for URT_GetRXData
    prsm3.o(.text.PRSM3AddNewByte) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    prsm3.o(.text.PRSM3AddNewByte) refers to prsm3.o(.bss.MessLen) for MessLen
    prsm3.o(.text.PRSM3AddNewByte) refers to prsm3.o(.bss.iptr) for iptr
    prsm3.o(.text.PRSM3AddNewByte) refers to prsm3.o(.bss.RecBytes) for RecBytes
    prsm3.o(.ARM.exidx.text.PRSM3AddNewByte) refers to prsm3.o(.text.PRSM3AddNewByte) for [Anonymous Symbol]
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to timers.o(.text.delay_ms) for delay_ms
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to crc.o(.text.CRCisWrong) for CRCisWrong
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.text.ReturnReply) for ReturnReply
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to keys.o(.text.RemoveKey) for RemoveKey
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to keys.o(.text.AddKey) for AddKey
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to memseta.o(.text) for __aeabi_memclr
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to flash.o(.text.GetBlocksLeft) for GetBlocksLeft
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.bss.MessLen) for MessLen
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.bss.usUsart) for usUsart
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.bss.iptr) for iptr
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.bss.CommandSize) for CommandSize
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.bss.RecBytes) for RecBytes
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to keys.o(.bss.keyCurrent) for keyCurrent
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to flash.o(.bss.CurLastBlockPos) for CurLastBlockPos
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to flash.o(.bss.cfg) for cfg
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to gpio.o(.bss.InpWasChange) for InpWasChange
    prsm3.o(.text.PRSM3ReceiveLineComplete) refers to gpio.o(.bss.ModInp) for ModInp
    prsm3.o(.ARM.exidx.text.PRSM3ReceiveLineComplete) refers to prsm3.o(.text.PRSM3ReceiveLineComplete) for [Anonymous Symbol]
    prsm3.o(.text.ReturnReply) refers to crc.o(.text.Do_CRC) for Do_CRC
    prsm3.o(.text.ReturnReply) refers to wdt.o(.text.wdt_enable) for wdt_enable
    prsm3.o(.text.ReturnReply) refers to usart.o(.text.URT_Write) for URT_Write
    prsm3.o(.text.ReturnReply) refers to usart.o(.text.URT_IsTxEndTransmission) for URT_IsTxEndTransmission
    prsm3.o(.text.ReturnReply) refers to prsm3.o(.bss.RecBytes) for RecBytes
    prsm3.o(.text.ReturnReply) refers to prsm3.o(.bss.CommandSize) for CommandSize
    prsm3.o(.ARM.exidx.text.ReturnReply) refers to prsm3.o(.text.ReturnReply) for [Anonymous Symbol]
    prsm3.o(.text.clearBuffer) refers to prsm3.o(.bss.MessLen) for MessLen
    prsm3.o(.text.clearBuffer) refers to prsm3.o(.bss.iptr) for iptr
    prsm3.o(.text.clearBuffer) refers to prsm3.o(.bss.usUsart) for usUsart
    prsm3.o(.ARM.exidx.text.clearBuffer) refers to prsm3.o(.text.clearBuffer) for [Anonymous Symbol]
    timers.o(.text.TIM01_Callback) refers to prsm3.o(.text.PRSM3ReceiveLineComplete) for PRSM3ReceiveLineComplete
    timers.o(.ARM.exidx.text.TIM01_Callback) refers to timers.o(.text.TIM01_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM10_Callback) refers to prsm3.o(.text.clearBuffer) for clearBuffer
    timers.o(.text.TIM10_Callback) refers to prsm3.o(.bss.usUsart) for usUsart
    timers.o(.ARM.exidx.text.TIM10_Callback) refers to timers.o(.text.TIM10_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM16_Callback) refers to gpio.o(.bss.pisk_cnt) for pisk_cnt
    timers.o(.ARM.exidx.text.TIM16_Callback) refers to timers.o(.text.TIM16_Callback) for [Anonymous Symbol]
    timers.o(.text.delay_one_ms) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for TM_GetSingleFlagStatus
    timers.o(.text.delay_one_ms) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers.o(.ARM.exidx.text.delay_one_ms) refers to timers.o(.text.delay_one_ms) for [Anonymous Symbol]
    timers.o(.text.delay_ms) refers to timers.o(.text.delay_one_ms) for delay_one_ms
    timers.o(.ARM.exidx.text.delay_ms) refers to timers.o(.text.delay_ms) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.delay_one_us) refers to timers.o(.text.delay_one_us) for [Anonymous Symbol]
    timers.o(.text.delay_us) refers to timers.o(.text.delay_one_us) for delay_one_us
    timers.o(.ARM.exidx.text.delay_us) refers to timers.o(.text.delay_us) for [Anonymous Symbol]
    crc.o(.text.Do_CRC) refers to crc.o(.rodata.CRC_Table) for [Anonymous Symbol]
    crc.o(.ARM.exidx.text.Do_CRC) refers to crc.o(.text.Do_CRC) for [Anonymous Symbol]
    crc.o(.text.CRCisWrong) refers to crc.o(.text.Do_CRC) for Do_CRC
    crc.o(.ARM.exidx.text.CRCisWrong) refers to crc.o(.text.CRCisWrong) for [Anonymous Symbol]
    usart.o(.text.URT_Rx_Callback) refers to prsm3.o(.text.PRSM3AddNewByte) for PRSM3AddNewByte
    usart.o(.text.URT_Rx_Callback) refers to prsm3.o(.bss.usUsart) for usUsart
    usart.o(.ARM.exidx.text.URT_Rx_Callback) refers to usart.o(.text.URT_Rx_Callback) for [Anonymous Symbol]
    usart.o(.text.URT_Write) refers to usart.o(.text.URT_IsTxReady) for URT_IsTxReady
    usart.o(.text.URT_Write) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for URT_SetTXData
    usart.o(.ARM.exidx.text.URT_Write) refers to usart.o(.text.URT_Write) for [Anonymous Symbol]
    usart.o(.text.URT_WriteWord) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for URT_SetTXData
    usart.o(.ARM.exidx.text.URT_WriteWord) refers to usart.o(.text.URT_WriteWord) for [Anonymous Symbol]
    usart.o(.text.URT_Print) refers to usart.o(.text.URT_Write) for URT_Write
    usart.o(.text.URT_Print) refers to usart.o(.text.URT_IsTxEndTransmission) for URT_IsTxEndTransmission
    usart.o(.ARM.exidx.text.URT_Print) refers to usart.o(.text.URT_Print) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.URT_IsTxReady) refers to usart.o(.text.URT_IsTxReady) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.URT_IsTxEndTransmission) refers to usart.o(.text.URT_IsTxEndTransmission) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.SetAddress) refers to gpio.o(.text.SetAddress) for [Anonymous Symbol]
    gpio.o(.text.InputRead) refers to gpio.o(.text.SetAddress) for SetAddress
    gpio.o(.text.InputRead) refers to gpio.o(.data.InputsAddr) for InputsAddr
    gpio.o(.ARM.exidx.text.InputRead) refers to gpio.o(.text.InputRead) for [Anonymous Symbol]
    gpio.o(.text.LatchTest) refers to timers.o(.text.delay_us) for delay_us
    gpio.o(.ARM.exidx.text.LatchTest) refers to gpio.o(.text.LatchTest) for [Anonymous Symbol]
    gpio.o(.text.UpdateLED) refers to timers.o(.text.delay_us) for delay_us
    gpio.o(.text.UpdateLED) refers to gpio.o(.data.LEDOrder) for LEDOrder
    gpio.o(.text.UpdateLED) refers to gpio.o(.bss.ModInp) for ModInp
    gpio.o(.ARM.exidx.text.UpdateLED) refers to gpio.o(.text.UpdateLED) for [Anonymous Symbol]
    wdt.o(.text.wdt_enable) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    wdt.o(.text.wdt_enable) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select) for IWDT_Divider_Select
    wdt.o(.text.wdt_enable) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Cmd) for IWDT_Cmd
    wdt.o(.text.wdt_enable) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    wdt.o(.ARM.exidx.text.wdt_enable) refers to wdt.o(.text.wdt_enable) for [Anonymous Symbol]
    wdt.o(.text.wdt_reset) refers to mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter) for IWDT_RefreshCounter
    wdt.o(.ARM.exidx.text.wdt_reset) refers to wdt.o(.text.wdt_reset) for [Anonymous Symbol]
    wdt.o(.text.wdt_disable) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    wdt.o(.text.wdt_disable) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Cmd) for IWDT_Cmd
    wdt.o(.text.wdt_disable) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    wdt.o(.ARM.exidx.text.wdt_disable) refers to wdt.o(.text.wdt_disable) for [Anonymous Symbol]
    timers_irq.o(.ARM.exidx.text.TIM00_Callback) refers to timers_irq.o(.text.TIM00_Callback) for [Anonymous Symbol]
    timers_irq.o(.ARM.exidx.text.TIM01_Callback) refers to timers_irq.o(.text.TIM01_Callback) for [Anonymous Symbol]
    timers_irq.o(.ARM.exidx.text.TIM10_Callback) refers to timers_irq.o(.text.TIM10_Callback) for [Anonymous Symbol]
    timers_irq.o(.ARM.exidx.text.TIM16_Callback) refers to timers_irq.o(.text.TIM16_Callback) for [Anonymous Symbol]
    timers_irq.o(.text.TM00_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for TM_GetSingleFlagStatus
    timers_irq.o(.text.TM00_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers_irq.o(.text.TM00_IRQ) refers to timers_irq.o(.text.TIM00_Callback) for TIM00_Callback
    timers_irq.o(.ARM.exidx.text.TM00_IRQ) refers to timers_irq.o(.text.TM00_IRQ) for [Anonymous Symbol]
    timers_irq.o(.text.TM01_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for TM_GetSingleFlagStatus
    timers_irq.o(.text.TM01_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers_irq.o(.text.TM01_IRQ) refers to timers.o(.text.TIM01_Callback) for TIM01_Callback
    timers_irq.o(.ARM.exidx.text.TM01_IRQ) refers to timers_irq.o(.text.TM01_IRQ) for [Anonymous Symbol]
    timers_irq.o(.text.TM10_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for TM_GetSingleFlagStatus
    timers_irq.o(.text.TM10_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers_irq.o(.text.TM10_IRQ) refers to timers.o(.text.TIM10_Callback) for TIM10_Callback
    timers_irq.o(.ARM.exidx.text.TM10_IRQ) refers to timers_irq.o(.text.TM10_IRQ) for [Anonymous Symbol]
    timers_irq.o(.text.TM16_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for TM_GetSingleFlagStatus
    timers_irq.o(.text.TM16_IRQ) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers_irq.o(.text.TM16_IRQ) refers to timers.o(.text.TIM16_Callback) for TIM16_Callback
    timers_irq.o(.ARM.exidx.text.TM16_IRQ) refers to timers_irq.o(.text.TM16_IRQ) for [Anonymous Symbol]
    usart_irq.o(.ARM.exidx.text.URT_Rx_Callback) refers to usart_irq.o(.text.URT_Rx_Callback) for [Anonymous Symbol]
    usart_irq.o(.ARM.exidx.text.URT_Tx_Callback) refers to usart_irq.o(.text.URT_Tx_Callback) for [Anonymous Symbol]
    usart_irq.o(.text.URT0_IRQ) refers to mg32x02z_urt_drv.o(.text.URT_GetITAllFlagStatus) for URT_GetITAllFlagStatus
    usart_irq.o(.text.URT0_IRQ) refers to mg32x02z_urt_drv.o(.text.URT_GetITStatus) for URT_GetITStatus
    usart_irq.o(.text.URT0_IRQ) refers to mg32x02z_urt_drv.o(.text.URT_ClearITFlag) for URT_ClearITFlag
    usart_irq.o(.text.URT0_IRQ) refers to usart.o(.text.URT_Rx_Callback) for URT_Rx_Callback
    usart_irq.o(.text.URT0_IRQ) refers to usart_irq.o(.text.URT_Tx_Callback) for URT_Tx_Callback
    usart_irq.o(.ARM.exidx.text.URT0_IRQ) refers to usart_irq.o(.text.URT0_IRQ) for [Anonymous Symbol]
    flash.o(.text.FindLastBlockPos) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    flash.o(.ARM.exidx.text.FindLastBlockPos) refers to flash.o(.text.FindLastBlockPos) for [Anonymous Symbol]
    flash.o(.text.FillStructureDefault) refers to crc.o(.text.Do_CRC) for Do_CRC
    flash.o(.text.FillStructureDefault) refers to flash.o(.bss.cfg) for cfg
    flash.o(.ARM.exidx.text.FillStructureDefault) refers to flash.o(.text.FillStructureDefault) for [Anonymous Symbol]
    flash.o(.text.FlashStartupHandle) refers to iap.o(.text.IAP_IsFullEmpty) for IAP_IsFullEmpty
    flash.o(.text.FlashStartupHandle) refers to flash.o(.text.FillStructureDefault) for FillStructureDefault
    flash.o(.text.FlashStartupHandle) refers to iap.o(.text.IAP_CopyRAMInIAP) for IAP_CopyRAMInIAP
    flash.o(.text.FlashStartupHandle) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    flash.o(.text.FlashStartupHandle) refers to flash.o(.text.FindLastBlockPos) for FindLastBlockPos
    flash.o(.text.FlashStartupHandle) refers to crc.o(.text.CRCisWrong) for CRCisWrong
    flash.o(.text.FlashStartupHandle) refers to iap.o(.text.IAP_FullErase) for IAP_FullErase
    flash.o(.text.FlashStartupHandle) refers to iap.o(.text.IAP_CopyIAPInRAM) for IAP_CopyIAPInRAM
    flash.o(.text.FlashStartupHandle) refers to flash.o(.bss.CurLastBlockPos) for CurLastBlockPos
    flash.o(.text.FlashStartupHandle) refers to flash.o(.bss.cfg) for cfg
    flash.o(.ARM.exidx.text.FlashStartupHandle) refers to flash.o(.text.FlashStartupHandle) for [Anonymous Symbol]
    flash.o(.text.GetBlocksLeft) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    flash.o(.text.GetBlocksLeft) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    flash.o(.ARM.exidx.text.GetBlocksLeft) refers to flash.o(.text.GetBlocksLeft) for [Anonymous Symbol]
    flash.o(.text.IsEnoughSpace) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    flash.o(.ARM.exidx.text.IsEnoughSpace) refers to flash.o(.text.IsEnoughSpace) for [Anonymous Symbol]
    flash.o(.text.FlashUpdate) refers to crc.o(.text.Do_CRC) for Do_CRC
    flash.o(.text.FlashUpdate) refers to flash.o(.text.IsEnoughSpace) for IsEnoughSpace
    flash.o(.text.FlashUpdate) refers to iap.o(.text.IAP_FullErase) for IAP_FullErase
    flash.o(.text.FlashUpdate) refers to iap.o(.text.IAP_CopyRAMInIAP) for IAP_CopyRAMInIAP
    flash.o(.text.FlashUpdate) refers to flash.o(.bss.cfg) for cfg
    flash.o(.text.FlashUpdate) refers to flash.o(.bss.CurLastBlockPos) for CurLastBlockPos
    flash.o(.ARM.exidx.text.FlashUpdate) refers to flash.o(.text.FlashUpdate) for [Anonymous Symbol]
    iap.o(.text.IAP_Init) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    iap.o(.text.IAP_Init) refers to mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd) for CSC_IHRCO_Cmd
    iap.o(.text.IAP_Init) refers to mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState) for CSC_GetClockSourceState
    iap.o(.text.IAP_Init) refers to mg32x02z_csc_drv.o(.text.CSC_ClearFlag) for CSC_ClearFlag
    iap.o(.text.IAP_Init) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    iap.o(.text.IAP_Init) refers to mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) for MEM_SetIAPSize
    iap.o(.ARM.exidx.text.IAP_Init) refers to iap.o(.text.IAP_Init) for [Anonymous Symbol]
    iap.o(.text.IAP_Erase_OnePage) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.text.IAP_Erase_OnePage) refers to iap.o(.text.IAP_Erase_Page) for IAP_Erase_Page
    iap.o(.ARM.exidx.text.IAP_Erase_OnePage) refers to iap.o(.text.IAP_Erase_OnePage) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Erase_Page) refers to iap.o(.text.IAP_Erase_Page) for [Anonymous Symbol]
    iap.o(.text.IAP_FullErase) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.text.IAP_FullErase) refers to iap.o(.text.IAP_Erase_Page) for IAP_Erase_Page
    iap.o(.ARM.exidx.text.IAP_FullErase) refers to iap.o(.text.IAP_FullErase) for [Anonymous Symbol]
    iap.o(.text.IAP_ReadByte) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.ARM.exidx.text.IAP_ReadByte) refers to iap.o(.text.IAP_ReadByte) for [Anonymous Symbol]
    iap.o(.text.IAP_ReadWord) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.ARM.exidx.text.IAP_ReadWord) refers to iap.o(.text.IAP_ReadWord) for [Anonymous Symbol]
    iap.o(.text.IAP_CopyRAMInIAP) refers to iap.o(.text.IAP_Multiple_Write) for IAP_Multiple_Write
    iap.o(.ARM.exidx.text.IAP_CopyRAMInIAP) refers to iap.o(.text.IAP_CopyRAMInIAP) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Multiple_Write) refers to iap.o(.text.IAP_Multiple_Write) for [Anonymous Symbol]
    iap.o(.text.IAP_CopyIAPInRAM) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    iap.o(.ARM.exidx.text.IAP_CopyIAPInRAM) refers to iap.o(.text.IAP_CopyIAPInRAM) for [Anonymous Symbol]
    iap.o(.text.IAP_IsEqualToRAM) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    iap.o(.ARM.exidx.text.IAP_IsEqualToRAM) refers to iap.o(.text.IAP_IsEqualToRAM) for [Anonymous Symbol]
    iap.o(.text.IAP_IsAreaEmpty) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    iap.o(.ARM.exidx.text.IAP_IsAreaEmpty) refers to iap.o(.text.IAP_IsAreaEmpty) for [Anonymous Symbol]
    iap.o(.text.IAP_IsFullEmpty) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.text.IAP_IsFullEmpty) refers to iap.o(.text.IAP_IsAreaEmpty) for IAP_IsAreaEmpty
    iap.o(.ARM.exidx.text.IAP_IsFullEmpty) refers to iap.o(.text.IAP_IsFullEmpty) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_GetPageNumberOfByte) refers to iap.o(.text.IAP_GetPageNumberOfByte) for [Anonymous Symbol]
    iap.o(.text.IAP_GetNumberOfPages) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.ARM.exidx.text.IAP_GetNumberOfPages) refers to iap.o(.text.IAP_GetNumberOfPages) for [Anonymous Symbol]
    iap.o(.text.IAP_WriteWord) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.text.IAP_WriteWord) refers to iap.o(.text.IAP_Multiple_Write) for IAP_Multiple_Write
    iap.o(.ARM.exidx.text.IAP_WriteWord) refers to iap.o(.text.IAP_WriteWord) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Single_Write) refers to iap.o(.text.IAP_Single_Write) for [Anonymous Symbol]
    onewire.o(.text.OneWire_Start) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.text.OneWire_Start) refers to timers.o(.text.delay_us) for delay_us
    onewire.o(.ARM.exidx.text.OneWire_Start) refers to onewire.o(.text.OneWire_Start) for [Anonymous Symbol]
    onewire.o(.text.OneWire_Write) refers to timers.o(.text.delay_us) for delay_us
    onewire.o(.text.OneWire_Write) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.ARM.exidx.text.OneWire_Write) refers to onewire.o(.text.OneWire_Write) for [Anonymous Symbol]
    onewire.o(.text.OneWire_Read) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.text.OneWire_Read) refers to timers.o(.text.delay_us) for delay_us
    onewire.o(.ARM.exidx.text.OneWire_Read) refers to onewire.o(.text.OneWire_Read) for [Anonymous Symbol]
    ds18b20.o(.text.DS18B20_GetTemperature) refers to onewire.o(.text.OneWire_Start) for OneWire_Start
    ds18b20.o(.text.DS18B20_GetTemperature) refers to timers.o(.text.delay_ms) for delay_ms
    ds18b20.o(.text.DS18B20_GetTemperature) refers to onewire.o(.text.OneWire_Write) for OneWire_Write
    ds18b20.o(.text.DS18B20_GetTemperature) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    ds18b20.o(.text.DS18B20_GetTemperature) refers to onewire.o(.text.OneWire_Read) for OneWire_Read
    ds18b20.o(.ARM.exidx.text.DS18B20_GetTemperature) refers to ds18b20.o(.text.DS18B20_GetTemperature) for [Anonymous Symbol]
    keys.o(.text.FillFlash) refers to iap.o(.text.IAP_CopyRAMInIAP) for IAP_CopyRAMInIAP
    keys.o(.text.FillFlash) refers to keys.o(.data.key1) for key1
    keys.o(.text.FillFlash) refers to keys.o(.data.key2) for key2
    keys.o(.text.FillFlash) refers to keys.o(.data.key3) for key3
    keys.o(.ARM.exidx.text.FillFlash) refers to keys.o(.text.FillFlash) for [Anonymous Symbol]
    keys.o(.ARM.exidx.text.CopyFlash) refers to keys.o(.text.CopyFlash) for [Anonymous Symbol]
    keys.o(.text.CheckTruth) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    keys.o(.ARM.exidx.text.CheckTruth) refers to keys.o(.text.CheckTruth) for [Anonymous Symbol]
    keys.o(.ARM.exidx.text.AddKey) refers to keys.o(.text.AddKey) for [Anonymous Symbol]
    keys.o(.text.RemoveKey) refers to keys.o(.text.CheckTruth) for CheckTruth
    keys.o(.text.RemoveKey) refers to iap.o(.text.IAP_GetPageNumberOfByte) for IAP_GetPageNumberOfByte
    keys.o(.text.RemoveKey) refers to iap.o(.text.IAP_Erase_OnePage) for IAP_Erase_OnePage
    keys.o(.text.RemoveKey) refers to iap.o(.text.IAP_CopyRAMInIAP) for IAP_CopyRAMInIAP
    keys.o(.text.RemoveKey) refers to iap.o(.text.IAP_CopyIAPInRAM) for IAP_CopyIAPInRAM
    keys.o(.text.RemoveKey) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    keys.o(.text.RemoveKey) refers to keys.o(.bss.flashBlock) for flashBlock
    keys.o(.ARM.exidx.text.RemoveKey) refers to keys.o(.text.RemoveKey) for [Anonymous Symbol]
    keys.o(.ARM.exidx.text.ChangeKey) refers to keys.o(.text.ChangeKey) for [Anonymous Symbol]
    keys.o(.text.DS1990_GetID) refers to onewire.o(.text.OneWire_Start) for OneWire_Start
    keys.o(.text.DS1990_GetID) refers to timers.o(.text.delay_ms) for delay_ms
    keys.o(.text.DS1990_GetID) refers to onewire.o(.text.OneWire_Write) for OneWire_Write
    keys.o(.text.DS1990_GetID) refers to onewire.o(.text.OneWire_Read) for OneWire_Read
    keys.o(.text.DS1990_GetID) refers to keys.o(.bss.keyCurrent) for keyCurrent
    keys.o(.ARM.exidx.text.DS1990_GetID) refers to keys.o(.text.DS1990_GetID) for [Anonymous Symbol]
    keys.o(.data.keys) refers to keys.o(.data.key1) for key1
    keys.o(.data.keys) refers to keys.o(.data.key2) for key2
    keys.o(.data.keys) refers to keys.o(.data.key3) for key3
    keys.o(.data.keys) refers to keys.o(.data.key4) for key4
    keys.o(.data.keys) refers to keys.o(.data.key5) for key5
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_IHRCO_Enable) refers to mg32x02z_csc_init.o(.text.CSC_IHRCO_Enable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_XOSC_Enable) refers to mg32x02z_csc_init.o(.text.CSC_XOSC_Enable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_EXTCK_Enable) refers to mg32x02z_csc_init.o(.text.CSC_EXTCK_Enable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.text.CSC_Init) refers to mg32x02z_csc_init.o(.text.CSC_XOSC_Enable) for CSC_XOSC_Enable
    mg32x02z_csc_init.o(.text.CSC_Init) refers to mg32x02z_csc_init.o(.text.CSC_IHRCO_Enable) for CSC_IHRCO_Enable
    mg32x02z_csc_init.o(.text.CSC_Init) refers to mg32x02z_csc_init.o(.rodata.CSC_InitConfig) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.text.CSC_Init) refers to system_mg32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_Init) refers to mg32x02z_csc_init.o(.text.CSC_Init) for [Anonymous Symbol]
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_csc_init.o(.text.CSC_Init) for CSC_Init
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_rst_init.o(.text.RST_Init) for RST_Init
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_gpio_init.o(.text.GPIO_Init) for GPIO_Init
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_tm_init.o(.text.TM_Init) for TM_Init
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_urt_init.o(.text.URT_Init) for URT_Init
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_chipinit.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_chipinit.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    mg32x02z_chipinit.o(.ARM.exidx.text.ChipInit) refers to mg32x02z_chipinit.o(.text.ChipInit) for [Anonymous Symbol]
    mg32x02z_chipinit.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to mg32x02z_chipinit.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    mg32x02z_chipinit.o(.ARM.exidx.text.__NVIC_SetPriority) refers to mg32x02z_chipinit.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    mg32x02z_gpio_init.o(.text.GPIO_Init) refers to mg32x02z_gpio_init.o(.rodata.GPIO_CFG) for [Anonymous Symbol]
    mg32x02z_gpio_init.o(.ARM.exidx.text.GPIO_Init) refers to mg32x02z_gpio_init.o(.text.GPIO_Init) for [Anonymous Symbol]
    mg32x02z_rst_init.o(.ARM.exidx.text.RST_Init) refers to mg32x02z_rst_init.o(.text.RST_Init) for [Anonymous Symbol]
    mg32x02z_tm_init.o(.ARM.exidx.text.TM_Init) refers to mg32x02z_tm_init.o(.text.TM_Init) for [Anonymous Symbol]
    mg32x02z_urt_init.o(.text.URT_Config) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    mg32x02z_urt_init.o(.ARM.exidx.text.URT_Config) refers to mg32x02z_urt_init.o(.text.URT_Config) for [Anonymous Symbol]
    mg32x02z_urt_init.o(.text.URT_Init) refers to mg32x02z_urt_init.o(.text.URT_Config) for URT_Config
    mg32x02z_urt_init.o(.ARM.exidx.text.URT_Init) refers to mg32x02z_urt_init.o(.text.URT_Init) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.ARM.exidx.text.NMI_Handler) refers to mg32x02z__irqhandler.o(.text.NMI_Handler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.ARM.exidx.text.SVC_Handler) refers to mg32x02z__irqhandler.o(.text.SVC_Handler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.ARM.exidx.text.PendSV_Handler) refers to mg32x02z__irqhandler.o(.text.PendSV_Handler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.text.SysTick_Handler) refers to mg32x02z__common_drv.o(.text.IncTick) for IncTick
    mg32x02z__irqhandler.o(.ARM.exidx.text.SysTick_Handler) refers to mg32x02z__irqhandler.o(.text.SysTick_Handler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.text.TM0x_IRQHandler) refers to timers_irq.o(.text.TM01_IRQ) for TM01_IRQ
    mg32x02z__irqhandler.o(.ARM.exidx.text.TM0x_IRQHandler) refers to mg32x02z__irqhandler.o(.text.TM0x_IRQHandler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.text.TM10_IRQHandler) refers to timers_irq.o(.text.TM10_IRQ) for TM10_IRQ
    mg32x02z__irqhandler.o(.ARM.exidx.text.TM10_IRQHandler) refers to mg32x02z__irqhandler.o(.text.TM10_IRQHandler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.text.TM1x_IRQHandler) refers to timers_irq.o(.text.TM16_IRQ) for TM16_IRQ
    mg32x02z__irqhandler.o(.ARM.exidx.text.TM1x_IRQHandler) refers to mg32x02z__irqhandler.o(.text.TM1x_IRQHandler) for [Anonymous Symbol]
    mg32x02z__irqhandler.o(.text.URT0_IRQHandler) refers to usart_irq.o(.text.URT0_IRQ) for URT0_IRQ
    mg32x02z__irqhandler.o(.ARM.exidx.text.URT0_IRQHandler) refers to mg32x02z__irqhandler.o(.text.URT0_IRQHandler) for [Anonymous Symbol]
    startup_mg32x02z.o(RESET) refers to startup_mg32x02z.o(STACK) for __initial_sp
    startup_mg32x02z.o(RESET) refers to startup_mg32x02z.o(.text) for MG32x02z_IEC60730_MANAGER
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.NMI_Handler) for NMI_Handler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.SVC_Handler) for SVC_Handler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.PendSV_Handler) for PendSV_Handler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.SysTick_Handler) for SysTick_Handler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.TM0x_IRQHandler) for TM0x_IRQHandler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.TM10_IRQHandler) for TM10_IRQHandler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.TM1x_IRQHandler) for TM1x_IRQHandler
    startup_mg32x02z.o(RESET) refers to mg32x02z__irqhandler.o(.text.URT0_IRQHandler) for URT0_IRQHandler
    startup_mg32x02z.o(.text) refers to system_mg32x02z.o(.text.SystemInit) for SystemInit
    startup_mg32x02z.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mg32x02z.o(.text) refers to system_mg32x02z.o(.text.HardFault_Handler_C) for HardFault_Handler_C
    system_mg32x02z.o(.text.SystemCoreClockUpdate) refers to system_mg32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    system_mg32x02z.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mg32x02z.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_mg32x02z.o(.text.SystemInit) refers to system_mg32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    system_mg32x02z.o(.ARM.exidx.text.SystemInit) refers to system_mg32x02z.o(.text.SystemInit) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to printf5.o(i.__0printf$5) for __2printf
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r0) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r1) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r2) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r3) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r12) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_lr) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_pc) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_psr) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.rodata.str1.1) for [Anonymous Symbol]
    system_mg32x02z.o(.ARM.exidx.text.HardFault_Handler_C) refers to system_mg32x02z.o(.text.HardFault_Handler_C) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DeInit) refers to mg32x02z_adc_drv.o(.text.ADC_DeInit) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_BaseStructure_Init) refers to mg32x02z_adc_drv.o(.text.ADC_BaseStructure_Init) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_ClockSource_Select) for ADC_ClockSource_Select
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_SetInternalClockDivider) for ADC_SetInternalClockDivider
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_SetPLLClockDivider) for ADC_SetPLLClockDivider
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_DataAlignment_Select) for ADC_DataAlignment_Select
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select) for ADC_DataResolution_Select
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_DataOverrunMode_Select) for ADC_DataOverrunMode_Select
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_SetConversionTime) for ADC_SetConversionTime
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_SetOperationCurrent) for ADC_SetOperationCurrent
    mg32x02z_adc_drv.o(.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_SampleClockPhase_Select) for ADC_SampleClockPhase_Select
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_Base_Init) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClockSource_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ClockSource_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetInternalClockDivider) refers to mg32x02z_adc_drv.o(.text.ADC_SetInternalClockDivider) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPLLClockDivider) refers to mg32x02z_adc_drv.o(.text.ADC_SetPLLClockDivider) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataAlignment_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DataAlignment_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataResolution_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataOverrunMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DataOverrunMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetConversionTime) refers to mg32x02z_adc_drv.o(.text.ADC_SetConversionTime) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOperationCurrent) refers to mg32x02z_adc_drv.o(.text.ADC_SetOperationCurrent) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SampleClockPhase_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SampleClockPhase_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLowerThreshold) refers to mg32x02z_adc_drv.o(.text.ADC_SetLowerThreshold) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetHigherThreshold) refers to mg32x02z_adc_drv.o(.text.ADC_SetHigherThreshold) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetectRange_Select) refers to mg32x02z_adc_drv.o(.text.ADC_WindowDetectRange_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetect_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_WindowDetect_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Output_Select) refers to mg32x02z_adc_drv.o(.text.ADC_Output_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGA_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_PGA_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAGain) refers to mg32x02z_adc_drv.o(.text.ADC_SetPGAGain) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAOffset) refers to mg32x02z_adc_drv.o(.text.ADC_SetPGAOffset) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_VoltageBuffer) for PW_VoltageBuffer
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SetSumNumber) for ADC_SetSumNumber
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_WindowDetect_Cmd) for ADC_WindowDetect_Cmd
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select) for ADC_ConversionMode_Select
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_TriggerSource_Select) for ADC_TriggerSource_Select
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SetOutputCodeFormat) for ADC_SetOutputCodeFormat
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select) for ADC_DataResolution_Select
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_PGA_Cmd) for ADC_PGA_Cmd
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_InternalChannel_Select) for ADC_InternalChannel_Select
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SetExtendSampling) for ADC_SetExtendSampling
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SoftwareConversion_Cmd) for ADC_SoftwareConversion_Cmd
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_GetSingleFlagStatus) for ADC_GetSingleFlagStatus
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_ClearFlag) for ADC_ClearFlag
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Data) for ADC_GetDAT0Data
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dfltui.o(.text) for __aeabi_ui2d
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dmul.o(.text) for __aeabi_dmul
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SetPGAOffset) for ADC_SetPGAOffset
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmpeq.o(.text) for __aeabi_dcmpeq
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmpgt.o(.text) for __aeabi_dcmpgt
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dadd.o(.text) for __aeabi_dsub
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmpge.o(.text) for __aeabi_dcmpge
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to dcmple.o(.text) for __aeabi_dcmple
    mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.rodata..L__const.ADC_PGAOffsetCalibration_Cmd.PGA_Gain_V) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSumNumber) refers to mg32x02z_adc_drv.o(.text.ADC_SetSumNumber) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_MainConversionMode_Select) for ADC_MainConversionMode_Select
    mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ContinueMode_Cmd) for ADC_ContinueMode_Cmd
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ConversionMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerSource_Select) refers to mg32x02z_adc_drv.o(.text.ADC_TriggerSource_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOutputCodeFormat) refers to mg32x02z_adc_drv.o(.text.ADC_SetOutputCodeFormat) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_InternalChannel_Select) refers to mg32x02z_adc_drv.o(.text.ADC_InternalChannel_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetExtendSampling) refers to mg32x02z_adc_drv.o(.text.ADC_SetExtendSampling) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SoftwareConversion_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SoftwareConversion_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSingleFlagStatus) refers to mg32x02z_adc_drv.o(.text.ADC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearFlag) refers to mg32x02z_adc_drv.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select) for ADC_ConversionMode_Select
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_TriggerSource_Select) for ADC_TriggerSource_Select
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_SingleDifferentMode_Select) for ADC_SingleDifferentMode_Select
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_SetOutputCodeFormat) for ADC_SetOutputCodeFormat
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select) for ADC_DataResolution_Select
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_InternalChannel_Select) for ADC_InternalChannel_Select
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_SoftwareConversion_Cmd) for ADC_SoftwareConversion_Cmd
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_GetSingleFlagStatus) for ADC_GetSingleFlagStatus
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_ClearFlag) for ADC_ClearFlag
    mg32x02z_adc_drv.o(.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Data) for ADC_GetDAT0Data
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_StartCalibration) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SingleDifferentMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SingleDifferentMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMA_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMADataSize_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DMADataSize_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMAMaskFlag_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DMAMaskFlag_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetNextConversionChannel) refers to mg32x02z_adc_drv.o(.text.ADC_GetNextConversionChannel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_AutoOff_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_AutoOff_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetStartupTime) refers to mg32x02z_adc_drv.o(.text.ADC_SetStartupTime) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetStartupDivider) refers to mg32x02z_adc_drv.o(.text.ADC_SetStartupDivider) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WaitDataReadOut) refers to mg32x02z_adc_drv.o(.text.ADC_WaitDataReadOut) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_MainConversionMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_MainConversionMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ContinueMode_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_ContinueMode_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_HoldConversion_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_HoldConversion_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerEdge_Select) refers to mg32x02z_adc_drv.o(.text.ADC_TriggerEdge_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChannelMUX_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ChannelMUX_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ExternalChannel_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ExternalChannel_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ScanLoopChannel_Enable) refers to mg32x02z_adc_drv.o(.text.ADC_ScanLoopChannel_Enable) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChangeMUXTiming_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ChangeMUXTiming_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLimitFunction) refers to mg32x02z_adc_drv.o(.text.ADC_SetLimitFunction) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Channel) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum0Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Channel) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum1Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Channel) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum2Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumChannelMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SumChannelMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumOverrunMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SumOverrunMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum0Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum1Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum2Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum0Flags) refers to mg32x02z_adc_drv.o(.text.ADC_ClearSum0Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum1Flags) refers to mg32x02z_adc_drv.o(.text.ADC_ClearSum1Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum2Flags) refers to mg32x02z_adc_drv.o(.text.ADC_ClearSum2Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum0Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum1Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum2Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Data) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum0Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Data) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum1Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Data) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum2Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Channel) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetDigitalOffset) refers to mg32x02z_adc_drv.o(.text.ADC_SetDigitalOffset) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TSO_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_TSO_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TSOVref_Select) refers to mg32x02z_adc_drv.o(.text.ADC_TSOVref_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_IVR24_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_IVR24_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TopRefernce_Select) refers to mg32x02z_adc_drv.o(.text.ADC_TopRefernce_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_IT_Config) refers to mg32x02z_adc_drv.o(.text.ADC_IT_Config) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ITEA_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetAllFlagStatus) refers to mg32x02z_adc_drv.o(.text.ADC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_TimerX_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_TimerX_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR6_Select) refers to mg32x02z_apb_drv.o(.text.APB_ITR6_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR7_Select) refers to mg32x02z_apb_drv.o(.text.APB_ITR7_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel0_Select) refers to mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel0_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel1_Select) refers to mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel1_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel2_Select) refers to mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel2_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS0_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseBKS0_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS1_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseBKS1_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS2_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseBKS2_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OBMxOpMode_Select) refers to mg32x02z_apb_drv.o(.text.APB_OBMxOpMode_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxOutputState) refers to mg32x02z_apb_drv.o(.text.APB_GetOBMxOutputState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOBMxOutput_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseOBMxOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputFilter_Select) refers to mg32x02z_apb_drv.o(.text.APB_OutputFilter_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxSwitchState) refers to mg32x02z_apb_drv.o(.text.APB_GetOBMxSwitchState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_SetOBMxInitState) refers to mg32x02z_apb_drv.o(.text.APB_SetOBMxInitState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxInitState) refers to mg32x02z_apb_drv.o(.text.APB_GetOBMxInitState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel0Source_Select) refers to mg32x02z_apb_drv.o(.text.APB_OutputChannel0Source_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel1Source_Select) refers to mg32x02z_apb_drv.o(.text.APB_OutputChannel1Source_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel0_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel0_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel1_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel1_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRCLK_Select) refers to mg32x02z_apb_drv.o(.text.APB_IRCLK_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRDAT_Select) refers to mg32x02z_apb_drv.o(.text.APB_IRDAT_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRCLK_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseIRCLK_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRDAT_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseIRDAT_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOClockSource_Select) refers to mg32x02z_apb_drv.o(.text.APB_NCOClockSource_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOOutputMode_Select) refers to mg32x02z_apb_drv.o(.text.APB_NCOOutputMode_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOInverseOutput_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_NCOInverseOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCO_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_NCO_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOPFMWidth_Select) refers to mg32x02z_apb_drv.o(.text.APB_NCOPFMWidth_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOSetINC) refers to mg32x02z_apb_drv.o(.text.APB_NCOSetINC) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOSetACC) refers to mg32x02z_apb_drv.o(.text.APB_NCOSetACC) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOGetOutputState) refers to mg32x02z_apb_drv.o(.text.APB_NCOGetOutputState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IT_Config) refers to mg32x02z_apb_drv.o(.text.APB_IT_Config) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITEA_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetSingleFlagStatus) refers to mg32x02z_apb_drv.o(.text.APB_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetAllFlagStatus) refers to mg32x02z_apb_drv.o(.text.APB_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ClearFlag) refers to mg32x02z_apb_drv.o(.text.APB_ClearFlag) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLTruthTable_Select) refers to mg32x02z_apx_drv.o(.text.APX_CCLTruthTable_Select) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLTruthTable_Cmd) refers to mg32x02z_apx_drv.o(.text.APX_CCLTruthTable_Cmd) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_GetCCLxOutputState) refers to mg32x02z_apx_drv.o(.text.APX_GetCCLxOutputState) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SetCCLSnState) refers to mg32x02z_apx_drv.o(.text.APX_SetCCLSnState) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_InverseCCLOutput_Cmd) refers to mg32x02z_apx_drv.o(.text.APX_InverseCCLOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SetCCLIntClockDivider) refers to mg32x02z_apx_drv.o(.text.APX_SetCCLIntClockDivider) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SQSEL_Select) refers to mg32x02z_apx_drv.o(.text.APX_SQSEL_Select) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_EDSEL_Select) refers to mg32x02z_apx_drv.o(.text.APX_EDSEL_Select) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SetFilterFunction) refers to mg32x02z_apx_drv.o(.text.APX_SetFilterFunction) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCL_Cmd) refers to mg32x02z_apx_drv.o(.text.APX_CCL_Cmd) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLMUX2_Select) refers to mg32x02z_apx_drv.o(.text.APX_CCLMUX2_Select) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLMUX1_Select) refers to mg32x02z_apx_drv.o(.text.APX_CCLMUX1_Select) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLMUX0_Select) refers to mg32x02z_apx_drv.o(.text.APX_CCLMUX0_Select) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_IT_Config) refers to mg32x02z_apx_drv.o(.text.APX_IT_Config) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_ITEA_Cmd) refers to mg32x02z_apx_drv.o(.text.APX_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_GetSingleFlagStatus) refers to mg32x02z_apx_drv.o(.text.APX_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_GetAllFlagStatus) refers to mg32x02z_apx_drv.o(.text.APX_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_apx_drv.o(.ARM.exidx.text.APX_ClearFlag) refers to mg32x02z_apx_drv.o(.text.APX_ClearFlag) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTick_Cmd) refers to mg32x02z_cm0_drv.o(.text.CM0_SysTick_Cmd) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickIT_Cmd) refers to mg32x02z_cm0_drv.o(.text.CM0_SysTickIT_Cmd) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickClockSource_Select) refers to mg32x02z_cm0_drv.o(.text.CM0_SysTickClockSource_Select) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_GetSysTickCurrentValue) refers to mg32x02z_cm0_drv.o(.text.CM0_GetSysTickCurrentValue) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_DeInit) refers to mg32x02z_cmp_drv.o(.text.CMP_DeInit) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Power_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_Power_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClock_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_FilterClock_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClockDivider_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_FilterClockDivider_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_InverseOutputPin) refers to mg32x02z_cmp_drv.o(.text.CMP_InverseOutputPin) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_OutputPolarity_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_OutputPolarity_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREFTopSource_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREFTopSource_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2TopSource_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF2TopSource_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_AC0IVREFOuput_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_AC0IVREFOuput_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_AC1IVREFOuput_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_AC1IVREFOuput_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_PositivePin_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_PositivePin_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_NegativePin_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_NegativePin_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_SetHysteresisWindow) refers to mg32x02z_cmp_drv.o(.text.CMP_SetHysteresisWindow) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IT_Config) refers to mg32x02z_cmp_drv.o(.text.CMP_IT_Config) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ITEA_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetSingleFlagStatus) refers to mg32x02z_cmp_drv.o(.text.CMP_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetAllFlagStatus) refers to mg32x02z_cmp_drv.o(.text.CMP_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ClearFlag) refers to mg32x02z_cmp_drv.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetOutput) refers to mg32x02z_cmp_drv.o(.text.CMP_GetOutput) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Select) refers to mg32x02z_csc_drv.o(.text.CSC_IHRCO_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.text.CSC_XOSC_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for GPIO_PinFunction_Select
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSC_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_XOSC_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSCGain_Select) refers to mg32x02z_csc_drv.o(.text.CSC_XOSCGain_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_ST_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_ST_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_MAIN_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_MAIN_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_HS_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_HS_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_LS_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_LS_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_HS2_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_HS2_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PLL_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_PLL_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_APB_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_APB_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_UT_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_UT_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_AHB_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_AHB_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_ClockSource_Select) refers to mg32x02z_csc_drv.o(.text.CSC_ICKO_ClockSource_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_ICKO_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_ICKO_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetectionDuration_Select) refers to mg32x02z_csc_drv.o(.text.CSC_MissingClockDetectionDuration_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetection_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_MissingClockDetection_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphProcessClockSource_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphProcessClockSource_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphONModeClock_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphONModeClock_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSLEEPModeClock_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphSLEEPModeClock_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSTOPModeClock_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphSTOPModeClock_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetAllFlagStatus) refers to mg32x02z_csc_drv.o(.text.CSC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetClockSourceState) refers to mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetMainSwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetMainSwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetHsSwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetHsSwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetLsSwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetLsSwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetHS2SwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetHS2SwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetPLLISwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetPLLISwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetSingleFlagStatus) refers to mg32x02z_csc_drv.o(.text.CSC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ClearFlag) refers to mg32x02z_csc_drv.o(.text.CSC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IT_Config) refers to mg32x02z_csc_drv.o(.text.CSC_IT_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ITEA_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_USB_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_USB_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_USB_ClockSource_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_USB_ClockSource_Select) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DeInit) refers to mg32x02z_dac_drv.o(.text.DAC_DeInit) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_Cmd) refers to mg32x02z_dac_drv.o(.text.DAC_Cmd) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetDACState) refers to mg32x02z_dac_drv.o(.text.DAC_GetDACState) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_OutputBuffer_Cmd) refers to mg32x02z_dac_drv.o(.text.DAC_OutputBuffer_Cmd) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetDAT0) refers to mg32x02z_dac_drv.o(.text.DAC_GetDAT0) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_SetDAT0) refers to mg32x02z_dac_drv.o(.text.DAC_SetDAT0) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetOutput) refers to mg32x02z_dac_drv.o(.text.DAC_GetOutput) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_TriggerSource_Select) refers to mg32x02z_dac_drv.o(.text.DAC_TriggerSource_Select) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_TriggerEdge_Select) refers to mg32x02z_dac_drv.o(.text.DAC_TriggerEdge_Select) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DataAlignment_Select) refers to mg32x02z_dac_drv.o(.text.DAC_DataAlignment_Select) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DataResolution_Select) refers to mg32x02z_dac_drv.o(.text.DAC_DataResolution_Select) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_IT_Config) refers to mg32x02z_dac_drv.o(.text.DAC_IT_Config) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_ITEA_Cmd) refers to mg32x02z_dac_drv.o(.text.DAC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetSingleFlagStatus) refers to mg32x02z_dac_drv.o(.text.DAC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetAllFlagStatus) refers to mg32x02z_dac_drv.o(.text.DAC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_ClearFlag) refers to mg32x02z_dac_drv.o(.text.DAC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DMA_Cmd) refers to mg32x02z_dac_drv.o(.text.DAC_DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_DeInit) refers to mg32x02z_dma_drv.o(.text.DMA_DeInit) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_BaseInitStructure_Init) refers to mg32x02z_dma_drv.o(.text.DMA_BaseInitStructure_Init) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerPin) for DMA_SetExtTriggerPin
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerMode) for DMA_SetExtTriggerMode
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_LoopMode_Cmd) for DMA_LoopMode_Cmd
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseSourceAddress) for DMA_AutoIncreaseSourceAddress
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseDestinationAddress) for DMA_AutoIncreaseDestinationAddress
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_Source_Select) for DMA_Source_Select
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_Destination_Select) for DMA_Destination_Select
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_SetBurstSize) for DMA_SetBurstSize
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_SetTransferDataNumber) for DMA_SetTransferDataNumber
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_SetSourceAddress) for DMA_SetSourceAddress
    mg32x02z_dma_drv.o(.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_SetDestinationAddress) for DMA_SetDestinationAddress
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_Base_Init) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerPin) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerPin) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerMode) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerMode) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LoopMode_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_LoopMode_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseSourceAddress) refers to mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseSourceAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseDestinationAddress) refers to mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseDestinationAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Source_Select) refers to mg32x02z_dma_drv.o(.text.DMA_Source_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Destination_Select) refers to mg32x02z_dma_drv.o(.text.DMA_Destination_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetBurstSize) refers to mg32x02z_dma_drv.o(.text.DMA_SetBurstSize) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetTransferDataNumber) refers to mg32x02z_dma_drv.o(.text.DMA_SetTransferDataNumber) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetSourceAddress) refers to mg32x02z_dma_drv.o(.text.DMA_SetSourceAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetDestinationAddress) refers to mg32x02z_dma_drv.o(.text.DMA_SetDestinationAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtraGPLChannel) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtraGPLChannel) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCHxUseGPL) refers to mg32x02z_dma_drv.o(.text.DMA_GetCHxUseGPL) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_PriorityMode_Select) refers to mg32x02z_dma_drv.o(.text.DMA_PriorityMode_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_FlashMode_Select) refers to mg32x02z_dma_drv.o(.text.DMA_FlashMode_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_StartRequest) refers to mg32x02z_dma_drv.o(.text.DMA_StartRequest) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Channel_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_Channel_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LastCycle_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_LastCycle_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Hold_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_Hold_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentSourceAddress) refers to mg32x02z_dma_drv.o(.text.DMA_GetCurrentSourceAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentDestinationAddress) refers to mg32x02z_dma_drv.o(.text.DMA_GetCurrentDestinationAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetRemainDataCount) refers to mg32x02z_dma_drv.o(.text.DMA_GetRemainDataCount) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetPriority) refers to mg32x02z_dma_drv.o(.text.DMA_SetPriority) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetChxSKIP3Mode) refers to mg32x02z_dma_drv.o(.text.DMA_SetChxSKIP3Mode) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_IT_Config) refers to mg32x02z_dma_drv.o(.text.DMA_IT_Config) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ITEA_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetSingleFlagStatus) refers to mg32x02z_dma_drv.o(.text.DMA_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetAllFlagStatus) refers to mg32x02z_dma_drv.o(.text.DMA_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearFlag) refers to mg32x02z_dma_drv.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetChannelFlag) refers to mg32x02z_dma_drv.o(.text.DMA_GetChannelFlag) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearChannelFlag) refers to mg32x02z_dma_drv.o(.text.DMA_ClearChannelFlag) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_Cmd) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_AddressDataBusMode_Config) refers to mg32x02z_emb_drv.o(.text.EMB_AddressDataBusMode_Config) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_WriteMode_Select) refers to mg32x02z_emb_drv.o(.text.EMB_WriteMode_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_AccessTime_Config) refers to mg32x02z_emb_drv.o(.text.EMB_AccessTime_Config) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_IT_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_IT_Cmd) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_ITEA_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_GetSingleFlagStatus) refers to mg32x02z_emb_drv.o(.text.EMB_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_GetAllFlagStatus) refers to mg32x02z_emb_drv.o(.text.EMB_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_ClearFlag) refers to mg32x02z_emb_drv.o(.text.EMB_ClearFlag) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SignalSWAP_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_SignalSWAP_Cmd) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SignalInverse_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_SignalInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SignalSW_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_SignalSW_Cmd) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SendSignalStatus_SW) refers to mg32x02z_emb_drv.o(.text.EMB_SendSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MWESignal_Select) refers to mg32x02z_emb_drv.o(.text.EMB_MWESignal_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MOESignal_Select) refers to mg32x02z_emb_drv.o(.text.EMB_MOESignal_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MCLKPreescaler_Select) refers to mg32x02z_emb_drv.o(.text.EMB_MCLKPreescaler_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_WESignalMode_Select) refers to mg32x02z_emb_drv.o(.text.EMB_WESignalMode_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_OESignalMode_Select) refers to mg32x02z_emb_drv.o(.text.EMB_OESignalMode_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_CEMode_Select) refers to mg32x02z_emb_drv.o(.text.EMB_CEMode_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MA1SignalOutputPin_Select) refers to mg32x02z_emb_drv.o(.text.EMB_MA1SignalOutputPin_Select) for [Anonymous Symbol]
    mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_DMA_Cmd) refers to mg32x02z_emb_drv.o(.text.EMB_DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerMode_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerMode_Select) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndMask_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndMask_Select) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerOrMask_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerOrMask_Select) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndUnmatch_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndUnmatch_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerITEA_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerEventFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerEventFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerITFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerITFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPinxTriggerEventSingleFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPinxTriggerEventSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerAndITFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerAndITFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerOrITFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerOrITFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerEventFlag) refers to mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerEventFlag) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerITFlag) refers to mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerITFlag) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetITSourceID) refers to mg32x02z_exic_drv.o(.text.EXIC_GetITSourceID) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_RXEV_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_RXEV_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_NMI_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMITrigger_SW) refers to mg32x02z_exic_drv.o(.text.EXIC_NMITrigger_SW) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_NMI_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Config) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortMode_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PortMode_Config) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinHighSpeedMode_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinPUResister_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInverse_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinOutputDrive_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInFilterDivider_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinFunction_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortFilterClockSource_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PortFilterClockSource_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_WritePort) refers to mg32x02z_gpio_drv.o(.text.GPIO_WritePort) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ReadPort) refers to mg32x02z_gpio_drv.o(.text.GPIO_ReadPort) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetPortBit) refers to mg32x02z_gpio_drv.o(.text.GPIO_SetPortBit) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ClearPortBit) refers to mg32x02z_gpio_drv.o(.text.GPIO_ClearPortBit) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetClearPortBit) refers to mg32x02z_gpio_drv.o(.text.GPIO_SetClearPortBit) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ParityCheck_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_ParityCheck_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckWord) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckWord) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_Low) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_Low) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_High) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_High) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_0) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_0) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_1) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_1) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_2) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_2) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_3) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_3) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_Inverse_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_Inverse_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ByteOrderChange_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_ByteOrderChange_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_16BitsByteOrderChange_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_16BitsByteOrderChange_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_BeforeBitOrderChange_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_BeforeBitOrderChange_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_AfterBitOrderChange_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_AfterBitOrderChange_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Mode_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_Mode_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Data_Size_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_Data_Size_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_SetInitValue) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_SetInitValue) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DMA_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DataInput) refers to mg32x02z_gpl_drv.o(.text.GPL_DataInput) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetOutputData) refers to mg32x02z_gpl_drv.o(.text.GPL_GetOutputData) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetAllFlagStatus) refers to mg32x02z_gpl_drv.o(.text.GPL_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetFlagStatus) refers to mg32x02z_gpl_drv.o(.text.GPL_GetFlagStatus) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockSource) refers to mg32x02z_i2c_drv.o(.text.I2C_SetClockSource) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockPrescaler) refers to mg32x02z_i2c_drv.o(.text.I2C_SetClockPrescaler) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockDivider) refers to mg32x02z_i2c_drv.o(.text.I2C_SetClockDivider) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLHighTime) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSCLHighTime) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLLowTime) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSCLLowTime) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetPreDriveTime) refers to mg32x02z_i2c_drv.o(.text.I2C_SetPreDriveTime) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GeneralCallAddress_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_GeneralCallAddress_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SlaveAddressDetect_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_SlaveAddressDetect_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress1Mask) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress1Mask) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveAddress) refers to mg32x02z_i2c_drv.o(.text.I2C_GetSlaveAddress) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_TXDMA_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_TXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_RXDMA_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_RXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_IT_Config) refers to mg32x02z_i2c_drv.o(.text.I2C_IT_Config) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ITEA_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetITSource) refers to mg32x02z_i2c_drv.o(.text.I2C_GetITSource) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetAllFlagStatus) refers to mg32x02z_i2c_drv.o(.text.I2C_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to mg32x02z_i2c_drv.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearFlag) refers to mg32x02z_i2c_drv.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventCode) refers to mg32x02z_i2c_drv.o(.text.I2C_GetEventCode) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventFlag) refers to mg32x02z_i2c_drv.o(.text.I2C_GetEventFlag) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearEventFlag) refers to mg32x02z_i2c_drv.o(.text.I2C_ClearEventFlag) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveMatchAddress) refers to mg32x02z_i2c_drv.o(.text.I2C_GetSlaveMatchAddress) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SendSBUF) refers to mg32x02z_i2c_drv.o(.text.I2C_SendSBUF) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ReceiveSBUF) refers to mg32x02z_i2c_drv.o(.text.I2C_ReceiveSBUF) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Divider_Select) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetCounter) refers to mg32x02z_iwdt_drv.o(.text.IWDT_GetCounter) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_RefreshCounter) refers to mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_StopModeWakeUpEvent_Config) refers to mg32x02z_iwdt_drv.o(.text.IWDT_StopModeWakeUpEvent_Config) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Cmd) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Cmd) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetAllFlagStatus) refers to mg32x02z_iwdt_drv.o(.text.IWDT_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetSingleFlagStatus) refers to mg32x02z_iwdt_drv.o(.text.IWDT_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_ClearFlag) refers to mg32x02z_iwdt_drv.o(.text.IWDT_ClearFlag) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_IT_Config) refers to mg32x02z_iwdt_drv.o(.text.IWDT_IT_Config) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllFlagStatus) refers to mg32x02z_mem_drv.o(.text.MEM_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetFlagStatus) refers to mg32x02z_mem_drv.o(.text.MEM_GetFlagStatus) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ClearFlag) refers to mg32x02z_mem_drv.o(.text.MEM_ClearFlag) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetFlashWaitState) refers to mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_IT_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_IT_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IT_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_IT_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ITEA_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorReset_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorHardFault_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_WriteFlashHold_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllAccessState) refers to mg32x02z_mem_drv.o(.text.MEM_GetAllAccessState) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAccessState) refers to mg32x02z_mem_drv.o(.text.MEM_GetAccessState) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_Access_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_Access_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Access_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_Access_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetWriteMode) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetWriteMode) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteMode) refers to mg32x02z_mem_drv.o(.text.MEM_SetWriteMode) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetWriteUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSinglePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetSinglePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultiplePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetMultiplePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSingleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetSingleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetMultipleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleWriteProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetMultipleWriteProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_APWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_APWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_ClearFlag) for MEM_ClearFlag
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_GetFlagStatus) for MEM_GetFlagStatus
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSizeLock) refers to mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPExecuteCode_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_IAPExecuteCode_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_IAPWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDRead_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPDRead_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPDWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetISPSize) refers to mg32x02z_mem_drv.o(.text.MEM_GetISPSize) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPRead_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPRead_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSinglePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPSinglePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultiplePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPMultiplePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSingleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPSingleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleWriteProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleWriteProtect) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_STOPModeLDO_Select) refers to mg32x02z_pw_drv.o(.text.PW_STOPModeLDO_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ONModeLDO_Select) refers to mg32x02z_pw_drv.o(.text.PW_ONModeLDO_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD2Trigger_Select) refers to mg32x02z_pw_drv.o(.text.PW_BOD2Trigger_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD2_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_BOD2_Cmd) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetBod2Status) refers to mg32x02z_pw_drv.o(.text.PW_GetBod2Status) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Threshold_Select) refers to mg32x02z_pw_drv.o(.text.PW_BOD1Threshold_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Trigger_Select) refers to mg32x02z_pw_drv.o(.text.PW_BOD1Trigger_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_BOD1_Cmd) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_VoltageBuffer) refers to mg32x02z_pw_drv.o(.text.PW_VoltageBuffer) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD0_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_BOD0_Cmd) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetBod1Status) refers to mg32x02z_pw_drv.o(.text.PW_GetBod1Status) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSLEEPModeContinuous_Config) refers to mg32x02z_pw_drv.o(.text.PW_PeriphSLEEPModeContinuous_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeContinuous_Config) refers to mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeContinuous_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeWakeUp_Config) refers to mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeWakeUp_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_WakeUpDelay_Select) refers to mg32x02z_pw_drv.o(.text.PW_WakeUpDelay_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetWakeUpMode) refers to mg32x02z_pw_drv.o(.text.PW_GetWakeUpMode) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_WakeUpMode_Select) refers to mg32x02z_pw_drv.o(.text.PW_WakeUpMode_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetAllFlagStatus) refers to mg32x02z_pw_drv.o(.text.PW_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetSingleFlagStatus) refers to mg32x02z_pw_drv.o(.text.PW_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ClearFlag) refers to mg32x02z_pw_drv.o(.text.PW_ClearFlag) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_IT_Config) refers to mg32x02z_pw_drv.o(.text.PW_IT_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ITEA_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetAllFlagStatus) refers to mg32x02z_rst_drv.o(.text.RST_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetSingleFlagStatus) refers to mg32x02z_rst_drv.o(.text.RST_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ClearFlag) refers to mg32x02z_rst_drv.o(.text.RST_ClearFlag) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_CRstSource_Config) refers to mg32x02z_rst_drv.o(.text.RST_CRstSource_Config) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstSource_Config) refers to mg32x02z_rst_drv.o(.text.RST_WRstSource_Config) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstGPIOLock_Config) refers to mg32x02z_rst_drv.o(.text.RST_WRstGPIOLock_Config) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ForceRstPeriph_SW) refers to mg32x02z_rst_drv.o(.text.RST_ForceRstPeriph_SW) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_TriggerSystemRst_SW) refers to mg32x02z_rst_drv.o(.text.RST_TriggerSystemRst_SW) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WWDTWRstMask_Cmd) refers to mg32x02z_rst_drv.o(.text.RST_WWDTWRstMask_Cmd) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_USBRstMode_Select) refers to mg32x02z_rst_drv.o(.text.RST_USBRstMode_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_CLK_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_CLK_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_PreDivider_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_PreDivider_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Divider_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_Divider_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmCompareValue) refers to mg32x02z_rtc_drv.o(.text.RTC_GetAlarmCompareValue) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetAlarmCompareValue) refers to mg32x02z_rtc_drv.o(.text.RTC_SetAlarmCompareValue) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmState) refers to mg32x02z_rtc_drv.o(.text.RTC_GetAlarmState) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Alarm_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_Alarm_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetReloadReg) refers to mg32x02z_rtc_drv.o(.text.RTC_GetReloadReg) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetCaptureReg) refers to mg32x02z_rtc_drv.o(.text.RTC_GetCaptureReg) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetReloadReg) refers to mg32x02z_rtc_drv.o(.text.RTC_SetReloadReg) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_RCR_Mode_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_RCR_Mode_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_StopModeWakeUpEvent_Config) refers to mg32x02z_rtc_drv.o(.text.RTC_StopModeWakeUpEvent_Config) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_OutputSignal_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_OutputSignal_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_InitOutputSignalState_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_InitOutputSignalState_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_SW) refers to mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_SW) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAllFlagStatus) refers to mg32x02z_rtc_drv.o(.text.RTC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetSingleFlagStatus) refers to mg32x02z_rtc_drv.o(.text.RTC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ClearFlag) refers to mg32x02z_rtc_drv.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_IT_Config) refers to mg32x02z_rtc_drv.o(.text.RTC_IT_Config) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ITEA_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DeInit) refers to mg32x02z_spi_drv.o(.text.SPI_DeInit) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Clock_Select) refers to mg32x02z_spi_drv.o(.text.SPI_Clock_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_PreDivider_Select) refers to mg32x02z_spi_drv.o(.text.SPI_PreDivider_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Prescaler_Select) refers to mg32x02z_spi_drv.o(.text.SPI_Prescaler_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Divider_Select) refers to mg32x02z_spi_drv.o(.text.SPI_Divider_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TriggerClockToggle) refers to mg32x02z_spi_drv.o(.text.SPI_TriggerClockToggle) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DualTransferRate_Select) refers to mg32x02z_spi_drv.o(.text.SPI_DualTransferRate_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveHighSpeed_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveHighSpeed_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModeAndNss_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ModeAndNss_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModfHappenedAction_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ModfHappenedAction_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputSignal_Select) refers to mg32x02z_spi_drv.o(.text.SPI_NSSInputSignal_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SingleMasterModeNssPulse_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SingleMasterModeNssPulse_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputInverse_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssInputInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputInverse_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssOutputInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputOutputSoftwareControl_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssInputOutputSoftwareControl_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputSoftwareControl_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssInputSoftwareControl_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputSoftwareControl_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssOutputSoftwareControl_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetNSSInputStatust) refers to mg32x02z_spi_drv.o(.text.SPI_GetNSSInputStatust) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputStatusControl_SW) refers to mg32x02z_spi_drv.o(.text.SPI_NSSInputStatusControl_SW) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSOutputStatusControl_SW) refers to mg32x02z_spi_drv.o(.text.SPI_NSSOutputStatusControl_SW) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssIdleTime_Select) refers to mg32x02z_spi_drv.o(.text.SPI_NssIdleTime_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPhase_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ClockPhase_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPolarity_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ClockPolarity_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_FirstBit_Select) refers to mg32x02z_spi_drv.o(.text.SPI_FirstBit_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxShadowBufferLevel) refers to mg32x02z_spi_drv.o(.text.SPI_GetRxShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearRxData) refers to mg32x02z_spi_drv.o(.text.SPI_ClearRxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetDataBufferReceivedBytes) refers to mg32x02z_spi_drv.o(.text.SPI_GetDataBufferReceivedBytes) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetDataBufferReceivedBytes) refers to mg32x02z_spi_drv.o(.text.SPI_SetDataBufferReceivedBytes) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearTxData) refers to mg32x02z_spi_drv.o(.text.SPI_ClearTxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxShadowBufferLevel) refers to mg32x02z_spi_drv.o(.text.SPI_GetTxShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxData) refers to mg32x02z_spi_drv.o(.text.SPI_GetRxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetTxData) refers to mg32x02z_spi_drv.o(.text.SPI_SetTxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxData) refers to mg32x02z_spi_drv.o(.text.SPI_GetTxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveModeReceivedThreshold_Select) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveModeReceivedThreshold_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataSize_Select) refers to mg32x02z_spi_drv.o(.text.SPI_DataSize_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLine_Select) refers to mg32x02z_spi_drv.o(.text.SPI_DataLine_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLineOutput_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_DataLineOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SendCopyMode_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SendCopyMode_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_BidirectionalOutput_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_BidirectionalOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TransferBidirection_Select) refers to mg32x02z_spi_drv.o(.text.SPI_TransferBidirection_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MosiMisoSignalSwap_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_MosiMisoSignalSwap_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_D03D47SignalSwap_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_D03D47SignalSwap_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_LoopBackMode_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_LoopBackMode_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockOutputSignal_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ClockOutputSignal_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IdleStateDataMode_Select) refers to mg32x02z_spi_drv.o(.text.SPI_IdleStateDataMode_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveAutoFullDuplex_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveAutoFullDuplex_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveSendDataDirectUpdate_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveSendDataDirectUpdate_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TXDMA_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_TXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMA_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_RXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMAPreCatch_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_RXDMAPreCatch_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetAllFlagStatus) refers to mg32x02z_spi_drv.o(.text.SPI_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetSingleFlagStatus) refers to mg32x02z_spi_drv.o(.text.SPI_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearFlag) refers to mg32x02z_spi_drv.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IT_Config) refers to mg32x02z_spi_drv.o(.text.SPI_IT_Config) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ITEA_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveAsynchronous_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveAsynchronous_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MasterDataOutIdleState_Select) refers to mg32x02z_spi_drv.o(.text.SPI_MasterDataOutIdleState_Select) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ITEA_Cmd) refers to mg32x02z_sys_drv.o(.text.SYS_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_GetChipMID) refers to mg32x02z_sys_drv.o(.text.SYS_GetChipMID) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadGeneralReg) refers to mg32x02z_sys_drv.o(.text.SYS_ReadGeneralReg) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteGeneralReg) refers to mg32x02z_sys_drv.o(.text.SYS_WriteGeneralReg) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadBackupReg) refers to mg32x02z_sys_drv.o(.text.SYS_ReadBackupReg) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteBackupReg) refers to mg32x02z_sys_drv.o(.text.SYS_WriteBackupReg) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DeInit) refers to mg32x02z_tm_drv.o(.text.TM_DeInit) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBaseStruct_Init) refers to mg32x02z_tm_drv.o(.text.TM_TimeBaseStruct_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_Config) for TM_Prescaler_Config
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_Counter_Config) for TM_Counter_Config
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_TimerMode_Select) for TM_TimerMode_Select
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_CounterClock_Select) for TM_CounterClock_Select
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_PrescalerClock_Select) for TM_PrescalerClock_Select
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_SetInternalClockDivider) for TM_SetInternalClockDivider
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_SetCounterDirection) for TM_SetCounterDirection
    mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_SetPrescalerDirection) for TM_SetPrescalerDirection
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Config) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Config) refers to mg32x02z_tm_drv.o(.text.TM_Counter_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimerMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_TimerMode_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CounterClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_CounterClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PrescalerClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_PrescalerClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetInternalClockDivider) refers to mg32x02z_tm_drv.o(.text.TM_SetInternalClockDivider) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCounterDirection) refers to mg32x02z_tm_drv.o(.text.TM_SetCounterDirection) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetPrescalerDirection) refers to mg32x02z_tm_drv.o(.text.TM_SetPrescalerDirection) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalClockSource_Select) refers to mg32x02z_tm_drv.o(.text.TM_InternalClockSource_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_ExternalClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITRx_Select) refers to mg32x02z_tm_drv.o(.text.TM_ITRx_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCounter) refers to mg32x02z_tm_drv.o(.text.TM_GetCounter) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_Counter_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_SW) refers to mg32x02z_tm_drv.o(.text.TM_Counter_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetPrescaler) refers to mg32x02z_tm_drv.o(.text.TM_GetPrescaler) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_SW) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Timer_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GatePrescaler_SW) refers to mg32x02z_tm_drv.o(.text.TM_GatePrescaler_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GateCounter_SW) refers to mg32x02z_tm_drv.o(.text.TM_GateCounter_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetPrescaler_SW) refers to mg32x02z_tm_drv.o(.text.TM_ResetPrescaler_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetCounter_SW) refers to mg32x02z_tm_drv.o(.text.TM_ResetCounter_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TriggerSource_Select) refers to mg32x02z_tm_drv.o(.text.TM_TriggerSource_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGICounter_Select) refers to mg32x02z_tm_drv.o(.text.TM_TRGICounter_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGIPrescaler_Select) refers to mg32x02z_tm_drv.o(.text.TM_TRGIPrescaler_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Config) refers to mg32x02z_tm_drv.o(.text.TM_UEV_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGOOut_SW) refers to mg32x02z_tm_drv.o(.text.TM_TRGOOut_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGO_Select) refers to mg32x02z_tm_drv.o(.text.TM_TRGO_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseTRGO_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseTRGO_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN0Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN0TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN1Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN1TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN2Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN2TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN3Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN3TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOutSource_Select) refers to mg32x02z_tm_drv.o(.text.TM_ClockOutSource_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOut_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ClockOut_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CKOOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_CKOOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0z_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC0z_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0zOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0zBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC0zOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC00Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC00Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC01Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC01Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC02Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC02Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0N_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC0N_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC0NOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0NBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC0H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1z_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC1z_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1zOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1zBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC1zOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC10Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC10Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC11Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC11Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC12Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC12Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1N_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC1N_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC1NOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1NBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC1H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC2_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2OutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2OutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2BreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC2Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2N_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC2N_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC2NOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2NBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC2H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC3_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3OutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC3OutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC3BreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC3Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC3H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC3HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalBreakEvent_Config) refers to mg32x02z_tm_drv.o(.text.TM_ExternalBreakEvent_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalBreakEvent_Config) refers to mg32x02z_tm_drv.o(.text.TM_InternalBreakEvent_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakTrigger_SW) refers to mg32x02z_tm_drv.o(.text.TM_BreakTrigger_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH3_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_BreakCH3_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH012_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_BreakCH012_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_BreakMode_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC0BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC1BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC2BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC3BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadEventSource_Config) refers to mg32x02z_tm_drv.o(.text.TM_PreloadEventSource_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadActive_SW) refers to mg32x02z_tm_drv.o(.text.TM_PreloadActive_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC0z_Config) refers to mg32x02z_tm_drv.o(.text.TM_PreloadOC0z_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC1z_Config) refers to mg32x02z_tm_drv.o(.text.TM_PreloadOC1z_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH0Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH0Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH1Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH1Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH2Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH2Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH3Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH3Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OutputDelayMode_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OutputDelayMode_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC0Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC0Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC1Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC1Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC2Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC2Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC3Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC3Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC0OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC0OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC1OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC1OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC2OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC2OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC3OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC3OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC0_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC0_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC1_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC1_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC2_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC2_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC3_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC3_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC0_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC0_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC1_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC1_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC2_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC2_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC3_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC3_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC0A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC1A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC2A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC3A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC0B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC1B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC2B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC3B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC0A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC1A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC2A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC3A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC0B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC1B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC2B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC3B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF0A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF1A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF2A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF3A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF0B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF1B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF2B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF3B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ReloadFromCCxB_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ReloadFromCCxB_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AlignmentMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_AlignmentMode_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEI_Select) refers to mg32x02z_tm_drv.o(.text.TM_QEI_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIReset_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_QEIReset_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIResetIDX_Select) refers to mg32x02z_tm_drv.o(.text.TM_QEIResetIDX_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseQEIDirection) refers to mg32x02z_tm_drv.o(.text.TM_InverseQEIDirection) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AutoStop_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_AutoStop_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepeatAutoStopMode_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_RepeatAutoStopMode_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepetitionCounter_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_RepetitionCounter_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ControlPWM_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ControlPWM_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepetitionCounter_Config) refers to mg32x02z_tm_drv.o(.text.TM_RepetitionCounter_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepetitionCounterClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_RepetitionCounterClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadZoneClockDivider) refers to mg32x02z_tm_drv.o(.text.TM_SetDeadZoneClockDivider) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadTime) refers to mg32x02z_tm_drv.o(.text.TM_SetDeadTime) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IT_Config) refers to mg32x02z_tm_drv.o(.text.TM_IT_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITEA_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetSingleFlagStatus) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetAllFlagStatus) refers to mg32x02z_tm_drv.o(.text.TM_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClearFlag) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ExtTRGI_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseExtTRGI_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseExtTRGI_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI2UEV_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ExtTRGI2UEV_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ForceUpdate_SW) refers to mg32x02z_tm_drv.o(.text.TM_ForceUpdate_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_UEV_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAChannel_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_DMAChannel_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAUpdateMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_DMAUpdateMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IT_Config) refers to mg32x02z_urt_drv.o(.text.URT_IT_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetITStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ITEA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITAllFlagStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetITAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITSingleFlagStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetITSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearITFlag) refers to mg32x02z_urt_drv.o(.text.URT_ClearITFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxDifferentFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxDifferentFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxHoldFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxHoldFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRxHoldFlag) refers to mg32x02z_urt_drv.o(.text.URT_ClearRxHoldFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetIrDaBusyFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetIrDaBusyFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBreakBusyFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetBreakBusyFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxBusyFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxBusyFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxNoiseFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxNoiseFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataCharacter_Config) refers to mg32x02z_urt_drv.o(.text.URT_DataCharacter_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mode_Select) refers to mg32x02z_urt_drv.o(.text.URT_Mode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataLine_Select) refers to mg32x02z_urt_drv.o(.text.URT_DataLine_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_HalfDuplexMode_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_HalfDuplexMode_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_LoopBackMode_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_LoopBackMode_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TX_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TX_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RX_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RX_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RXInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TXInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NoiseDataSkip_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NoiseDataSkip_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Config) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorClock_Select) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorClock_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateCounterClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateCounterClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPreReload) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPreReload) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCountReload) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCountReload) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPre) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPre) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCount) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCount) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignalSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_CLKSignalSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignal_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CLKSignal_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlBROSignalStatus_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlBROSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlCLKSignalStatus_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlCLKSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXOverSamplingSampleNumber_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXOverSamplingSampleNumber_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingSampleNumber_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXOverSamplingSampleNumber_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXOverSamplingMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeroutTimer_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TimeroutTimer_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TriggerTimeoutTimerRst_SW) refers to mg32x02z_urt_drv.o(.text.URT_TriggerTimeoutTimerRst_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_TimeoutMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutTimerClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_TimeoutTimerClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleDetect_Select) refers to mg32x02z_urt_drv.o(.text.URT_IdleDetect_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_IdleTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_RXTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_BreakTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_CalibrationTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlTMOSignalStatus_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlTMOSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerCounter) refers to mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerCounter) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCounter) refers to mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCounter) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerReload) refers to mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerReload) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCompare) refers to mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCompare) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShadowBufferLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetTXShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShadowBufferLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetRXShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearTXData) refers to mg32x02z_urt_drv.o(.text.URT_ClearTXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRXData) refers to mg32x02z_urt_drv.o(.text.URT_ClearRXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXDataRegLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetTXDataRegLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXShadowBufferThreshold_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXShadowBufferThreshold_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXDataRegLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetRXDataRegLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXData) refers to mg32x02z_urt_drv.o(.text.URT_GetRXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureData) refers to mg32x02z_urt_drv.o(.text.URT_GetCaptureData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureStatusBit) refers to mg32x02z_urt_drv.o(.text.URT_GetCaptureStatusBit) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferStatusBit) refers to mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferStatusBit) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShiftBufferData) refers to mg32x02z_urt_drv.o(.text.URT_GetTXShiftBufferData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferData) refers to mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTS_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RTS_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTSInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RTSInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlRTS_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlRTS_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTS_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CTS_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCTSLineStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetCTSLineStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTSInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CTSInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DE_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_DE_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_DEInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEGuardTime_Select) refers to mg32x02z_urt_drv.o(.text.URT_DEGuardTime_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdlehandleMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_IdlehandleMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXHalt_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TXHalt_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXGuardTime_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXGuardTime_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTXData) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPHAMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_CPHAMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPOLMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_CPOLMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NssInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssSW_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NssSW_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlNSS_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlNSS_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssInput_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NssInput_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SPIMasterDataOutputIdleStatus_Select) refers to mg32x02z_urt_drv.o(.text.URT_SPIMasterDataOutputIdleStatus_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SYNCMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_SYNCMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddressMask) refers to mg32x02z_urt_drv.o(.text.URT_SetSlaveAddressMask) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddress) refers to mg32x02z_urt_drv.o(.text.URT_SetSlaveAddress) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GlobalAddress_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_GlobalAddress_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendAddress) refers to mg32x02z_urt_drv.o(.text.URT_SendAddress) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_CalibrationMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoCalibration_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_AutoCalibration_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Calibration_SW) refers to mg32x02z_urt_drv.o(.text.URT_Calibration_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationCompleteDataHold_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CalibrationCompleteDataHold_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExtraBreakBit_Select) refers to mg32x02z_urt_drv.o(.text.URT_ExtraBreakBit_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendBreak) refers to mg32x02z_urt_drv.o(.text.URT_SendBreak) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCalibrationResult) refers to mg32x02z_urt_drv.o(.text.URT_GetCalibrationResult) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXDMA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXDMA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakDisableDMA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_BreakDisableDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Config) refers to mg32x02z_urt_drv.o(.text.URT_IrDA_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_IrDA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoExitMuteMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_AutoExitMuteMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoEnterMuteMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_AutoEnterMuteMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mute_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_Mute_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXParityError_Config) refers to mg32x02z_urt_drv.o(.text.URT_RXParityError_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorDetectMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXErrorDetectMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorResendTime_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXErrorResendTime_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RxTxSwap_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RxTxSwap_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExternalClockMux_Select) refers to mg32x02z_urt_drv.o(.text.URT_ExternalClockMux_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Transceiver_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_Transceiver_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_V33_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_V33_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_V33toVDD_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_V33toVDD_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Function_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_Function_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_DriveStrength_Select) refers to mg32x02z_usb_drv.o(.text.USB_DriveStrength_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_PDResistorMode_Select) refers to mg32x02z_usb_drv.o(.text.USB_PDResistorMode_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_PUResistorMode_Select) refers to mg32x02z_usb_drv.o(.text.USB_PUResistorMode_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_LVRModeInSTOP_Select) refers to mg32x02z_usb_drv.o(.text.USB_LVRModeInSTOP_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetBusStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetBusStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetBusEventStatus2) refers to mg32x02z_usb_drv.o(.text.USB_GetBusEventStatus2) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetDPDMStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetDPDMStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Connect_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_Connect_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetAddress) refers to mg32x02z_usb_drv.o(.text.USB_SetAddress) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetRemoteWakeupTime) refers to mg32x02z_usb_drv.o(.text.USB_SetRemoteWakeupTime) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_TriggerRemoteWakeup) refers to mg32x02z_usb_drv.o(.text.USB_TriggerRemoteWakeup) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SoftwareControlRemoteWakeup_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_SoftwareControlRemoteWakeup_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetRemoteWakeup_SW) refers to mg32x02z_usb_drv.o(.text.USB_SetRemoteWakeup_SW) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SuspendSignalMode_Select) refers to mg32x02z_usb_drv.o(.text.USB_SuspendSignalMode_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_NoResponse_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_NoResponse_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetFrameNumber) refers to mg32x02z_usb_drv.o(.text.USB_GetFrameNumber) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointStatus) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetDoubleBufferEndpointStatus) refers to mg32x02z_usb_drv.o(.text.USB_SetDoubleBufferEndpointStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointOUTSequenceBit) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointOUTSequenceBit) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointINSequenceBit) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointINSequenceBit) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointOUTSequenceBit) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointOUTSequenceBit) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointINSequenceBit) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointINSequenceBit) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointAddress) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointAddress) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointFlagStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointFlagStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointITFlagStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointITFlagStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ClearEndpointFlag) refers to mg32x02z_usb_drv.o(.text.USB_ClearEndpointFlag) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetSETUPStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetSETUPStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ClearSETUPStatus) refers to mg32x02z_usb_drv.o(.text.USB_ClearSETUPStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_EndpintIT_Config) refers to mg32x02z_usb_drv.o(.text.USB_EndpintIT_Config) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointRXSize) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointRXSize) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointTXSize) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointTXSize) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1TXSize) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer1TXSize) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0TXSize) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer0TXSize) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointRXData) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointRXData) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointDoubleBufferRXData) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointDoubleBufferRXData) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointTXData) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointTXData) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBufferTXData) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBufferTXData) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.text.USB_SetEndpointRXBlock) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointBlockOf32Byte) for USB_SetEndpointBlockOf32Byte
    mg32x02z_usb_drv.o(.text.USB_SetEndpointRXBlock) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointBlockOf2Byte) for USB_SetEndpointBlockOf2Byte
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointRXBlock) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointRXBlock) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointBlockOf32Byte) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointBlockOf32Byte) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointBlockOf2Byte) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointBlockOf2Byte) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointTXDataAddress) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointTXDataAddress) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointRXDataAddress) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointRXDataAddress) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0Address) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer0Address) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1Address) refers to mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer1Address) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointTXDataAddress) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointTXDataAddress) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointRXDataAddress) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointRXDataAddress) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer0Address) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointDoubleBuffer0Address) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer1Address) refers to mg32x02z_usb_drv.o(.text.USB_GetEndpointDoubleBuffer1Address) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_EndpointMode_Select) refers to mg32x02z_usb_drv.o(.text.USB_EndpointMode_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_EndpointDoubleBufferMode_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_EndpointDoubleBufferMode_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_TriggerEndpointRst) refers to mg32x02z_usb_drv.o(.text.USB_TriggerEndpointRst) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ITEA_Cmd) refers to mg32x02z_usb_drv.o(.text.USB_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_IT_Config) refers to mg32x02z_usb_drv.o(.text.USB_IT_Config) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetITAllFlagStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetITAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetITIEAllStatus) refers to mg32x02z_usb_drv.o(.text.USB_GetITIEAllStatus) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ClearITFlag) refers to mg32x02z_usb_drv.o(.text.USB_ClearITFlag) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_LPMhandshakeMode_Select) refers to mg32x02z_usb_drv.o(.text.USB_LPMhandshakeMode_Select) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetLPMBESL) refers to mg32x02z_usb_drv.o(.text.USB_GetLPMBESL) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetLPMbRemoteWake) refers to mg32x02z_usb_drv.o(.text.USB_GetLPMbRemoteWake) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_DMARXSEL_Config) refers to mg32x02z_usb_drv.o(.text.USB_DMARXSEL_Config) for [Anonymous Symbol]
    mg32x02z_usb_drv.o(.ARM.exidx.text.USB_DMATXSEL_Config) refers to mg32x02z_usb_drv.o(.text.USB_DMATXSEL_Config) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_CLK_Select) refers to mg32x02z_wwdt_drv.o(.text.WWDT_CLK_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_DIV_Select) refers to mg32x02z_wwdt_drv.o(.text.WWDT_DIV_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_PDIV_Select) refers to mg32x02z_wwdt_drv.o(.text.WWDT_PDIV_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_Cmd) refers to mg32x02z_wwdt_drv.o(.text.WWDT_Cmd) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetCounter) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetCounter) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RefreshCounter) refers to mg32x02z_wwdt_drv.o(.text.WWDT_RefreshCounter) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetReloadReg) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetReloadReg) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetReloadReg) refers to mg32x02z_wwdt_drv.o(.text.WWDT_SetReloadReg) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWindowThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetWindowThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWindowThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_SetWindowThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWarningThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetWarningThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWarningThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_SetWarningThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RstEvent_Config) refers to mg32x02z_wwdt_drv.o(.text.WWDT_RstEvent_Config) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetAllFlagStatus) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetSingleFlagStatus) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_ClearFlag) refers to mg32x02z_wwdt_drv.o(.text.WWDT_ClearFlag) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_IT_Config) refers to mg32x02z_wwdt_drv.o(.text.WWDT_IT_Config) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.InitTick) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    mg32x02z__common_drv.o(.text.InitTick) refers to mg32x02z__common_drv.o(.text.SysTick_Config) for SysTick_Config
    mg32x02z__common_drv.o(.text.InitTick) refers to mg32x02z__common_drv.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    mg32x02z__common_drv.o(.ARM.exidx.text.InitTick) refers to mg32x02z__common_drv.o(.text.InitTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.SysTick_Config) refers to mg32x02z__common_drv.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    mg32x02z__common_drv.o(.ARM.exidx.text.SysTick_Config) refers to mg32x02z__common_drv.o(.text.SysTick_Config) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.__NVIC_SetPriority) refers to mg32x02z__common_drv.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.IncTick) refers to mg32x02z__common_drv.o(.bss.uwTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.IncTick) refers to mg32x02z__common_drv.o(.text.IncTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.GetTick) refers to mg32x02z__common_drv.o(.bss.uwTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.GetTick) refers to mg32x02z__common_drv.o(.text.GetTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.Delay) refers to mg32x02z__common_drv.o(.text.GetTick) for GetTick
    mg32x02z__common_drv.o(.ARM.exidx.text.Delay) refers to mg32x02z__common_drv.o(.text.Delay) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.SuspendTick) refers to mg32x02z__common_drv.o(.text.SuspendTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.ResumeTick) refers to mg32x02z__common_drv.o(.text.ResumeTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.ProtectModuleReg) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.UnProtectModuleReg) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.LockModuleReg) refers to mg32x02z__common_drv.o(.text.LockModuleReg) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpgt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpeq.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mg32x02z.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mg32x02z.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing prsm3.o(.text), (0 bytes).
    Removing prsm3.o(.ARM.exidx.text.PRSM3AddNewByte), (8 bytes).
    Removing prsm3.o(.ARM.exidx.text.PRSM3ReceiveLineComplete), (8 bytes).
    Removing prsm3.o(.ARM.exidx.text.ReturnReply), (8 bytes).
    Removing prsm3.o(.ARM.exidx.text.clearBuffer), (8 bytes).
    Removing prsm3.o(.data.PosylkaLen), (4 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.TIM01_Callback), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TIM10_Callback), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TIM16_Callback), (8 bytes).
    Removing timers.o(.ARM.exidx.text.delay_one_ms), (8 bytes).
    Removing timers.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing timers.o(.ARM.exidx.text.delay_one_us), (8 bytes).
    Removing timers.o(.ARM.exidx.text.delay_us), (8 bytes).
    Removing timers.o(.bss.alarm), (1 bytes).
    Removing timers.o(.bss.koncevik), (1 bytes).
    Removing crc.o(.text), (0 bytes).
    Removing crc.o(.ARM.exidx.text.Do_CRC), (8 bytes).
    Removing crc.o(.ARM.exidx.text.CRCisWrong), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.URT_Rx_Callback), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT_Write), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT_WriteWord), (8 bytes).
    Removing usart.o(.text.URT_Print), (36 bytes).
    Removing usart.o(.ARM.exidx.text.URT_Print), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT_IsTxReady), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT_IsTxEndTransmission), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.SetAddress), (32 bytes).
    Removing gpio.o(.ARM.exidx.text.SetAddress), (8 bytes).
    Removing gpio.o(.text.InputRead), (28 bytes).
    Removing gpio.o(.ARM.exidx.text.InputRead), (8 bytes).
    Removing gpio.o(.text.LatchTest), (80 bytes).
    Removing gpio.o(.ARM.exidx.text.LatchTest), (8 bytes).
    Removing gpio.o(.text.UpdateLED), (88 bytes).
    Removing gpio.o(.ARM.exidx.text.UpdateLED), (8 bytes).
    Removing gpio.o(.data.pisk_max), (1 bytes).
    Removing gpio.o(.bss.mn), (1 bytes).
    Removing gpio.o(.data.ThrHigh), (1 bytes).
    Removing gpio.o(.data.ThrLow), (1 bytes).
    Removing gpio.o(.data.MaxValue), (1 bytes).
    Removing gpio.o(.data.InputsAddr), (16 bytes).
    Removing gpio.o(.data.LEDOrder), (16 bytes).
    Removing gpio.o(.bss.ModInpVar), (16 bytes).
    Removing wdt.o(.text), (0 bytes).
    Removing wdt.o(.ARM.exidx.text.wdt_enable), (8 bytes).
    Removing wdt.o(.text.wdt_reset), (8 bytes).
    Removing wdt.o(.ARM.exidx.text.wdt_reset), (8 bytes).
    Removing wdt.o(.ARM.exidx.text.wdt_disable), (8 bytes).
    Removing timers_irq.o(.text), (0 bytes).
    Removing timers_irq.o(.text.TIM00_Callback), (2 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TIM00_Callback), (8 bytes).
    Removing timers_irq.o(.text.TIM01_Callback), (2 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TIM01_Callback), (8 bytes).
    Removing timers_irq.o(.text.TIM10_Callback), (2 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TIM10_Callback), (8 bytes).
    Removing timers_irq.o(.text.TIM16_Callback), (2 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TIM16_Callback), (8 bytes).
    Removing timers_irq.o(.text.TM00_IRQ), (92 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TM00_IRQ), (8 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TM01_IRQ), (8 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TM10_IRQ), (8 bytes).
    Removing timers_irq.o(.ARM.exidx.text.TM16_IRQ), (8 bytes).
    Removing usart_irq.o(.text), (0 bytes).
    Removing usart_irq.o(.text.URT_Rx_Callback), (2 bytes).
    Removing usart_irq.o(.ARM.exidx.text.URT_Rx_Callback), (8 bytes).
    Removing usart_irq.o(.ARM.exidx.text.URT_Tx_Callback), (8 bytes).
    Removing usart_irq.o(.ARM.exidx.text.URT0_IRQ), (8 bytes).
    Removing flash.o(.text), (0 bytes).
    Removing flash.o(.text.FindLastBlockPos), (36 bytes).
    Removing flash.o(.ARM.exidx.text.FindLastBlockPos), (8 bytes).
    Removing flash.o(.text.FillStructureDefault), (32 bytes).
    Removing flash.o(.ARM.exidx.text.FillStructureDefault), (8 bytes).
    Removing flash.o(.text.FlashStartupHandle), (144 bytes).
    Removing flash.o(.ARM.exidx.text.FlashStartupHandle), (8 bytes).
    Removing flash.o(.ARM.exidx.text.GetBlocksLeft), (8 bytes).
    Removing flash.o(.text.IsEnoughSpace), (20 bytes).
    Removing flash.o(.ARM.exidx.text.IsEnoughSpace), (8 bytes).
    Removing flash.o(.text.FlashUpdate), (68 bytes).
    Removing flash.o(.ARM.exidx.text.FlashUpdate), (8 bytes).
    Removing iap.o(.text), (0 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Init), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Erase_OnePage), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Erase_Page), (8 bytes).
    Removing iap.o(.text.IAP_FullErase), (20 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_FullErase), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_ReadByte), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_ReadWord), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_CopyRAMInIAP), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Multiple_Write), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_CopyIAPInRAM), (8 bytes).
    Removing iap.o(.text.IAP_IsEqualToRAM), (82 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_IsEqualToRAM), (8 bytes).
    Removing iap.o(.text.IAP_IsAreaEmpty), (70 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_IsAreaEmpty), (8 bytes).
    Removing iap.o(.text.IAP_IsFullEmpty), (16 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_IsFullEmpty), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_GetPageNumberOfByte), (8 bytes).
    Removing iap.o(.text.IAP_GetNumberOfPages), (10 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_GetNumberOfPages), (8 bytes).
    Removing iap.o(.text.IAP_WriteWord), (36 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_WriteWord), (8 bytes).
    Removing iap.o(.text.IAP_Single_Write), (156 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Single_Write), (8 bytes).
    Removing onewire.o(.text), (0 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_Start), (8 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_Write), (8 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_Read), (8 bytes).
    Removing ds18b20.o(.text), (0 bytes).
    Removing ds18b20.o(.text.DS18B20_GetTemperature), (96 bytes).
    Removing ds18b20.o(.ARM.exidx.text.DS18B20_GetTemperature), (8 bytes).
    Removing keys.o(.text), (0 bytes).
    Removing keys.o(.ARM.exidx.text.FillFlash), (8 bytes).
    Removing keys.o(.ARM.exidx.text.CopyFlash), (8 bytes).
    Removing keys.o(.ARM.exidx.text.CheckTruth), (8 bytes).
    Removing keys.o(.ARM.exidx.text.AddKey), (8 bytes).
    Removing keys.o(.ARM.exidx.text.RemoveKey), (8 bytes).
    Removing keys.o(.text.ChangeKey), (2 bytes).
    Removing keys.o(.ARM.exidx.text.ChangeKey), (8 bytes).
    Removing keys.o(.ARM.exidx.text.DS1990_GetID), (8 bytes).
    Removing keys.o(.data.key4), (8 bytes).
    Removing keys.o(.data.key5), (8 bytes).
    Removing keys.o(.data.key_test), (8 bytes).
    Removing keys.o(.data.keys), (20 bytes).
    Removing keys.o(.data.key_count), (4 bytes).
    Removing keys_old.o(.text), (0 bytes).
    Removing mg32x02z_csc_init.o(.text), (0 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_IHRCO_Enable), (8 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_XOSC_Enable), (8 bytes).
    Removing mg32x02z_csc_init.o(.text.CSC_EXTCK_Enable), (32 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_EXTCK_Enable), (8 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_Init), (8 bytes).
    Removing mg32x02z_chipinit.o(.text), (0 bytes).
    Removing mg32x02z_chipinit.o(.ARM.exidx.text.ChipInit), (8 bytes).
    Removing mg32x02z_chipinit.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing mg32x02z_chipinit.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing mg32x02z_gpio_init.o(.text), (0 bytes).
    Removing mg32x02z_gpio_init.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing mg32x02z_rst_init.o(.text), (0 bytes).
    Removing mg32x02z_rst_init.o(.ARM.exidx.text.RST_Init), (8 bytes).
    Removing mg32x02z_tm_init.o(.text), (0 bytes).
    Removing mg32x02z_tm_init.o(.ARM.exidx.text.TM_Init), (8 bytes).
    Removing mg32x02z_urt_init.o(.text), (0 bytes).
    Removing mg32x02z_urt_init.o(.ARM.exidx.text.URT_Config), (8 bytes).
    Removing mg32x02z_urt_init.o(.ARM.exidx.text.URT_Init), (8 bytes).
    Removing mg32x02z__irqhandler.o(.text), (0 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.TM0x_IRQHandler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.TM10_IRQHandler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.TM1x_IRQHandler), (8 bytes).
    Removing mg32x02z__irqhandler.o(.ARM.exidx.text.URT0_IRQHandler), (8 bytes).
    Removing startup_mg32x02z.o(HEAP), (512 bytes).
    Removing system_mg32x02z.o(.text), (0 bytes).
    Removing system_mg32x02z.o(.text.SystemCoreClockUpdate), (16 bytes).
    Removing system_mg32x02z.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_mg32x02z.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mg32x02z.o(.ARM.exidx.text.HardFault_Handler_C), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text), (0 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DeInit), (54 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_BaseStructure_Init), (18 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_BaseStructure_Init), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_Base_Init), (80 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Base_Init), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClockSource_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClockSource_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetInternalClockDivider), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetInternalClockDivider), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetPLLClockDivider), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPLLClockDivider), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DataAlignment_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataAlignment_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataResolution_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DataOverrunMode_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataOverrunMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetConversionTime), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetConversionTime), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetOperationCurrent), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOperationCurrent), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SampleClockPhase_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SampleClockPhase_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetLowerThreshold), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLowerThreshold), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetHigherThreshold), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetHigherThreshold), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_WindowDetectRange_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetectRange_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_WindowDetect_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetect_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_Output_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Output_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_PGA_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGA_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetPGAGain), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAGain), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetPGAOffset), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAOffset), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd), (628 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGAOffsetCalibration_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSumNumber), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSumNumber), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select), (78 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ConversionMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TriggerSource_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerSource_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetOutputCodeFormat), (12 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOutputCodeFormat), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_InternalChannel_Select), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_InternalChannel_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetExtendSampling), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetExtendSampling), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SoftwareConversion_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SoftwareConversion_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearFlag), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetDAT0Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_StartCalibration), (336 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_StartCalibration), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SingleDifferentMode_Select), (12 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SingleDifferentMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DMA_Cmd), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMA_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DMADataSize_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMADataSize_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DMAMaskFlag_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMAMaskFlag_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetNextConversionChannel), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetNextConversionChannel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_AutoOff_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_AutoOff_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetStartupTime), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetStartupTime), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetStartupDivider), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetStartupDivider), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_WaitDataReadOut), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WaitDataReadOut), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_MainConversionMode_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_MainConversionMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ContinueMode_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ContinueMode_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_HoldConversion_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_HoldConversion_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TriggerEdge_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerEdge_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ChannelMUX_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChannelMUX_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ExternalChannel_Select), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ExternalChannel_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ScanLoopChannel_Enable), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ScanLoopChannel_Enable), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ChangeMUXTiming_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChangeMUXTiming_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetLimitFunction), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLimitFunction), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum0Channel), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum1Channel), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum2Channel), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SumChannelMode_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumChannelMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SumOverrunMode_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumOverrunMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum0Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum1Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum2Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearSum0Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum0Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearSum1Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum1Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearSum2Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum2Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum0Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum1Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum2Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum0Data), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum1Data), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum2Data), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetDAT0Flags), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetDAT0Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetDigitalOffset), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetDigitalOffset), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TSO_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TSO_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TSOVref_Select), (18 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TSOVref_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_IVR24_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_IVR24_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TopRefernce_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TopRefernce_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_IT_Config), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_IT_Config), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_adc_drv.o(.rodata..L__const.ADC_PGAOffsetCalibration_Cmd.PGA_Gain_V), (512 bytes).
    Removing mg32x02z_apb_drv.o(.text), (0 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_TimerX_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_TimerX_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ITR6_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR6_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ITR7_Select), (20 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR7_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel0_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel0_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel1_Select), (14 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel1_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel2_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel2_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseBKS0_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS0_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseBKS1_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS1_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseBKS2_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS2_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OBMxOpMode_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OBMxOpMode_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetOBMxOutputState), (44 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxOutputState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseOBMxOutput_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOBMxOutput_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OutputFilter_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputFilter_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetOBMxSwitchState), (44 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxSwitchState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_SetOBMxInitState), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_SetOBMxInitState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetOBMxInitState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxInitState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OutputChannel0Source_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel0Source_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OutputChannel1Source_Select), (14 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel1Source_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel0_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel0_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel1_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel1_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_IRCLK_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRCLK_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_IRDAT_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRDAT_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseIRCLK_Cmd), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRCLK_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseIRDAT_Cmd), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRDAT_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOClockSource_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOClockSource_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOOutputMode_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOOutputMode_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOInverseOutput_Cmd), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOInverseOutput_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCO_Cmd), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCO_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOPFMWidth_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOPFMWidth_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOSetINC), (32 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOSetINC), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOSetACC), (32 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOSetACC), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_NCOGetOutputState), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_NCOGetOutputState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_IT_Config), (20 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IT_Config), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ClearFlag), (4 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ClearFlag), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text), (0 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_CCLTruthTable_Select), (6 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLTruthTable_Select), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_CCLTruthTable_Cmd), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLTruthTable_Cmd), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_GetCCLxOutputState), (28 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_GetCCLxOutputState), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_SetCCLSnState), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SetCCLSnState), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_InverseCCLOutput_Cmd), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_InverseCCLOutput_Cmd), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_SetCCLIntClockDivider), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SetCCLIntClockDivider), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_SQSEL_Select), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SQSEL_Select), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_EDSEL_Select), (14 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_EDSEL_Select), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_SetFilterFunction), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_SetFilterFunction), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_CCL_Cmd), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCL_Cmd), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_CCLMUX2_Select), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLMUX2_Select), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_CCLMUX1_Select), (14 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLMUX1_Select), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_CCLMUX0_Select), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_CCLMUX0_Select), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_IT_Config), (20 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_IT_Config), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_apx_drv.o(.text.APX_ClearFlag), (4 bytes).
    Removing mg32x02z_apx_drv.o(.ARM.exidx.text.APX_ClearFlag), (8 bytes).
    Removing mg32x02z_cfg_drv.o(.text), (0 bytes).
    Removing mg32x02z_cm0_drv.o(.text), (0 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_SysTick_Cmd), (24 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTick_Cmd), (8 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_SysTickIT_Cmd), (28 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickIT_Cmd), (8 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_SysTickClockSource_Select), (28 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickClockSource_Select), (8 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_GetSysTickCurrentValue), (12 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_GetSysTickCurrentValue), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text), (0 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_DeInit), (20 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_Power_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Power_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_FilterClock_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClock_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_FilterClockDivider_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClockDivider_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_InverseOutputPin), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_InverseOutputPin), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_OutputPolarity_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_OutputPolarity_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF_Select), (24 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Select), (24 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREFTopSource_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREFTopSource_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF2TopSource_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2TopSource_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_AC0IVREFOuput_Cmd), (28 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_AC0IVREFOuput_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_AC1IVREFOuput_Cmd), (28 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_AC1IVREFOuput_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_PositivePin_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_PositivePin_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_NegativePin_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_NegativePin_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_SetHysteresisWindow), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_SetHysteresisWindow), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IT_Config), (20 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IT_Config), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_ClearFlag), (4 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_GetOutput), (48 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetOutput), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text), (0 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_IHRCO_Select), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_XOSC_Cmd), (32 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSC_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_XOSCGain_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSCGain_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_ST_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_ST_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_MAIN_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_MAIN_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_HS_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_HS_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_LS_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_LS_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_HS2_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_HS2_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PLL_Config), (84 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PLL_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_APB_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_APB_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_UT_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_UT_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_AHB_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_AHB_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ICKO_ClockSource_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_ClockSource_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ICKO_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ICKO_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_MissingClockDetectionDuration_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetectionDuration_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_MissingClockDetection_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetection_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphProcessClockSource_Config), (92 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphProcessClockSource_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphONModeClock_Config), (112 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphONModeClock_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphSLEEPModeClock_Config), (80 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSLEEPModeClock_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphSTOPModeClock_Config), (32 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSTOPModeClock_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetClockSourceState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetMainSwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetMainSwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetHsSwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetHsSwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetLsSwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetLsSwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetHS2SwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetHS2SwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetPLLISwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetPLLISwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetSingleFlagStatus), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ClearFlag), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_IT_Config), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IT_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_USB_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_USB_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_USB_ClockSource_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_USB_ClockSource_Select), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text), (0 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_DeInit), (14 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_Cmd), (16 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_GetDACState), (8 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetDACState), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_OutputBuffer_Cmd), (16 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_OutputBuffer_Cmd), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_GetDAT0), (4 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetDAT0), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_SetDAT0), (4 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_SetDAT0), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_GetOutput), (4 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetOutput), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_TriggerSource_Select), (16 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_TriggerSource_Select), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_TriggerEdge_Select), (16 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_TriggerEdge_Select), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_DataAlignment_Select), (16 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DataAlignment_Select), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_DataResolution_Select), (14 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DataResolution_Select), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_IT_Config), (20 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_IT_Config), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_ClearFlag), (4 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_ClearFlag), (8 bytes).
    Removing mg32x02z_dac_drv.o(.text.DAC_DMA_Cmd), (14 bytes).
    Removing mg32x02z_dac_drv.o(.ARM.exidx.text.DAC_DMA_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text), (0 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_DeInit), (72 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_BaseInitStructure_Init), (64 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_BaseInitStructure_Init), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Base_Init), (362 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Base_Init), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerPin), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerPin), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerMode), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerMode), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_LoopMode_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LoopMode_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseSourceAddress), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseSourceAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseDestinationAddress), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseDestinationAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Source_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Source_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Destination_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Destination_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetBurstSize), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetBurstSize), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetTransferDataNumber), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetTransferDataNumber), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetSourceAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetSourceAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetDestinationAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetDestinationAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Cmd), (24 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetExtraGPLChannel), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtraGPLChannel), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetCHxUseGPL), (8 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCHxUseGPL), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_PriorityMode_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_PriorityMode_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_FlashMode_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_FlashMode_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_StartRequest), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_StartRequest), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Channel_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Channel_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_LastCycle_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LastCycle_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Hold_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Hold_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetCurrentSourceAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentSourceAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetCurrentDestinationAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentDestinationAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetRemainDataCount), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetRemainDataCount), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetPriority), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetPriority), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetChxSKIP3Mode), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetChxSKIP3Mode), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_IT_Config), (18 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_IT_Config), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_ClearFlag), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetChannelFlag), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetChannelFlag), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_ClearChannelFlag), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearChannelFlag), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text), (0 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_Cmd), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_Cmd), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_AddressDataBusMode_Config), (84 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_AddressDataBusMode_Config), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_WriteMode_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_WriteMode_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_AccessTime_Config), (84 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_AccessTime_Config), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_IT_Cmd), (28 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_IT_Cmd), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_GetSingleFlagStatus), (20 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_ClearFlag), (12 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_ClearFlag), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_SignalSWAP_Cmd), (40 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SignalSWAP_Cmd), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_SignalInverse_Cmd), (40 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SignalInverse_Cmd), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_SignalSW_Cmd), (40 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SignalSW_Cmd), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_SendSignalStatus_SW), (40 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_SendSignalStatus_SW), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_MWESignal_Select), (20 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MWESignal_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_MOESignal_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MOESignal_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_MCLKPreescaler_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MCLKPreescaler_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_WESignalMode_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_WESignalMode_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_OESignalMode_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_OESignalMode_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_CEMode_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_CEMode_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_MA1SignalOutputPin_Select), (24 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_MA1SignalOutputPin_Select), (8 bytes).
    Removing mg32x02z_emb_drv.o(.text.EMB_DMA_Cmd), (20 bytes).
    Removing mg32x02z_emb_drv.o(.ARM.exidx.text.EMB_DMA_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text), (0 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerMode_Select), (56 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerMode_Select), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndMask_Select), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndMask_Select), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerOrMask_Select), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerOrMask_Select), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndUnmatch_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndUnmatch_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerITEA_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerITEA_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerEventFlagStatus), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerEventFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerITFlagStatus), (20 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerITFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPinxTriggerEventSingleFlagStatus), (10 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPinxTriggerEventSingleFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerAndITFlagStatus), (20 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerAndITFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerOrITFlagStatus), (18 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerOrITFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerEventFlag), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerEventFlag), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerITFlag), (12 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerITFlag), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetITSourceID), (12 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetITSourceID), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_RXEV_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_RXEV_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_NMI_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_NMITrigger_SW), (16 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMITrigger_SW), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_NMI_Select), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text), (0 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Config), (64 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Config), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PortMode_Config), (128 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortMode_Config), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd), (16 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinHighSpeedMode_Cmd), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd), (16 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinPUResister_Cmd), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd), (14 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInverse_Cmd), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select), (18 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinOutputDrive_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select), (18 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInFilterDivider_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select), (24 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinFunction_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PortFilterClockSource_Select), (20 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortFilterClockSource_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_WritePort), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_WritePort), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_ReadPort), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ReadPort), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_SetPortBit), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetPortBit), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_ClearPortBit), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ClearPortBit), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_SetClearPortBit), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetClearPortBit), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text), (0 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_ParityCheck_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ParityCheck_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckWord), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckWord), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord), (34 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_Low), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_Low), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_High), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_High), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_0), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_0), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_1), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_1), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_2), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_2), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_3), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_3), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte), (64 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_Inverse_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_Inverse_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_ByteOrderChange_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ByteOrderChange_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_16BitsByteOrderChange_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_16BitsByteOrderChange_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_BeforeBitOrderChange_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_BeforeBitOrderChange_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_AfterBitOrderChange_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_AfterBitOrderChange_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_Mode_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Mode_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_Data_Size_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Data_Size_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_SetInitValue), (12 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_SetInitValue), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_Cmd), (24 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_DMA_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DMA_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_DataInput), (12 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DataInput), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetOutputData), (16 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetOutputData), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetFlagStatus), (16 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetFlagStatus), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text), (0 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetClockSource), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockSource), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetClockPrescaler), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockPrescaler), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetClockDivider), (16 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockDivider), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSCLHighTime), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLHighTime), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSCLLowTime), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLLowTime), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetPreDriveTime), (16 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetPreDriveTime), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GeneralCallAddress_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GeneralCallAddress_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SlaveAddressDetect_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SlaveAddressDetect_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress), (16 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress1Mask), (6 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress1Mask), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetSlaveAddress), (38 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveAddress), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_Cmd), (18 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_TXDMA_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_TXDMA_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_RXDMA_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_RXDMA_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_IT_Config), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_IT_Config), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ITEA_Cmd), (18 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetITSource), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetITSource), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetFlagStatus), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ClearFlag), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetEventCode), (10 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventCode), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetEventFlag), (10 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ClearEventFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearEventFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetSlaveMatchAddress), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveMatchAddress), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SendSBUF), (6 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SendSBUF), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ReceiveSBUF), (6 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ReceiveSBUF), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text), (0 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Divider_Select), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_GetCounter), (12 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetCounter), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter), (16 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_RefreshCounter), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_StopModeWakeUpEvent_Config), (24 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_StopModeWakeUpEvent_Config), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Cmd), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_GetSingleFlagStatus), (16 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_ClearFlag), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_ClearFlag), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_IT_Config), (24 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_IT_Config), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text), (0 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetFlagStatus), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ClearFlag), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_Cmd), (40 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetFlashWaitState), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_IT_Cmd), (52 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IT_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd), (52 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorReset_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorHardFault_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_WriteFlashHold_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetAllAccessState), (20 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllAccessState), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetAccessState), (20 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAccessState), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_Access_Cmd), (52 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Access_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetWriteMode), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteMode), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetWriteUnProtect), (112 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetSinglePageEraseUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSinglePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetMultiplePageEraseUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultiplePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetSingleProgramUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSingleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetMultipleProgramUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetMultipleWriteProtect), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleWriteProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_APWrite_Cmd), (60 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_APWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetIAPSize), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSize), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock), (40 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSizeLock), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_IAPExecuteCode_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPExecuteCode_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_IAPWrite_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPDRead_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDRead_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPDWrite_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetISPSize), (12 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetISPSize), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPRead_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPRead_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPWrite_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPSinglePageEraseUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSinglePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPMultiplePageEraseUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultiplePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPSingleProgramUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSingleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleProgramUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleWriteProtect), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleWriteProtect), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text), (0 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_STOPModeLDO_Select), (20 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_STOPModeLDO_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_ONModeLDO_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ONModeLDO_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD2Trigger_Select), (20 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD2Trigger_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD2_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD2_Cmd), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetBod2Status), (16 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetBod2Status), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD1Threshold_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Threshold_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD1Trigger_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Trigger_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD1_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1_Cmd), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_VoltageBuffer), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_VoltageBuffer), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD0_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD0_Cmd), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetBod1Status), (16 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetBod1Status), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_PeriphSLEEPModeContinuous_Config), (28 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSLEEPModeContinuous_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeContinuous_Config), (28 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeContinuous_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeWakeUp_Config), (64 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeWakeUp_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_WakeUpDelay_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_WakeUpDelay_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetWakeUpMode), (28 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetWakeUpMode), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_WakeUpMode_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_WakeUpMode_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetSingleFlagStatus), (20 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_ClearFlag), (12 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ClearFlag), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_IT_Config), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_IT_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text), (0 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_GetSingleFlagStatus), (16 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_ClearFlag), (8 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ClearFlag), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_CRstSource_Config), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_CRstSource_Config), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_WRstSource_Config), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstSource_Config), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_WRstGPIOLock_Config), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstGPIOLock_Config), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_ForceRstPeriph_SW), (112 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ForceRstPeriph_SW), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_TriggerSystemRst_SW), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_TriggerSystemRst_SW), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_WWDTWRstMask_Cmd), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WWDTWRstMask_Cmd), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_USBRstMode_Select), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_USBRstMode_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text), (0 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_CLK_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_CLK_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_PreDivider_Select), (20 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_PreDivider_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_Divider_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Divider_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetAlarmCompareValue), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmCompareValue), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_SetAlarmCompareValue), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetAlarmCompareValue), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetAlarmState), (16 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmState), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_Alarm_Cmd), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Alarm_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetReloadReg), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetReloadReg), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetCaptureReg), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetCaptureReg), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_SetReloadReg), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetReloadReg), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_Cmd), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_RCR_Mode_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_RCR_Mode_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_StopModeWakeUpEvent_Config), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_StopModeWakeUpEvent_Config), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_OutputSignal_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_OutputSignal_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_InitOutputSignalState_Cmd), (32 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_InitOutputSignalState_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_SW), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_SW), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetSingleFlagStatus), (20 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_ClearFlag), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_IT_Config), (20 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_IT_Config), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text), (0 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DeInit), (28 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Clock_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Clock_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_PreDivider_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_PreDivider_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Prescaler_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Prescaler_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Divider_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Divider_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_TriggerClockToggle), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TriggerClockToggle), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DualTransferRate_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DualTransferRate_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveHighSpeed_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveHighSpeed_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ModeAndNss_Select), (18 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModeAndNss_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ModfHappenedAction_Select), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModfHappenedAction_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NSSInputSignal_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputSignal_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SingleMasterModeNssPulse_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SingleMasterModeNssPulse_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssInputInverse_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputInverse_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssOutputInverse_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputInverse_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssInputOutputSoftwareControl_Cmd), (30 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputOutputSoftwareControl_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssInputSoftwareControl_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputSoftwareControl_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssOutputSoftwareControl_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputSoftwareControl_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetNSSInputStatust), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetNSSInputStatust), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NSSInputStatusControl_SW), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputStatusControl_SW), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NSSOutputStatusControl_SW), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSOutputStatusControl_SW), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssIdleTime_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssIdleTime_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClockPhase_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPhase_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClockPolarity_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPolarity_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_FirstBit_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_FirstBit_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetRxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClearRxData), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearRxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetDataBufferReceivedBytes), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetDataBufferReceivedBytes), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SetDataBufferReceivedBytes), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetDataBufferReceivedBytes), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClearTxData), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearTxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetTxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetRxData), (4 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SetTxData), (46 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetTxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetTxData), (4 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveModeReceivedThreshold_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveModeReceivedThreshold_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DataSize_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataSize_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DataLine_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLine_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DataLineOutput_Cmd), (18 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLineOutput_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SendCopyMode_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SendCopyMode_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_BidirectionalOutput_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_BidirectionalOutput_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_TransferBidirection_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TransferBidirection_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_MosiMisoSignalSwap_Cmd), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MosiMisoSignalSwap_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_D03D47SignalSwap_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_D03D47SignalSwap_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_LoopBackMode_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_LoopBackMode_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClockOutputSignal_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockOutputSignal_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_IdleStateDataMode_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IdleStateDataMode_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveAutoFullDuplex_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveAutoFullDuplex_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveSendDataDirectUpdate_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveSendDataDirectUpdate_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_TXDMA_Cmd), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TXDMA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_RXDMA_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_RXDMAPreCatch_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMAPreCatch_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetAllFlagStatus), (6 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClearFlag), (4 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_IT_Config), (20 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IT_Config), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MasterRXSamplingNextHalfClockEdge_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveAsynchronous_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveAsynchronous_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_MasterDataOutIdleState_Select), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MasterDataOutIdleState_Select), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text), (0 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_GetChipMID), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_GetChipMID), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_ReadGeneralReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadGeneralReg), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_WriteGeneralReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteGeneralReg), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_ReadBackupReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadBackupReg), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_WriteBackupReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteBackupReg), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text), (0 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_DeInit), (68 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DeInit), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TimeBaseStruct_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBaseStruct_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TimeBase_Init), (92 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBase_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Prescaler_Config), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Counter_Config), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TimerMode_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimerMode_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CounterClock_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CounterClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PrescalerClock_Select), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PrescalerClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetInternalClockDivider), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetInternalClockDivider), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCounterDirection), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCounterDirection), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetPrescalerDirection), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetPrescalerDirection), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InternalClockSource_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalClockSource_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExternalClock_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ITRx_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITRx_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCounter), (4 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCounter), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Counter_Cmd), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Counter_SW), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetPrescaler), (4 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetPrescaler), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Prescaler_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Prescaler_SW), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Timer_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GatePrescaler_SW), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GatePrescaler_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GateCounter_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GateCounter_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ResetPrescaler_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetPrescaler_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ResetCounter_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetCounter_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TriggerSource_Select), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TriggerSource_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGICounter_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGICounter_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGIPrescaler_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGIPrescaler_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_UEV_Config), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGOOut_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGOOut_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGO_Select), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGO_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseTRGO_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseTRGO_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN0Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN0TriggerEvent_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN1Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN1TriggerEvent_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN2Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN2TriggerEvent_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN3Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN3TriggerEvent_Select), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ClockOutSource_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOutSource_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ClockOut_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOut_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CKOOutputState_Init), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CKOOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC0z_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0z_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0zOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0zBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0zOutput_Cmd), (44 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC00Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC00Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC01Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC01Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC02Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC02Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC0N_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0N_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0NOutput_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0NBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC0H_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC1z_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1z_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1zOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1zBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1zOutput_Cmd), (46 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC10Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC10Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC11Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC11Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC12Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC12Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC1N_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1N_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1NOutput_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1NBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC1H_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC2_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2OutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2OutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2BreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC2N_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2N_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2NOutput_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2NBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC2H_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC3_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3OutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3OutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3BreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC3H_Cmd), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExternalBreakEvent_Config), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalBreakEvent_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InternalBreakEvent_Config), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalBreakEvent_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakTrigger_SW), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakTrigger_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakCH3_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH3_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakCH012_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH012_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakMode_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakMode_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0BreakControl_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1BreakControl_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2BreakControl_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3BreakControl_Select), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadEventSource_Config), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadEventSource_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadActive_SW), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadActive_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadOC0z_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC0z_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadOC1z_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC1z_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH0Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH0Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH1Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH1Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH2Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH2Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH3Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH3Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OutputDelayMode_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OutputDelayMode_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC0Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC0Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC1Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC1Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC2Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC2Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC3Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC3Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC0OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC0OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC1OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC1OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC2OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC2OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC3OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC3OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC0_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC0_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC1_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC1_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC2_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC2_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC3_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC3_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC0_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC0_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC1_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC1_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC2_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC2_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC3_SW), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC3_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC0A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC1A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC2A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC3A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC0B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC1B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC2B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC3B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC0A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC1A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC2A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC3A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC0B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC1B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC2B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC3B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF0A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF1A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF2A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF3A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF0B_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF1B_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF2B_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF3B_SW), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ReloadFromCCxB_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ReloadFromCCxB_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_AlignmentMode_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AlignmentMode_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_QEI_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEI_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_QEIReset_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIReset_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_QEIResetIDX_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIResetIDX_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseQEIDirection), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseQEIDirection), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_AutoStop_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AutoStop_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RepeatAutoStopMode_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepeatAutoStopMode_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RepetitionCounter_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepetitionCounter_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ControlPWM_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ControlPWM_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RepetitionCounter_Config), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepetitionCounter_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RepetitionCounterClock_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepetitionCounterClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetDeadZoneClockDivider), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadZoneClockDivider), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetDeadTime), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadTime), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IT_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClearFlag), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExtTRGI_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseExtTRGI_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseExtTRGI_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExtTRGI2UEV_Cmd), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI2UEV_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ForceUpdate_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ForceUpdate_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_UEV_Cmd), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_DMAChannel_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAChannel_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_DMAUpdateMode_Select), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAUpdateMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text), (0 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IT_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITAllFlagStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetITSingleFlagStatus), (24 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITSingleFlagStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearITFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxDifferentFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxDifferentFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxHoldFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxHoldFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ClearRxHoldFlag), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRxHoldFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetIrDaBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetIrDaBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBreakBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBreakBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxNoiseFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxNoiseFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DataCharacter_Config), (58 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataCharacter_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_Mode_Select), (38 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DataLine_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataLine_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_HalfDuplexMode_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_HalfDuplexMode_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_LoopBackMode_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_LoopBackMode_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TX_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TX_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RX_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RX_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NoiseDataSkip_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NoiseDataSkip_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Config), (56 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorMode_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorClock_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorClock_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateCounterClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateCounterClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPreReload), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPreReload), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCountReload), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCountReload), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPre), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPre), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCount), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCount), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CLKSignalSource_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignalSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CLKSignal_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignal_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlBROSignalStatus_SW), (22 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlBROSignalStatus_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlCLKSignalStatus_SW), (22 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlCLKSignalStatus_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXOverSamplingSampleNumber_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXOverSamplingSampleNumber_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXOverSamplingSampleNumber_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingSampleNumber_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXOverSamplingMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TimeroutTimer_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeroutTimer_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TriggerTimeoutTimerRst_SW), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TriggerTimeoutTimerRst_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TimeoutMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TimeoutTimerClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutTimerClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IdleDetect_Select), (4 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleDetect_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IdleTimeoutDetect_Config), (28 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXTimeoutDetect_Config), (28 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BreakTimeoutDetect_Config), (44 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CalibrationTimeoutDetect_Config), (44 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlTMOSignalStatus_SW), (22 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlTMOSignalStatus_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerCounter), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerCounter), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCounter), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCounter), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerReload), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerReload), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCompare), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCompare), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ClearTXData), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearTXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ClearRXData), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTXDataRegLevel), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXDataRegLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXShadowBufferThreshold_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXShadowBufferThreshold_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXDataRegLevel), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXDataRegLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCaptureData), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCaptureStatusBit), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureStatusBit), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferStatusBit), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferStatusBit), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTXShiftBufferData), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShiftBufferData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferData), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RTS_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTS_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RTSInverse_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTSInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlRTS_SW), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlRTS_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CTS_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTS_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCTSLineStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCTSLineStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CTSInverse_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTSInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DE_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DE_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DEInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DEGuardTime_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEGuardTime_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IdlehandleMode_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdlehandleMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXHalt_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXHalt_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXGuardTime_Select), (4 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXGuardTime_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CPHAMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPHAMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CPOLMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPOLMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NssInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NssSW_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssSW_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlNSS_SW), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlNSS_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NssInput_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssInput_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SPIMasterDataOutputIdleStatus_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SPIMasterDataOutputIdleStatus_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SYNCMode_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SYNCMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetSlaveAddressMask), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddressMask), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetSlaveAddress), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddress), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GlobalAddress_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GlobalAddress_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SendAddress), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendAddress), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CalibrationMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_AutoCalibration_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoCalibration_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_Calibration_SW), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Calibration_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CalibrationCompleteDataHold_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationCompleteDataHold_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ExtraBreakBit_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExtraBreakBit_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SendBreak), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendBreak), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCalibrationResult), (38 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCalibrationResult), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXDMA_Cmd), (72 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXDMA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXDMA_Cmd), (70 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXDMA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BreakDisableDMA_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakDisableDMA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IrDA_Config), (18 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IrDA_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_AutoExitMuteMode_Select), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoExitMuteMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_AutoEnterMuteMode_Select), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoEnterMuteMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_Mute_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mute_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXParityError_Config), (28 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXParityError_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXErrorDetectMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorDetectMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXErrorResendTime_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorResendTime_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RxTxSwap_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RxTxSwap_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ExternalClockMux_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExternalClockMux_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text), (0 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_Transceiver_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Transceiver_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_V33_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_V33_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_V33toVDD_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_V33toVDD_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_Function_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Function_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_Cmd), (24 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_DriveStrength_Select), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_DriveStrength_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_PDResistorMode_Select), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_PDResistorMode_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_PUResistorMode_Select), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_PUResistorMode_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_LVRModeInSTOP_Select), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_LVRModeInSTOP_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetBusStatus), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetBusStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetBusEventStatus2), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetBusEventStatus2), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetDPDMStatus), (16 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetDPDMStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_Connect_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_Connect_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetAddress), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetRemoteWakeupTime), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetRemoteWakeupTime), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_TriggerRemoteWakeup), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_TriggerRemoteWakeup), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SoftwareControlRemoteWakeup_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SoftwareControlRemoteWakeup_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetRemoteWakeup_SW), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetRemoteWakeup_SW), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SuspendSignalMode_Select), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SuspendSignalMode_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_NoResponse_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_NoResponse_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetFrameNumber), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetFrameNumber), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointStatus), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointStatus), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetDoubleBufferEndpointStatus), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetDoubleBufferEndpointStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointOUTSequenceBit), (10 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointOUTSequenceBit), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointINSequenceBit), (10 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointINSequenceBit), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointOUTSequenceBit), (6 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointOUTSequenceBit), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointINSequenceBit), (6 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointINSequenceBit), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointAddress), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointFlagStatus), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointFlagStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointITFlagStatus), (10 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointITFlagStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_ClearEndpointFlag), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ClearEndpointFlag), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetSETUPStatus), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetSETUPStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_ClearSETUPStatus), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ClearSETUPStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_EndpintIT_Config), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_EndpintIT_Config), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointRXSize), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointRXSize), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointTXSize), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointTXSize), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer1TXSize), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1TXSize), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer0TXSize), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0TXSize), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointRXData), (48 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointRXData), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointDoubleBufferRXData), (112 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointDoubleBufferRXData), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointTXData), (38 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointTXData), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBufferTXData), (108 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBufferTXData), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointRXBlock), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointRXBlock), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointBlockOf32Byte), (28 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointBlockOf32Byte), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointBlockOf2Byte), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointBlockOf2Byte), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointTXDataAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointTXDataAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointRXDataAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointRXDataAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer0Address), (8 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer0Address), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_SetEndpointDoubleBuffer1Address), (8 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_SetEndpointDoubleBuffer1Address), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointTXDataAddress), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointTXDataAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointRXDataAddress), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointRXDataAddress), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointDoubleBuffer0Address), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer0Address), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetEndpointDoubleBuffer1Address), (4 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetEndpointDoubleBuffer1Address), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_EndpointMode_Select), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_EndpointMode_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_EndpointDoubleBufferMode_Cmd), (14 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_EndpointDoubleBufferMode_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_TriggerEndpointRst), (8 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_TriggerEndpointRst), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_ITEA_Cmd), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_IT_Config), (28 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_IT_Config), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetITAllFlagStatus), (16 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetITAllFlagStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetITIEAllStatus), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetITIEAllStatus), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_ClearITFlag), (16 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_ClearITFlag), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_LPMhandshakeMode_Select), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_LPMhandshakeMode_Select), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetLPMBESL), (12 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetLPMBESL), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_GetLPMbRemoteWake), (16 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_GetLPMbRemoteWake), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_DMARXSEL_Config), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_DMARXSEL_Config), (8 bytes).
    Removing mg32x02z_usb_drv.o(.text.USB_DMATXSEL_Config), (20 bytes).
    Removing mg32x02z_usb_drv.o(.ARM.exidx.text.USB_DMATXSEL_Config), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text), (0 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_CLK_Select), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_CLK_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_DIV_Select), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_DIV_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_PDIV_Select), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_PDIV_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_Cmd), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_Cmd), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetCounter), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetCounter), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_RefreshCounter), (16 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RefreshCounter), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetReloadReg), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetReloadReg), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_SetReloadReg), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetReloadReg), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetWindowThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWindowThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_SetWindowThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWindowThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetWarningThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWarningThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_SetWarningThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWarningThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_RstEvent_Config), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RstEvent_Config), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetSingleFlagStatus), (20 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_ClearFlag), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_ClearFlag), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_IT_Config), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_IT_Config), (8 bytes).
    Removing mg32x02z__common_drv.o(.text), (0 bytes).
    Removing mg32x02z__common_drv.o(.text.InitTick), (26 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.InitTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.SysTick_Config), (32 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.__NVIC_SetPriority), (24 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.IncTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.GetTick), (12 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.GetTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.Delay), (36 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.SuspendTick), (16 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.SuspendTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.ResumeTick), (16 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.ResumeTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.ProtectModuleReg), (8 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.UnProtectModuleReg), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.LockModuleReg), (12 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.LockModuleReg), (8 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing dcmple.o(.text), (44 bytes).
    Removing dcmpge.o(.text), (44 bytes).
    Removing dcmpgt.o(.text), (44 bytes).
    Removing dcmpeq.o(.text), (46 bytes).
    Removing dfltui.o(.text), (28 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

1962 unused section(s) (total 29577 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpge.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpgt.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpeq.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    MG32x02z_ADC_DRV.c                       0x00000000   Number         0  mg32x02z_adc_drv.o ABSOLUTE
    MG32x02z_APB_DRV.c                       0x00000000   Number         0  mg32x02z_apb_drv.o ABSOLUTE
    MG32x02z_APX_DRV.c                       0x00000000   Number         0  mg32x02z_apx_drv.o ABSOLUTE
    MG32x02z_CFG_DRV.c                       0x00000000   Number         0  mg32x02z_cfg_drv.o ABSOLUTE
    MG32x02z_CM0_DRV.c                       0x00000000   Number         0  mg32x02z_cm0_drv.o ABSOLUTE
    MG32x02z_CMP_DRV.c                       0x00000000   Number         0  mg32x02z_cmp_drv.o ABSOLUTE
    MG32x02z_CSC_DRV.c                       0x00000000   Number         0  mg32x02z_csc_drv.o ABSOLUTE
    MG32x02z_CSC_Init.c                      0x00000000   Number         0  mg32x02z_csc_init.o ABSOLUTE
    MG32x02z_ChipInit.c                      0x00000000   Number         0  mg32x02z_chipinit.o ABSOLUTE
    MG32x02z_DAC_DRV.c                       0x00000000   Number         0  mg32x02z_dac_drv.o ABSOLUTE
    MG32x02z_DMA_DRV.c                       0x00000000   Number         0  mg32x02z_dma_drv.o ABSOLUTE
    MG32x02z_EMB_DRV.c                       0x00000000   Number         0  mg32x02z_emb_drv.o ABSOLUTE
    MG32x02z_EXIC_DRV.c                      0x00000000   Number         0  mg32x02z_exic_drv.o ABSOLUTE
    MG32x02z_GPIO_DRV.c                      0x00000000   Number         0  mg32x02z_gpio_drv.o ABSOLUTE
    MG32x02z_GPIO_Init.c                     0x00000000   Number         0  mg32x02z_gpio_init.o ABSOLUTE
    MG32x02z_GPL_DRV.c                       0x00000000   Number         0  mg32x02z_gpl_drv.o ABSOLUTE
    MG32x02z_I2C_DRV.c                       0x00000000   Number         0  mg32x02z_i2c_drv.o ABSOLUTE
    MG32x02z_IWDT_DRV.c                      0x00000000   Number         0  mg32x02z_iwdt_drv.o ABSOLUTE
    MG32x02z_MEM_DRV.c                       0x00000000   Number         0  mg32x02z_mem_drv.o ABSOLUTE
    MG32x02z_PW_DRV.c                        0x00000000   Number         0  mg32x02z_pw_drv.o ABSOLUTE
    MG32x02z_RST_DRV.c                       0x00000000   Number         0  mg32x02z_rst_drv.o ABSOLUTE
    MG32x02z_RST_Init.c                      0x00000000   Number         0  mg32x02z_rst_init.o ABSOLUTE
    MG32x02z_RTC_DRV.c                       0x00000000   Number         0  mg32x02z_rtc_drv.o ABSOLUTE
    MG32x02z_SPI_DRV.c                       0x00000000   Number         0  mg32x02z_spi_drv.o ABSOLUTE
    MG32x02z_SYS_DRV.c                       0x00000000   Number         0  mg32x02z_sys_drv.o ABSOLUTE
    MG32x02z_TM_DRV.c                        0x00000000   Number         0  mg32x02z_tm_drv.o ABSOLUTE
    MG32x02z_TM_Init.c                       0x00000000   Number         0  mg32x02z_tm_init.o ABSOLUTE
    MG32x02z_URT_DRV.c                       0x00000000   Number         0  mg32x02z_urt_drv.o ABSOLUTE
    MG32x02z_URT_Init.c                      0x00000000   Number         0  mg32x02z_urt_init.o ABSOLUTE
    MG32x02z_USB_DRV.c                       0x00000000   Number         0  mg32x02z_usb_drv.o ABSOLUTE
    MG32x02z_WWDT_DRV.c                      0x00000000   Number         0  mg32x02z_wwdt_drv.o ABSOLUTE
    MG32x02z__Common_DRV.c                   0x00000000   Number         0  mg32x02z__common_drv.o ABSOLUTE
    MG32x02z__IRQHandler.c                   0x00000000   Number         0  mg32x02z__irqhandler.o ABSOLUTE
    RTE/Device/MG32F02A128/startup_MG32x02z.s 0x00000000   Number         0  startup_mg32x02z.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    crc.c                                    0x00000000   Number         0  crc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    ds18b20.c                                0x00000000   Number         0  ds18b20.o ABSOLUTE
    flash.c                                  0x00000000   Number         0  flash.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    iap.c                                    0x00000000   Number         0  iap.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    keys.c                                   0x00000000   Number         0  keys.o ABSOLUTE
    keys_old.c                               0x00000000   Number         0  keys_old.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    onewire.c                                0x00000000   Number         0  onewire.o ABSOLUTE
    prsm3.c                                  0x00000000   Number         0  prsm3.o ABSOLUTE
    system_MG32x02z.c                        0x00000000   Number         0  system_mg32x02z.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    timers_irq.c                             0x00000000   Number         0  timers_irq.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    usart_irq.c                              0x00000000   Number         0  usart_irq.o ABSOLUTE
    wdt.c                                    0x00000000   Number         0  wdt.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_mg32x02z.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       60  startup_mg32x02z.o(.text)
    .text                                    0x00000110   Section        0  memseta.o(.text)
    .text                                    0x00000134   Section        0  uidiv_div0.o(.text)
    .text                                    0x00000172   Section        0  uldiv.o(.text)
    .text                                    0x000001d2   Section        0  llshl.o(.text)
    .text                                    0x000001f4   Section       36  init.o(.text)
    .text                                    0x00000218   Section        0  semi.o(.text)
    .text                                    0x00000218   Section        0  llushr.o(.text)
    [Anonymous Symbol]                       0x0000023a   Section        0  keys.o(.text.AddKey)
    .text                                    0x0000023a   Section        0  iusesemip.o(.text)
    [Anonymous Symbol]                       0x0000023e   Section        0  crc.o(.text.CRCisWrong)
    [Anonymous Symbol]                       0x00000254   Section        0  mg32x02z_csc_drv.o(.text.CSC_ClearFlag)
    [Anonymous Symbol]                       0x0000025c   Section        0  mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState)
    __arm_cp.24_0                            0x0000026c   Number         4  mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState)
    [Anonymous Symbol]                       0x00000270   Section        0  mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd)
    [Anonymous Symbol]                       0x00000284   Section        0  mg32x02z_csc_init.o(.text.CSC_IHRCO_Enable)
    [Anonymous Symbol]                       0x000002c4   Section        0  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_0                             0x00000524   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_1                             0x00000528   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_2                             0x0000052c   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_3                             0x00000530   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_4                             0x00000534   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_5                             0x00000538   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_6                             0x0000053c   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_7                             0x00000540   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_8                             0x00000544   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_9                             0x00000548   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_10                            0x0000054c   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_12                            0x00000550   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_13                            0x00000554   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_14                            0x00000558   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    [Anonymous Symbol]                       0x0000055c   Section        0  mg32x02z_csc_init.o(.text.CSC_XOSC_Enable)
    __arm_cp.1_0                             0x000005c0   Number         4  mg32x02z_csc_init.o(.text.CSC_XOSC_Enable)
    __arm_cp.1_1                             0x000005c4   Number         4  mg32x02z_csc_init.o(.text.CSC_XOSC_Enable)
    [Anonymous Symbol]                       0x000005c8   Section        0  keys.o(.text.CheckTruth)
    [Anonymous Symbol]                       0x00000612   Section        0  mg32x02z_chipinit.o(.text.ChipInit)
    [Anonymous Symbol]                       0x0000066c   Section        0  keys.o(.text.CopyFlash)
    [Anonymous Symbol]                       0x00000670   Section        0  keys.o(.text.DS1990_GetID)
    __arm_cp.6_0                             0x000006a4   Number         4  keys.o(.text.DS1990_GetID)
    [Anonymous Symbol]                       0x000006a8   Section        0  crc.o(.text.Do_CRC)
    __arm_cp.0_0                             0x000006c4   Number         4  crc.o(.text.Do_CRC)
    [Anonymous Symbol]                       0x000006c8   Section        0  keys.o(.text.FillFlash)
    __arm_cp.0_0                             0x00000750   Number         4  keys.o(.text.FillFlash)
    __arm_cp.0_1                             0x00000754   Number         4  keys.o(.text.FillFlash)
    __arm_cp.0_2                             0x00000758   Number         4  keys.o(.text.FillFlash)
    __arm_cp.0_3                             0x0000075c   Number         4  keys.o(.text.FillFlash)
    __arm_cp.0_4                             0x00000760   Number         4  keys.o(.text.FillFlash)
    [Anonymous Symbol]                       0x00000764   Section        0  mg32x02z_gpio_init.o(.text.GPIO_Init)
    __arm_cp.0_0                             0x00000778   Number         4  mg32x02z_gpio_init.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x0000077c   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select)
    [Anonymous Symbol]                       0x0000078e   Section        0  flash.o(.text.GetBlocksLeft)
    [Anonymous Symbol]                       0x000007b0   Section        0  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_0                             0x0000083c   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_1                             0x00000840   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_2                             0x00000844   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_3                             0x00000848   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_4                             0x0000084c   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_5                             0x00000850   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_6                             0x00000854   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_7                             0x00000858   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_8                             0x0000085c   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_9                             0x00000860   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_10                            0x00000864   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    [Anonymous Symbol]                       0x000008f8   Section        0  iap.o(.text.IAP_CopyIAPInRAM)
    [Anonymous Symbol]                       0x00000914   Section        0  iap.o(.text.IAP_CopyRAMInIAP)
    [Anonymous Symbol]                       0x00000924   Section        0  iap.o(.text.IAP_Erase_OnePage)
    [Anonymous Symbol]                       0x00000944   Section        0  iap.o(.text.IAP_Erase_Page)
    __arm_cp.2_1                             0x000009ec   Number         4  iap.o(.text.IAP_Erase_Page)
    __arm_cp.2_2                             0x000009f0   Number         4  iap.o(.text.IAP_Erase_Page)
    [Anonymous Symbol]                       0x000009f4   Section        0  iap.o(.text.IAP_GetPageNumberOfByte)
    [Anonymous Symbol]                       0x000009f8   Section        0  iap.o(.text.IAP_Init)
    __arm_cp.0_0                             0x00000a2c   Number         4  iap.o(.text.IAP_Init)
    [Anonymous Symbol]                       0x00000a30   Section        0  iap.o(.text.IAP_Multiple_Write)
    __arm_cp.7_0                             0x00000ae4   Number         4  iap.o(.text.IAP_Multiple_Write)
    __arm_cp.7_2                             0x00000ae8   Number         4  iap.o(.text.IAP_Multiple_Write)
    __arm_cp.7_3                             0x00000aec   Number         4  iap.o(.text.IAP_Multiple_Write)
    [Anonymous Symbol]                       0x00000af0   Section        0  iap.o(.text.IAP_ReadByte)
    [Anonymous Symbol]                       0x00000b08   Section        0  iap.o(.text.IAP_ReadWord)
    [Anonymous Symbol]                       0x00000b20   Section        0  mg32x02z_iwdt_drv.o(.text.IWDT_Cmd)
    __arm_cp.4_0                             0x00000b34   Number         4  mg32x02z_iwdt_drv.o(.text.IWDT_Cmd)
    [Anonymous Symbol]                       0x00000b38   Section        0  mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select)
    __arm_cp.0_0                             0x00000b48   Number         4  mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select)
    [Anonymous Symbol]                       0x00000b4c   Section        0  mg32x02z__common_drv.o(.text.IncTick)
    __arm_cp.3_0                             0x00000b58   Number         4  mg32x02z__common_drv.o(.text.IncTick)
    [Anonymous Symbol]                       0x00000b5c   Section        0  mg32x02z_mem_drv.o(.text.MEM_ClearFlag)
    [Anonymous Symbol]                       0x00000b64   Section        0  mg32x02z_mem_drv.o(.text.MEM_GetFlagStatus)
    [Anonymous Symbol]                       0x00000b74   Section        0  mg32x02z_mem_drv.o(.text.MEM_GetIAPSize)
    __arm_cp.21_0                            0x00000b7c   Number         4  mg32x02z_mem_drv.o(.text.MEM_GetIAPSize)
    [Anonymous Symbol]                       0x00000b80   Section        0  mg32x02z_mem_drv.o(.text.MEM_SetIAPSize)
    __arm_cp.22_0                            0x00000bec   Number         4  mg32x02z_mem_drv.o(.text.MEM_SetIAPSize)
    [Anonymous Symbol]                       0x00000bf0   Section        0  mg32x02z__irqhandler.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x00000bf4   Section        0  onewire.o(.text.OneWire_Read)
    [Anonymous Symbol]                       0x00000c40   Section        0  onewire.o(.text.OneWire_Start)
    [Anonymous Symbol]                       0x00000c7c   Section        0  onewire.o(.text.OneWire_Write)
    __arm_cp.1_0                             0x00000ccc   Number         4  onewire.o(.text.OneWire_Write)
    __arm_cp.1_1                             0x00000cd0   Number         4  onewire.o(.text.OneWire_Write)
    [Anonymous Symbol]                       0x00000cd4   Section        0  prsm3.o(.text.PRSM3AddNewByte)
    [Anonymous Symbol]                       0x00000d20   Section        0  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_1                             0x00000e44   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_3                             0x00000e48   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_6                             0x00000e4c   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_7                             0x00000e50   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_8                             0x00000e54   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_9                             0x00000e58   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    __arm_cp.1_10                            0x00000e5c   Number         4  prsm3.o(.text.PRSM3ReceiveLineComplete)
    [Anonymous Symbol]                       0x00000e60   Section        0  mg32x02z__irqhandler.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000e62   Section        0  mg32x02z__common_drv.o(.text.ProtectModuleReg)
    [Anonymous Symbol]                       0x00000e6c   Section        0  mg32x02z_rst_init.o(.text.RST_Init)
    __arm_cp.0_0                             0x00000e8c   Number         4  mg32x02z_rst_init.o(.text.RST_Init)
    __arm_cp.0_1                             0x00000e90   Number         4  mg32x02z_rst_init.o(.text.RST_Init)
    __arm_cp.0_2                             0x00000e94   Number         4  mg32x02z_rst_init.o(.text.RST_Init)
    __arm_cp.0_3                             0x00000e98   Number         4  mg32x02z_rst_init.o(.text.RST_Init)
    [Anonymous Symbol]                       0x00000e9c   Section        0  keys.o(.text.RemoveKey)
    __arm_cp.4_0                             0x00000f74   Number         4  keys.o(.text.RemoveKey)
    [Anonymous Symbol]                       0x00000f78   Section        0  prsm3.o(.text.ReturnReply)
    __arm_cp.2_0                             0x00000fc8   Number         4  prsm3.o(.text.ReturnReply)
    __arm_cp.2_1                             0x00000fcc   Number         4  prsm3.o(.text.ReturnReply)
    __arm_cp.2_2                             0x00000fd0   Number         4  prsm3.o(.text.ReturnReply)
    [Anonymous Symbol]                       0x00000fd4   Section        0  mg32x02z__irqhandler.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000fd6   Section        0  mg32x02z__irqhandler.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000fe0   Section        0  system_mg32x02z.o(.text.SystemInit)
    __arm_cp.1_0                             0x00000fe8   Number         4  system_mg32x02z.o(.text.SystemInit)
    __arm_cp.1_1                             0x00000fec   Number         4  system_mg32x02z.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000ff0   Section        0  timers.o(.text.TIM01_Callback)
    [Anonymous Symbol]                       0x00000ff8   Section        0  timers.o(.text.TIM10_Callback)
    __arm_cp.1_0                             0x00001014   Number         4  timers.o(.text.TIM10_Callback)
    [Anonymous Symbol]                       0x00001018   Section        0  timers.o(.text.TIM16_Callback)
    __arm_cp.2_0                             0x00001038   Number         4  timers.o(.text.TIM16_Callback)
    __arm_cp.2_1                             0x0000103c   Number         4  timers.o(.text.TIM16_Callback)
    __arm_cp.2_2                             0x00001040   Number         4  timers.o(.text.TIM16_Callback)
    [Anonymous Symbol]                       0x00001044   Section        0  timers_irq.o(.text.TM01_IRQ)
    __arm_cp.5_0                             0x000010a0   Number         4  timers_irq.o(.text.TM01_IRQ)
    [Anonymous Symbol]                       0x000010a4   Section        0  mg32x02z__irqhandler.o(.text.TM0x_IRQHandler)
    __arm_cp.4_0                             0x000010b4   Number         4  mg32x02z__irqhandler.o(.text.TM0x_IRQHandler)
    [Anonymous Symbol]                       0x000010b8   Section        0  timers_irq.o(.text.TM10_IRQ)
    [Anonymous Symbol]                       0x00001114   Section        0  mg32x02z__irqhandler.o(.text.TM10_IRQHandler)
    [Anonymous Symbol]                       0x0000111c   Section        0  timers_irq.o(.text.TM16_IRQ)
    __arm_cp.7_0                             0x00001178   Number         4  timers_irq.o(.text.TM16_IRQ)
    [Anonymous Symbol]                       0x0000117c   Section        0  mg32x02z__irqhandler.o(.text.TM1x_IRQHandler)
    [Anonymous Symbol]                       0x00001184   Section        0  mg32x02z_tm_drv.o(.text.TM_ClearFlag)
    [Anonymous Symbol]                       0x00001188   Section        0  mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus)
    [Anonymous Symbol]                       0x00001192   Section        0  mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd)
    [Anonymous Symbol]                       0x000011a2   Section        0  mg32x02z_tm_drv.o(.text.TM_IT_Config)
    [Anonymous Symbol]                       0x000011b8   Section        0  mg32x02z_tm_init.o(.text.TM_Init)
    __arm_cp.0_0                             0x00001218   Number         4  mg32x02z_tm_init.o(.text.TM_Init)
    __arm_cp.0_1                             0x0000121c   Number         4  mg32x02z_tm_init.o(.text.TM_Init)
    __arm_cp.0_2                             0x00001220   Number         4  mg32x02z_tm_init.o(.text.TM_Init)
    __arm_cp.0_3                             0x00001224   Number         4  mg32x02z_tm_init.o(.text.TM_Init)
    __arm_cp.0_4                             0x00001228   Number         4  mg32x02z_tm_init.o(.text.TM_Init)
    __arm_cp.0_5                             0x0000122c   Number         4  mg32x02z_tm_init.o(.text.TM_Init)
    [Anonymous Symbol]                       0x00001230   Section        0  mg32x02z_tm_drv.o(.text.TM_Timer_Cmd)
    [Anonymous Symbol]                       0x00001246   Section        0  usart_irq.o(.text.URT0_IRQ)
    [Anonymous Symbol]                       0x000013c6   Section        0  mg32x02z__irqhandler.o(.text.URT0_IRQHandler)
    [Anonymous Symbol]                       0x000013ce   Section        0  mg32x02z_urt_drv.o(.text.URT_ClearITFlag)
    [Anonymous Symbol]                       0x000013d6   Section        0  mg32x02z_urt_drv.o(.text.URT_Cmd)
    [Anonymous Symbol]                       0x000013e4   Section        0  mg32x02z_urt_init.o(.text.URT_Config)
    __arm_cp.0_0                             0x00001498   Number         4  mg32x02z_urt_init.o(.text.URT_Config)
    __arm_cp.0_1                             0x0000149c   Number         4  mg32x02z_urt_init.o(.text.URT_Config)
    [Anonymous Symbol]                       0x000014a0   Section        0  mg32x02z_urt_drv.o(.text.URT_GetITAllFlagStatus)
    [Anonymous Symbol]                       0x000014a8   Section        0  mg32x02z_urt_drv.o(.text.URT_GetITStatus)
    [Anonymous Symbol]                       0x000014ac   Section        0  mg32x02z_urt_drv.o(.text.URT_GetRXData)
    [Anonymous Symbol]                       0x000014b0   Section        0  mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd)
    [Anonymous Symbol]                       0x000014bc   Section        0  mg32x02z_urt_drv.o(.text.URT_IT_Config)
    [Anonymous Symbol]                       0x000014c8   Section        0  mg32x02z_urt_init.o(.text.URT_Init)
    __arm_cp.1_0                             0x000014e0   Number         4  mg32x02z_urt_init.o(.text.URT_Init)
    [Anonymous Symbol]                       0x000014e4   Section        0  usart.o(.text.URT_IsTxEndTransmission)
    [Anonymous Symbol]                       0x000014f0   Section        0  usart.o(.text.URT_IsTxReady)
    [Anonymous Symbol]                       0x000014fc   Section        0  usart.o(.text.URT_Rx_Callback)
    [Anonymous Symbol]                       0x0000150c   Section        0  mg32x02z_urt_drv.o(.text.URT_SetTXData)
    [Anonymous Symbol]                       0x0000153e   Section        0  usart_irq.o(.text.URT_Tx_Callback)
    [Anonymous Symbol]                       0x00001540   Section        0  usart.o(.text.URT_Write)
    [Anonymous Symbol]                       0x0000155a   Section        0  usart.o(.text.URT_WriteWord)
    [Anonymous Symbol]                       0x00001574   Section        0  mg32x02z__common_drv.o(.text.UnProtectModuleReg)
    __arm_cp.9_0                             0x0000157c   Number         4  mg32x02z__common_drv.o(.text.UnProtectModuleReg)
    __NVIC_EnableIRQ                         0x00001581   Thumb Code    16  mg32x02z_chipinit.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00001580   Section        0  mg32x02z_chipinit.o(.text.__NVIC_EnableIRQ)
    __arm_cp.1_0                             0x00001590   Number         4  mg32x02z_chipinit.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x00001595   Thumb Code    36  mg32x02z_chipinit.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00001594   Section        0  mg32x02z_chipinit.o(.text.__NVIC_SetPriority)
    __arm_cp.2_0                             0x000015b8   Number         4  mg32x02z_chipinit.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x000015bc   Section        0  prsm3.o(.text.clearBuffer)
    __arm_cp.3_0                             0x000015d0   Number         4  prsm3.o(.text.clearBuffer)
    __arm_cp.3_1                             0x000015d4   Number         4  prsm3.o(.text.clearBuffer)
    __arm_cp.3_2                             0x000015d8   Number         4  prsm3.o(.text.clearBuffer)
    __arm_cp.3_3                             0x000015dc   Number         4  prsm3.o(.text.clearBuffer)
    [Anonymous Symbol]                       0x000015e0   Section        0  timers.o(.text.delay_ms)
    [Anonymous Symbol]                       0x000015f2   Section        0  timers.o(.text.delay_one_ms)
    [Anonymous Symbol]                       0x0000160e   Section        0  timers.o(.text.delay_one_us)
    [Anonymous Symbol]                       0x00001614   Section        0  timers.o(.text.delay_us)
    [Anonymous Symbol]                       0x00001628   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x0000174c   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x00001750   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x00001754   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x00001758   Number         4  main.o(.text.main)
    __arm_cp.0_4                             0x0000175c   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x00001760   Section        0  wdt.o(.text.wdt_disable)
    [Anonymous Symbol]                       0x00001778   Section        0  wdt.o(.text.wdt_enable)
    __arm_cp.0_0                             0x00001798   Number         4  wdt.o(.text.wdt_enable)
    i.__0printf$5                            0x0000179c   Section        0  printf5.o(i.__0printf$5)
    i.__scatterload_copy                     0x000017bc   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000017ca   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000017cc   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x000017dd   Thumb Code   688  printf5.o(i._printf_core)
    i._printf_core                           0x000017dc   Section        0  printf5.o(i._printf_core)
    i.fputc                                  0x00001ab8   Section        0  fputc.o(i.fputc)
    CRC_Table                                0x00001aca   Data         256  crc.o(.rodata.CRC_Table)
    [Anonymous Symbol]                       0x00001aca   Section        0  crc.o(.rodata.CRC_Table)
    CSC_InitConfig                           0x00001bcc   Data          80  mg32x02z_csc_init.o(.rodata.CSC_InitConfig)
    [Anonymous Symbol]                       0x00001bcc   Section        0  mg32x02z_csc_init.o(.rodata.CSC_InitConfig)
    GPIO_CFG                                 0x00001c1c   Data         116  mg32x02z_gpio_init.o(.rodata.GPIO_CFG)
    [Anonymous Symbol]                       0x00001c1c   Section        0  mg32x02z_gpio_init.o(.rodata.GPIO_CFG)
    [Anonymous Symbol]                       0x00001c90   Section        0  system_mg32x02z.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    HardFault_Handler_C.stacked_lr           0x20000028   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_lr)
    [Anonymous Symbol]                       0x20000028   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_lr)
    HardFault_Handler_C.stacked_pc           0x2000002c   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_pc)
    [Anonymous Symbol]                       0x2000002c   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_pc)
    HardFault_Handler_C.stacked_psr          0x20000030   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_psr)
    [Anonymous Symbol]                       0x20000030   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_psr)
    HardFault_Handler_C.stacked_r0           0x20000034   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r0)
    [Anonymous Symbol]                       0x20000034   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r0)
    HardFault_Handler_C.stacked_r1           0x20000038   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r1)
    [Anonymous Symbol]                       0x20000038   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r1)
    HardFault_Handler_C.stacked_r12          0x2000003c   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r12)
    [Anonymous Symbol]                       0x2000003c   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r12)
    HardFault_Handler_C.stacked_r2           0x20000040   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r2)
    [Anonymous Symbol]                       0x20000040   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r2)
    HardFault_Handler_C.stacked_r3           0x20000044   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r3)
    [Anonymous Symbol]                       0x20000044   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r3)
    uwTick                                   0x2000027c   Data           4  mg32x02z__common_drv.o(.bss.uwTick)
    [Anonymous Symbol]                       0x2000027c   Section        0  mg32x02z__common_drv.o(.bss.uwTick)
    STACK                                    0x20000280   Section     1024  startup_mg32x02z.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mg32x02z.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mg32x02z.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mg32x02z.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    MG32x02z_IEC60730_MANAGER                0x000000d5   Thumb Code     0  startup_mg32x02z.o(.text)
    ReInitial_Stack                          0x000000d5   Thumb Code     6  startup_mg32x02z.o(.text)
    Reset_Handler                            0x000000db   Thumb Code     8  startup_mg32x02z.o(.text)
    HardFault_Handler                        0x000000e5   Thumb Code    24  startup_mg32x02z.o(.text)
    ADC_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    APX_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    COMP_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    DAC_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    DMA_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT0_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT1_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT2_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT3_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    I2C0_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    I2Cx_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    SPI0_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    SPIx_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    SYS_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    TM20_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    TM2x_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    TM3x_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    URT123_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    URT4x_IRQHandler                         0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    USB_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    WWDT_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    __aeabi_memset                           0x00000111   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000111   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000111   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0000011f   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0000011f   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0000011f   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000123   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x00000135   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000135   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_uldivmod                         0x00000173   Thumb Code    96  uldiv.o(.text)
    __aeabi_llsl                             0x000001d3   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x000001d3   Thumb Code     0  llshl.o(.text)
    __scatterload                            0x000001f5   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000001f5   Thumb Code     0  init.o(.text)
    __aeabi_llsr                             0x00000219   Thumb Code    34  llushr.o(.text)
    __semihosting_library_function           0x00000219   Thumb Code     0  semi.o(.text)
    _ll_ushift_r                             0x00000219   Thumb Code     0  llushr.o(.text)
    AddKey                                   0x0000023b   Thumb Code     4  keys.o(.text.AddKey)
    __I$use$semihosting$fputc                0x0000023b   Thumb Code     0  iusesemip.o(.text)
    CRCisWrong                               0x0000023f   Thumb Code    22  crc.o(.text.CRCisWrong)
    CSC_ClearFlag                            0x00000255   Thumb Code     8  mg32x02z_csc_drv.o(.text.CSC_ClearFlag)
    CSC_GetClockSourceState                  0x0000025d   Thumb Code    16  mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState)
    CSC_IHRCO_Cmd                            0x00000271   Thumb Code    20  mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd)
    CSC_IHRCO_Enable                         0x00000285   Thumb Code    64  mg32x02z_csc_init.o(.text.CSC_IHRCO_Enable)
    CSC_Init                                 0x000002c5   Thumb Code   608  mg32x02z_csc_init.o(.text.CSC_Init)
    CSC_XOSC_Enable                          0x0000055d   Thumb Code   100  mg32x02z_csc_init.o(.text.CSC_XOSC_Enable)
    CheckTruth                               0x000005c9   Thumb Code    74  keys.o(.text.CheckTruth)
    ChipInit                                 0x00000613   Thumb Code    90  mg32x02z_chipinit.o(.text.ChipInit)
    CopyFlash                                0x0000066d   Thumb Code     2  keys.o(.text.CopyFlash)
    DS1990_GetID                             0x00000671   Thumb Code    52  keys.o(.text.DS1990_GetID)
    Do_CRC                                   0x000006a9   Thumb Code    28  crc.o(.text.Do_CRC)
    FillFlash                                0x000006c9   Thumb Code   136  keys.o(.text.FillFlash)
    GPIO_Init                                0x00000765   Thumb Code    20  mg32x02z_gpio_init.o(.text.GPIO_Init)
    GPIO_PinMode_Select                      0x0000077d   Thumb Code    18  mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select)
    GetBlocksLeft                            0x0000078f   Thumb Code    34  flash.o(.text.GetBlocksLeft)
    HardFault_Handler_C                      0x000007b1   Thumb Code   140  system_mg32x02z.o(.text.HardFault_Handler_C)
    IAP_CopyIAPInRAM                         0x000008f9   Thumb Code    28  iap.o(.text.IAP_CopyIAPInRAM)
    IAP_CopyRAMInIAP                         0x00000915   Thumb Code    16  iap.o(.text.IAP_CopyRAMInIAP)
    IAP_Erase_OnePage                        0x00000925   Thumb Code    30  iap.o(.text.IAP_Erase_OnePage)
    IAP_Erase_Page                           0x00000945   Thumb Code   168  iap.o(.text.IAP_Erase_Page)
    IAP_GetPageNumberOfByte                  0x000009f5   Thumb Code     4  iap.o(.text.IAP_GetPageNumberOfByte)
    IAP_Init                                 0x000009f9   Thumb Code    52  iap.o(.text.IAP_Init)
    IAP_Multiple_Write                       0x00000a31   Thumb Code   180  iap.o(.text.IAP_Multiple_Write)
    IAP_ReadByte                             0x00000af1   Thumb Code    24  iap.o(.text.IAP_ReadByte)
    IAP_ReadWord                             0x00000b09   Thumb Code    24  iap.o(.text.IAP_ReadWord)
    IWDT_Cmd                                 0x00000b21   Thumb Code    20  mg32x02z_iwdt_drv.o(.text.IWDT_Cmd)
    IWDT_Divider_Select                      0x00000b39   Thumb Code    16  mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select)
    IncTick                                  0x00000b4d   Thumb Code    12  mg32x02z__common_drv.o(.text.IncTick)
    MEM_ClearFlag                            0x00000b5d   Thumb Code     8  mg32x02z_mem_drv.o(.text.MEM_ClearFlag)
    MEM_GetFlagStatus                        0x00000b65   Thumb Code    16  mg32x02z_mem_drv.o(.text.MEM_GetFlagStatus)
    MEM_GetIAPSize                           0x00000b75   Thumb Code     8  mg32x02z_mem_drv.o(.text.MEM_GetIAPSize)
    MEM_SetIAPSize                           0x00000b81   Thumb Code   108  mg32x02z_mem_drv.o(.text.MEM_SetIAPSize)
    NMI_Handler                              0x00000bf1   Thumb Code     2  mg32x02z__irqhandler.o(.text.NMI_Handler)
    OneWire_Read                             0x00000bf5   Thumb Code    76  onewire.o(.text.OneWire_Read)
    OneWire_Start                            0x00000c41   Thumb Code    60  onewire.o(.text.OneWire_Start)
    OneWire_Write                            0x00000c7d   Thumb Code    80  onewire.o(.text.OneWire_Write)
    PRSM3AddNewByte                          0x00000cd5   Thumb Code    76  prsm3.o(.text.PRSM3AddNewByte)
    PRSM3ReceiveLineComplete                 0x00000d21   Thumb Code   292  prsm3.o(.text.PRSM3ReceiveLineComplete)
    PendSV_Handler                           0x00000e61   Thumb Code     2  mg32x02z__irqhandler.o(.text.PendSV_Handler)
    ProtectModuleReg                         0x00000e63   Thumb Code     8  mg32x02z__common_drv.o(.text.ProtectModuleReg)
    RST_Init                                 0x00000e6d   Thumb Code    32  mg32x02z_rst_init.o(.text.RST_Init)
    RemoveKey                                0x00000e9d   Thumb Code   216  keys.o(.text.RemoveKey)
    ReturnReply                              0x00000f79   Thumb Code    80  prsm3.o(.text.ReturnReply)
    SVC_Handler                              0x00000fd5   Thumb Code     2  mg32x02z__irqhandler.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000fd7   Thumb Code     8  mg32x02z__irqhandler.o(.text.SysTick_Handler)
    SystemInit                               0x00000fe1   Thumb Code     8  system_mg32x02z.o(.text.SystemInit)
    TIM01_Callback                           0x00000ff1   Thumb Code     8  timers.o(.text.TIM01_Callback)
    TIM10_Callback                           0x00000ff9   Thumb Code    28  timers.o(.text.TIM10_Callback)
    TIM16_Callback                           0x00001019   Thumb Code    32  timers.o(.text.TIM16_Callback)
    TM01_IRQ                                 0x00001045   Thumb Code    92  timers_irq.o(.text.TM01_IRQ)
    TM0x_IRQHandler                          0x000010a5   Thumb Code    16  mg32x02z__irqhandler.o(.text.TM0x_IRQHandler)
    TM10_IRQ                                 0x000010b9   Thumb Code    92  timers_irq.o(.text.TM10_IRQ)
    TM10_IRQHandler                          0x00001115   Thumb Code     8  mg32x02z__irqhandler.o(.text.TM10_IRQHandler)
    TM16_IRQ                                 0x0000111d   Thumb Code    92  timers_irq.o(.text.TM16_IRQ)
    TM1x_IRQHandler                          0x0000117d   Thumb Code     8  mg32x02z__irqhandler.o(.text.TM1x_IRQHandler)
    TM_ClearFlag                             0x00001185   Thumb Code     4  mg32x02z_tm_drv.o(.text.TM_ClearFlag)
    TM_GetSingleFlagStatus                   0x00001189   Thumb Code    10  mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus)
    TM_ITEA_Cmd                              0x00001193   Thumb Code    16  mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd)
    TM_IT_Config                             0x000011a3   Thumb Code    20  mg32x02z_tm_drv.o(.text.TM_IT_Config)
    TM_Init                                  0x000011b9   Thumb Code    96  mg32x02z_tm_init.o(.text.TM_Init)
    TM_Timer_Cmd                             0x00001231   Thumb Code    22  mg32x02z_tm_drv.o(.text.TM_Timer_Cmd)
    URT0_IRQ                                 0x00001247   Thumb Code   384  usart_irq.o(.text.URT0_IRQ)
    URT0_IRQHandler                          0x000013c7   Thumb Code     8  mg32x02z__irqhandler.o(.text.URT0_IRQHandler)
    URT_ClearITFlag                          0x000013cf   Thumb Code     8  mg32x02z_urt_drv.o(.text.URT_ClearITFlag)
    URT_Cmd                                  0x000013d7   Thumb Code    12  mg32x02z_urt_drv.o(.text.URT_Cmd)
    URT_Config                               0x000013e5   Thumb Code   180  mg32x02z_urt_init.o(.text.URT_Config)
    URT_GetITAllFlagStatus                   0x000014a1   Thumb Code     8  mg32x02z_urt_drv.o(.text.URT_GetITAllFlagStatus)
    URT_GetITStatus                          0x000014a9   Thumb Code     4  mg32x02z_urt_drv.o(.text.URT_GetITStatus)
    URT_GetRXData                            0x000014ad   Thumb Code     4  mg32x02z_urt_drv.o(.text.URT_GetRXData)
    URT_ITEA_Cmd                             0x000014b1   Thumb Code    12  mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd)
    URT_IT_Config                            0x000014bd   Thumb Code    12  mg32x02z_urt_drv.o(.text.URT_IT_Config)
    URT_Init                                 0x000014c9   Thumb Code    24  mg32x02z_urt_init.o(.text.URT_Init)
    URT_IsTxEndTransmission                  0x000014e5   Thumb Code    12  usart.o(.text.URT_IsTxEndTransmission)
    URT_IsTxReady                            0x000014f1   Thumb Code    10  usart.o(.text.URT_IsTxReady)
    URT_Rx_Callback                          0x000014fd   Thumb Code    16  usart.o(.text.URT_Rx_Callback)
    URT_SetTXData                            0x0000150d   Thumb Code    50  mg32x02z_urt_drv.o(.text.URT_SetTXData)
    URT_Tx_Callback                          0x0000153f   Thumb Code     2  usart_irq.o(.text.URT_Tx_Callback)
    URT_Write                                0x00001541   Thumb Code    26  usart.o(.text.URT_Write)
    URT_WriteWord                            0x0000155b   Thumb Code    24  usart.o(.text.URT_WriteWord)
    UnProtectModuleReg                       0x00001575   Thumb Code     8  mg32x02z__common_drv.o(.text.UnProtectModuleReg)
    clearBuffer                              0x000015bd   Thumb Code    20  prsm3.o(.text.clearBuffer)
    delay_ms                                 0x000015e1   Thumb Code    18  timers.o(.text.delay_ms)
    delay_one_ms                             0x000015f3   Thumb Code    28  timers.o(.text.delay_one_ms)
    delay_one_us                             0x0000160f   Thumb Code     6  timers.o(.text.delay_one_us)
    delay_us                                 0x00001615   Thumb Code    18  timers.o(.text.delay_us)
    main                                     0x00001629   Thumb Code   292  main.o(.text.main)
    wdt_disable                              0x00001761   Thumb Code    24  wdt.o(.text.wdt_disable)
    wdt_enable                               0x00001779   Thumb Code    32  wdt.o(.text.wdt_enable)
    __0printf$5                              0x0000179d   Thumb Code    24  printf5.o(i.__0printf$5)
    __1printf$5                              0x0000179d   Thumb Code     0  printf5.o(i.__0printf$5)
    __2printf                                0x0000179d   Thumb Code     0  printf5.o(i.__0printf$5)
    __scatterload_copy                       0x000017bd   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000017cb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000017cd   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x00001ab9   Thumb Code    18  fputc.o(i.fputc)
    Region$$Table$$Base                      0x00001cc4   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00001ce4   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    SystemCoreClock                          0x20000004   Data           4  system_mg32x02z.o(.data.SystemCoreClock)
    key1                                     0x20000008   Data           8  keys.o(.data.key1)
    key2                                     0x20000010   Data           8  keys.o(.data.key2)
    key3                                     0x20000018   Data           8  keys.o(.data.key3)
    CommandSize                              0x20000020   Data           1  prsm3.o(.bss.CommandSize)
    CurLastBlockPos                          0x20000024   Data           4  flash.o(.bss.CurLastBlockPos)
    InpWasChange                             0x20000048   Data           1  gpio.o(.bss.InpWasChange)
    MessLen                                  0x20000049   Data           1  prsm3.o(.bss.MessLen)
    ModInp                                   0x2000004a   Data           2  gpio.o(.bss.ModInp)
    RecBytes                                 0x2000004c   Data          24  prsm3.o(.bss.RecBytes)
    cfg                                      0x20000064   Data          12  flash.o(.bss.cfg)
    flashBlock                               0x20000070   Data         512  keys.o(.bss.flashBlock)
    iptr                                     0x20000270   Data           1  prsm3.o(.bss.iptr)
    keyCurrent                               0x20000271   Data           8  keys.o(.bss.keyCurrent)
    pisk_cnt                                 0x20000279   Data           1  gpio.o(.bss.pisk_cnt)
    usUsart                                  0x2000027a   Data           2  prsm3.o(.bss.usUsart)
    __initial_sp                             0x20000680   Data           0  startup_mg32x02z.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000db

  Load Region LR_1 (Base: 0x00000000, Size: 0x00001d04, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00001ce4, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          380    RESET               startup_mg32x02z.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         2400  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         2686    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         2689    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2691    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2693    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         2694    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2696    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2698    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         2687    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x0000003c   Code   RO          381  * .text               startup_mg32x02z.o
    0x00000110   0x00000110   0x00000024   Code   RO         2409    .text               mc_p.l(memseta.o)
    0x00000134   0x00000134   0x0000003e   Code   RO         2709    .text               mc_p.l(uidiv_div0.o)
    0x00000172   0x00000172   0x00000060   Code   RO         2715    .text               mc_p.l(uldiv.o)
    0x000001d2   0x000001d2   0x00000020   Code   RO         2717    .text               mc_p.l(llshl.o)
    0x000001f2   0x000001f2   0x00000002   PAD
    0x000001f4   0x000001f4   0x00000024   Code   RO         2732    .text               mc_p.l(init.o)
    0x00000218   0x00000218   0x00000000   Code   RO         2734    .text               mc_p.l(semi.o)
    0x00000218   0x00000218   0x00000022   Code   RO         2735    .text               mc_p.l(llushr.o)
    0x0000023a   0x0000023a   0x00000000   Code   RO         2737    .text               mc_p.l(iusesemip.o)
    0x0000023a   0x0000023a   0x00000004   Code   RO          260    .text.AddKey        keys.o
    0x0000023e   0x0000023e   0x00000016   Code   RO           60    .text.CRCisWrong    crc.o
    0x00000254   0x00000254   0x00000008   Code   RO          838    .text.CSC_ClearFlag  mg32x02z_csc_drv.o
    0x0000025c   0x0000025c   0x00000014   Code   RO          824    .text.CSC_GetClockSourceState  mg32x02z_csc_drv.o
    0x00000270   0x00000270   0x00000014   Code   RO          776    .text.CSC_IHRCO_Cmd  mg32x02z_csc_drv.o
    0x00000284   0x00000284   0x00000040   Code   RO          287    .text.CSC_IHRCO_Enable  mg32x02z_csc_init.o
    0x000002c4   0x000002c4   0x00000298   Code   RO          293    .text.CSC_Init      mg32x02z_csc_init.o
    0x0000055c   0x0000055c   0x0000006c   Code   RO          289    .text.CSC_XOSC_Enable  mg32x02z_csc_init.o
    0x000005c8   0x000005c8   0x0000004a   Code   RO          258    .text.CheckTruth    keys.o
    0x00000612   0x00000612   0x0000005a   Code   RO          304    .text.ChipInit      mg32x02z_chipinit.o
    0x0000066c   0x0000066c   0x00000002   Code   RO          256    .text.CopyFlash     keys.o
    0x0000066e   0x0000066e   0x00000002   PAD
    0x00000670   0x00000670   0x00000038   Code   RO          266    .text.DS1990_GetID  keys.o
    0x000006a8   0x000006a8   0x00000020   Code   RO           58    .text.Do_CRC        crc.o
    0x000006c8   0x000006c8   0x0000009c   Code   RO          254    .text.FillFlash     keys.o
    0x00000764   0x00000764   0x00000018   Code   RO          318    .text.GPIO_Init     mg32x02z_gpio_init.o
    0x0000077c   0x0000077c   0x00000012   Code   RO         1072    .text.GPIO_PinMode_Select  mg32x02z_gpio_drv.o
    0x0000078e   0x0000078e   0x00000022   Code   RO          175    .text.GetBlocksLeft  flash.o
    0x000007b0   0x000007b0   0x00000148   Code   RO          392    .text.HardFault_Handler_C  system_mg32x02z.o
    0x000008f8   0x000008f8   0x0000001c   Code   RO          207    .text.IAP_CopyIAPInRAM  iap.o
    0x00000914   0x00000914   0x00000010   Code   RO          203    .text.IAP_CopyRAMInIAP  iap.o
    0x00000924   0x00000924   0x0000001e   Code   RO          193    .text.IAP_Erase_OnePage  iap.o
    0x00000942   0x00000942   0x00000002   PAD
    0x00000944   0x00000944   0x000000b0   Code   RO          195    .text.IAP_Erase_Page  iap.o
    0x000009f4   0x000009f4   0x00000004   Code   RO          215    .text.IAP_GetPageNumberOfByte  iap.o
    0x000009f8   0x000009f8   0x00000038   Code   RO          191    .text.IAP_Init      iap.o
    0x00000a30   0x00000a30   0x000000c0   Code   RO          205    .text.IAP_Multiple_Write  iap.o
    0x00000af0   0x00000af0   0x00000018   Code   RO          199    .text.IAP_ReadByte  iap.o
    0x00000b08   0x00000b08   0x00000018   Code   RO          201    .text.IAP_ReadWord  iap.o
    0x00000b20   0x00000b20   0x00000018   Code   RO         1230    .text.IWDT_Cmd      mg32x02z_iwdt_drv.o
    0x00000b38   0x00000b38   0x00000014   Code   RO         1222    .text.IWDT_Divider_Select  mg32x02z_iwdt_drv.o
    0x00000b4c   0x00000b4c   0x00000010   Code   RO         2376    .text.IncTick       mg32x02z__common_drv.o
    0x00000b5c   0x00000b5c   0x00000008   Code   RO         1252    .text.MEM_ClearFlag  mg32x02z_mem_drv.o
    0x00000b64   0x00000b64   0x00000010   Code   RO         1250    .text.MEM_GetFlagStatus  mg32x02z_mem_drv.o
    0x00000b74   0x00000b74   0x0000000c   Code   RO         1290    .text.MEM_GetIAPSize  mg32x02z_mem_drv.o
    0x00000b80   0x00000b80   0x00000070   Code   RO         1292    .text.MEM_SetIAPSize  mg32x02z_mem_drv.o
    0x00000bf0   0x00000bf0   0x00000002   Code   RO          356    .text.NMI_Handler   mg32x02z__irqhandler.o
    0x00000bf2   0x00000bf2   0x00000002   PAD
    0x00000bf4   0x00000bf4   0x0000004c   Code   RO          235    .text.OneWire_Read  onewire.o
    0x00000c40   0x00000c40   0x0000003c   Code   RO          231    .text.OneWire_Start  onewire.o
    0x00000c7c   0x00000c7c   0x00000058   Code   RO          233    .text.OneWire_Write  onewire.o
    0x00000cd4   0x00000cd4   0x0000004c   Code   RO           12    .text.PRSM3AddNewByte  prsm3.o
    0x00000d20   0x00000d20   0x00000140   Code   RO           14    .text.PRSM3ReceiveLineComplete  prsm3.o
    0x00000e60   0x00000e60   0x00000002   Code   RO          360    .text.PendSV_Handler  mg32x02z__irqhandler.o
    0x00000e62   0x00000e62   0x00000008   Code   RO         2386    .text.ProtectModuleReg  mg32x02z__common_drv.o
    0x00000e6a   0x00000e6a   0x00000002   PAD
    0x00000e6c   0x00000e6c   0x00000030   Code   RO          328    .text.RST_Init      mg32x02z_rst_init.o
    0x00000e9c   0x00000e9c   0x000000dc   Code   RO          262    .text.RemoveKey     keys.o
    0x00000f78   0x00000f78   0x0000005c   Code   RO           16    .text.ReturnReply   prsm3.o
    0x00000fd4   0x00000fd4   0x00000002   Code   RO          358    .text.SVC_Handler   mg32x02z__irqhandler.o
    0x00000fd6   0x00000fd6   0x00000008   Code   RO          362    .text.SysTick_Handler  mg32x02z__irqhandler.o
    0x00000fde   0x00000fde   0x00000002   PAD
    0x00000fe0   0x00000fe0   0x00000010   Code   RO          390    .text.SystemInit    system_mg32x02z.o
    0x00000ff0   0x00000ff0   0x00000008   Code   RO           34    .text.TIM01_Callback  timers.o
    0x00000ff8   0x00000ff8   0x00000020   Code   RO           36    .text.TIM10_Callback  timers.o
    0x00001018   0x00001018   0x0000002c   Code   RO           38    .text.TIM16_Callback  timers.o
    0x00001044   0x00001044   0x00000060   Code   RO          142    .text.TM01_IRQ      timers_irq.o
    0x000010a4   0x000010a4   0x00000014   Code   RO          364    .text.TM0x_IRQHandler  mg32x02z__irqhandler.o
    0x000010b8   0x000010b8   0x0000005c   Code   RO          144    .text.TM10_IRQ      timers_irq.o
    0x00001114   0x00001114   0x00000008   Code   RO          366    .text.TM10_IRQHandler  mg32x02z__irqhandler.o
    0x0000111c   0x0000111c   0x00000060   Code   RO          146    .text.TM16_IRQ      timers_irq.o
    0x0000117c   0x0000117c   0x00000008   Code   RO          368    .text.TM1x_IRQHandler  mg32x02z__irqhandler.o
    0x00001184   0x00001184   0x00000004   Code   RO         1926    .text.TM_ClearFlag  mg32x02z_tm_drv.o
    0x00001188   0x00001188   0x0000000a   Code   RO         1922    .text.TM_GetSingleFlagStatus  mg32x02z_tm_drv.o
    0x00001192   0x00001192   0x00000010   Code   RO         1920    .text.TM_ITEA_Cmd   mg32x02z_tm_drv.o
    0x000011a2   0x000011a2   0x00000014   Code   RO         1918    .text.TM_IT_Config  mg32x02z_tm_drv.o
    0x000011b6   0x000011b6   0x00000002   PAD
    0x000011b8   0x000011b8   0x00000078   Code   RO          336    .text.TM_Init       mg32x02z_tm_init.o
    0x00001230   0x00001230   0x00000016   Code   RO         1648    .text.TM_Timer_Cmd  mg32x02z_tm_drv.o
    0x00001246   0x00001246   0x00000180   Code   RO          159    .text.URT0_IRQ      usart_irq.o
    0x000013c6   0x000013c6   0x00000008   Code   RO          370    .text.URT0_IRQHandler  mg32x02z__irqhandler.o
    0x000013ce   0x000013ce   0x00000008   Code   RO         1960    .text.URT_ClearITFlag  mg32x02z_urt_drv.o
    0x000013d6   0x000013d6   0x0000000c   Code   RO         1996    .text.URT_Cmd       mg32x02z_urt_drv.o
    0x000013e2   0x000013e2   0x00000002   PAD
    0x000013e4   0x000013e4   0x000000bc   Code   RO          344    .text.URT_Config    mg32x02z_urt_init.o
    0x000014a0   0x000014a0   0x00000008   Code   RO         1956    .text.URT_GetITAllFlagStatus  mg32x02z_urt_drv.o
    0x000014a8   0x000014a8   0x00000004   Code   RO         1952    .text.URT_GetITStatus  mg32x02z_urt_drv.o
    0x000014ac   0x000014ac   0x00000004   Code   RO         2076    .text.URT_GetRXData  mg32x02z_urt_drv.o
    0x000014b0   0x000014b0   0x0000000c   Code   RO         1954    .text.URT_ITEA_Cmd  mg32x02z_urt_drv.o
    0x000014bc   0x000014bc   0x0000000c   Code   RO         1950    .text.URT_IT_Config  mg32x02z_urt_drv.o
    0x000014c8   0x000014c8   0x0000001c   Code   RO          346    .text.URT_Init      mg32x02z_urt_init.o
    0x000014e4   0x000014e4   0x0000000c   Code   RO           81    .text.URT_IsTxEndTransmission  usart.o
    0x000014f0   0x000014f0   0x0000000a   Code   RO           79    .text.URT_IsTxReady  usart.o
    0x000014fa   0x000014fa   0x00000002   PAD
    0x000014fc   0x000014fc   0x00000010   Code   RO           71    .text.URT_Rx_Callback  usart.o
    0x0000150c   0x0000150c   0x00000032   Code   RO         2112    .text.URT_SetTXData  mg32x02z_urt_drv.o
    0x0000153e   0x0000153e   0x00000002   Code   RO          157    .text.URT_Tx_Callback  usart_irq.o
    0x00001540   0x00001540   0x0000001a   Code   RO           73    .text.URT_Write     usart.o
    0x0000155a   0x0000155a   0x00000018   Code   RO           75    .text.URT_WriteWord  usart.o
    0x00001572   0x00001572   0x00000002   PAD
    0x00001574   0x00001574   0x0000000c   Code   RO         2388    .text.UnProtectModuleReg  mg32x02z__common_drv.o
    0x00001580   0x00001580   0x00000014   Code   RO          306    .text.__NVIC_EnableIRQ  mg32x02z_chipinit.o
    0x00001594   0x00001594   0x00000028   Code   RO          308    .text.__NVIC_SetPriority  mg32x02z_chipinit.o
    0x000015bc   0x000015bc   0x00000024   Code   RO           18    .text.clearBuffer   prsm3.o
    0x000015e0   0x000015e0   0x00000012   Code   RO           42    .text.delay_ms      timers.o
    0x000015f2   0x000015f2   0x0000001c   Code   RO           40    .text.delay_one_ms  timers.o
    0x0000160e   0x0000160e   0x00000006   Code   RO           44    .text.delay_one_us  timers.o
    0x00001614   0x00001614   0x00000012   Code   RO           46    .text.delay_us      timers.o
    0x00001626   0x00001626   0x00000002   PAD
    0x00001628   0x00001628   0x00000138   Code   RO            2    .text.main          main.o
    0x00001760   0x00001760   0x00000018   Code   RO          122    .text.wdt_disable   wdt.o
    0x00001778   0x00001778   0x00000024   Code   RO          118    .text.wdt_enable    wdt.o
    0x0000179c   0x0000179c   0x00000020   Code   RO         2544    i.__0printf$5       mc_p.l(printf5.o)
    0x000017bc   0x000017bc   0x0000000e   Code   RO         2740    i.__scatterload_copy  mc_p.l(handlers.o)
    0x000017ca   0x000017ca   0x00000002   Code   RO         2741    i.__scatterload_null  mc_p.l(handlers.o)
    0x000017cc   0x000017cc   0x0000000e   Code   RO         2742    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x000017da   0x000017da   0x00000002   PAD
    0x000017dc   0x000017dc   0x000002dc   Code   RO         2551    i._printf_core      mc_p.l(printf5.o)
    0x00001ab8   0x00001ab8   0x00000012   Code   RO         2700    i.fputc             mc_p.l(fputc.o)
    0x00001aca   0x00001aca   0x00000100   Data   RO           62    .rodata.CRC_Table   crc.o
    0x00001bca   0x00001bca   0x00000002   PAD
    0x00001bcc   0x00001bcc   0x00000050   Data   RO          295    .rodata.CSC_InitConfig  mg32x02z_csc_init.o
    0x00001c1c   0x00001c1c   0x00000074   Data   RO          320    .rodata.GPIO_CFG    mg32x02z_gpio_init.o
    0x00001c90   0x00001c90   0x00000033   Data   RO          403    .rodata.str1.1      system_mg32x02z.o
    0x00001cc3   0x00001cc3   0x00000001   PAD
    0x00001cc4   0x00001cc4   0x00000020   Data   RO         2739    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00001ce4, Size: 0x00000020, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001ce4   0x00000004   Data   RW         2704    .data               mc_p.l(stdout.o)
    0x20000004   0x00001ce8   0x00000004   Data   RW          394    .data.SystemCoreClock  system_mg32x02z.o
    0x20000008   0x00001cec   0x00000008   Data   RW          268    .data.key1          keys.o
    0x20000010   0x00001cf4   0x00000008   Data   RW          269    .data.key2          keys.o
    0x20000018   0x00001cfc   0x00000008   Data   RW          270    .data.key3          keys.o


    Execution Region ER_ZI (Exec base: 0x20000020, Load base: 0x00001d04, Size: 0x00000660, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000020        -       0x00000001   Zero   RW           25    .bss.CommandSize    prsm3.o
    0x20000021   0x00001d04   0x00000003   PAD
    0x20000024        -       0x00000004   Zero   RW          182    .bss.CurLastBlockPos  flash.o
    0x20000028        -       0x00000004   Zero   RW          400    .bss.HardFault_Handler_C.stacked_lr  system_mg32x02z.o
    0x2000002c        -       0x00000004   Zero   RW          401    .bss.HardFault_Handler_C.stacked_pc  system_mg32x02z.o
    0x20000030        -       0x00000004   Zero   RW          402    .bss.HardFault_Handler_C.stacked_psr  system_mg32x02z.o
    0x20000034        -       0x00000004   Zero   RW          395    .bss.HardFault_Handler_C.stacked_r0  system_mg32x02z.o
    0x20000038        -       0x00000004   Zero   RW          396    .bss.HardFault_Handler_C.stacked_r1  system_mg32x02z.o
    0x2000003c        -       0x00000004   Zero   RW          399    .bss.HardFault_Handler_C.stacked_r12  system_mg32x02z.o
    0x20000040        -       0x00000004   Zero   RW          397    .bss.HardFault_Handler_C.stacked_r2  system_mg32x02z.o
    0x20000044        -       0x00000004   Zero   RW          398    .bss.HardFault_Handler_C.stacked_r3  system_mg32x02z.o
    0x20000048        -       0x00000001   Zero   RW          105    .bss.InpWasChange   gpio.o
    0x20000049        -       0x00000001   Zero   RW           21    .bss.MessLen        prsm3.o
    0x2000004a        -       0x00000002   Zero   RW          108    .bss.ModInp         gpio.o
    0x2000004c        -       0x00000018   Zero   RW           24    .bss.RecBytes       prsm3.o
    0x20000064        -       0x0000000c   Zero   RW          181    .bss.cfg            flash.o
    0x20000070        -       0x00000200   Zero   RW          276    .bss.flashBlock     keys.o
    0x20000270        -       0x00000001   Zero   RW           20    .bss.iptr           prsm3.o
    0x20000271        -       0x00000008   Zero   RW          277    .bss.keyCurrent     keys.o
    0x20000279        -       0x00000001   Zero   RW           99    .bss.pisk_cnt       gpio.o
    0x2000027a        -       0x00000002   Zero   RW           23    .bss.usUsart        prsm3.o
    0x2000027c        -       0x00000004   Zero   RW         2392    .bss.uwTick         mg32x02z__common_drv.o
    0x20000280        -       0x00000400   Zero   RW          378    STACK               startup_mg32x02z.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        54          4        256          0          0       1199   crc.o
        34          0          0          0         16       2277   flash.o
         0          0          0          0          4       1536   gpio.o
       550         24          0          0          0      12650   iap.o
       512         28          0         24        520       3342   keys.o
       312         20          0          0          0      15003   main.o
        36          8          0          0          4       4938   mg32x02z__common_drv.o
        58          4          0          0          0      12201   mg32x02z__irqhandler.o
       150          8          0          0          0       2448   mg32x02z_chipinit.o
        48          4          0          0          0      19433   mg32x02z_csc_drv.o
       836         64         80          0          0       9590   mg32x02z_csc_init.o
        18          0          0          0          0       8870   mg32x02z_gpio_drv.o
        24          4        116          0          0        828   mg32x02z_gpio_init.o
        44          8          0          0          0       4179   mg32x02z_iwdt_drv.o
       148          8          0          0          0      13705   mg32x02z_mem_drv.o
        48         16          0          0          0       3827   mg32x02z_rst_init.o
        72          0          0          0          0      41136   mg32x02z_tm_drv.o
       120         24          0          0          0       7657   mg32x02z_tm_init.o
       110          4          0          0          0      33383   mg32x02z_urt_drv.o
       216         12          0          0          0       8020   mg32x02z_urt_init.o
       224          8          0          0          0       2031   onewire.o
       524         62          0          0         29      15373   prsm3.o
        60         12        192          0       1024        676   startup_mg32x02z.o
       344        196         51          4         32       1393   system_mg32x02z.o
       154         16          0          0          0       9441   timers.o
       284          8          0          0          0       9359   timers_irq.o
        88          0          0          0          0       8472   usart.o
       386          0          0          0          0       7779   usart_irq.o
        60          4          0          0          0       1947   wdt.o

    ----------------------------------------------------------------------
      5534        546        730         28       1632     262693   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        20          0          3          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        18          0          0          0          0         72   fputc.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusesemip.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0        100   memseta.o
       764         52          0          0          0        168   printf5.o
         0          0          0          0          0          0   semi.o
         0          0          0          4          0          0   stdout.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1132         68          0          4          0        700   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1128         68          0          4          0        700   mc_p.l

    ----------------------------------------------------------------------
      1132         68          0          4          0        700   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      6666        614        730         32       1632     262761   Grand Totals
      6666        614        730         32       1632     262761   ELF Image Totals
      6666        614        730         32          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7396 (   7.22kB)
    Total RW  Size (RW Data + ZI Data)              1664 (   1.63kB)
    Total ROM Size (Code + RO Data + RW Data)       7428 (   7.25kB)

==============================================================================

