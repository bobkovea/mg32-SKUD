Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to mg32x02z_chipinit.o(.text.ChipInit) for ChipInit
    main.o(.text.main) refers to flash.o(.text.FlashFirstInit) for FlashFirstInit
    main.o(.text.main) refers to gpio.o(.text.GPIO_Config) for GPIO_Config
    main.o(.text.main) refers to timers.o(.text.TIM_Config) for TIM_Config
    main.o(.text.main) refers to usart.o(.text.USART_Config) for USART_Config
    main.o(.text.main) refers to wdt.o(.text.WDT_Config) for WDT_Config
    main.o(.text.main) refers to mg32x02z_urt_drv.o(.text.URT_Cmd) for URT_Cmd
    main.o(.text.main) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    main.o(.text.main) refers to wdt.o(.text.wdt_enable) for wdt_enable
    main.o(.text.main) refers to skud_algo.o(.text.HandleEvent) for HandleEvent
    main.o(.text.main) refers to wdt.o(.text.wdt_reset) for wdt_reset
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    bus.o(.text.Bus_AddNewByte) refers to mg32x02z_urt_drv.o(.text.URT_GetRXData) for URT_GetRXData
    bus.o(.text.Bus_AddNewByte) refers to buffer.o(.text.putEvent) for putEvent
    bus.o(.text.Bus_AddNewByte) refers to bus.o(.bss.usUsart) for usUsart
    bus.o(.text.Bus_AddNewByte) refers to bus.o(.bss.parsingStatus) for parsingStatus
    bus.o(.text.Bus_AddNewByte) refers to bus.o(.bss.iptr) for iptr
    bus.o(.text.Bus_AddNewByte) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.text.Bus_AddNewByte) refers to bus.o(.data.MessageLenArr) for MessageLenArr
    bus.o(.text.Bus_AddNewByte) refers to bus.o(.bss.MessLen) for MessLen
    bus.o(.ARM.exidx.text.Bus_AddNewByte) refers to bus.o(.text.Bus_AddNewByte) for [Anonymous Symbol]
    bus.o(.text.Bus_ParseMessage) refers to bus.o(.text.Bus_ParseWriteRequest9) for Bus_ParseWriteRequest9
    bus.o(.text.Bus_ParseMessage) refers to bus.o(.text.Bus_ParseReadRequest) for Bus_ParseReadRequest
    bus.o(.text.Bus_ParseMessage) refers to bus.o(.text.Bus_ParseWriteRequest24) for Bus_ParseWriteRequest24
    bus.o(.text.Bus_ParseMessage) refers to crc.o(.text.Do_CRC) for Do_CRC
    bus.o(.text.Bus_ParseMessage) refers to usart.o(.text.URT_Print) for URT_Print
    bus.o(.text.Bus_ParseMessage) refers to bus.o(.bss.iptr) for iptr
    bus.o(.text.Bus_ParseMessage) refers to bus.o(.bss.CommandSize) for CommandSize
    bus.o(.text.Bus_ParseMessage) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.ARM.exidx.text.Bus_ParseMessage) refers to bus.o(.text.Bus_ParseMessage) for [Anonymous Symbol]
    bus.o(.text.Bus_ParseWriteRequest9) refers to crc.o(.text.CRCisWrong) for CRCisWrong
    bus.o(.text.Bus_ParseWriteRequest9) refers to crc.o(.text.Do_CRC) for Do_CRC
    bus.o(.text.Bus_ParseWriteRequest9) refers to usart.o(.text.URT_Print) for URT_Print
    bus.o(.text.Bus_ParseWriteRequest9) refers to flash.o(.text.ActivateKey) for ActivateKey
    bus.o(.text.Bus_ParseWriteRequest9) refers to flash.o(.text.DoCommand) for DoCommand
    bus.o(.text.Bus_ParseWriteRequest9) refers to flash.o(.text.SetVariable) for SetVariable
    bus.o(.text.Bus_ParseWriteRequest9) refers to bus.o(.bss.CommandSize) for CommandSize
    bus.o(.text.Bus_ParseWriteRequest9) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.text.Bus_ParseWriteRequest9) refers to bus.o(.bss.operStatus) for operStatus
    bus.o(.ARM.exidx.text.Bus_ParseWriteRequest9) refers to bus.o(.text.Bus_ParseWriteRequest9) for [Anonymous Symbol]
    bus.o(.text.Bus_ParseWriteRequest24) refers to crc.o(.text.CRCisWrong) for CRCisWrong
    bus.o(.text.Bus_ParseWriteRequest24) refers to crc.o(.text.Do_CRC) for Do_CRC
    bus.o(.text.Bus_ParseWriteRequest24) refers to usart.o(.text.URT_Print) for URT_Print
    bus.o(.text.Bus_ParseWriteRequest24) refers to flash.o(.text.AddKey) for AddKey
    bus.o(.text.Bus_ParseWriteRequest24) refers to flash.o(.text.SetVariablePack) for SetVariablePack
    bus.o(.text.Bus_ParseWriteRequest24) refers to bus.o(.bss.CommandSize) for CommandSize
    bus.o(.text.Bus_ParseWriteRequest24) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.text.Bus_ParseWriteRequest24) refers to bus.o(.bss.operStatus) for operStatus
    bus.o(.ARM.exidx.text.Bus_ParseWriteRequest24) refers to bus.o(.text.Bus_ParseWriteRequest24) for [Anonymous Symbol]
    bus.o(.text.Bus_ParseReadRequest) refers to crc.o(.text.CRCisWrong) for CRCisWrong
    bus.o(.text.Bus_ParseReadRequest) refers to flash.o(.text.GetVariable) for GetVariable
    bus.o(.text.Bus_ParseReadRequest) refers to crc.o(.text.Do_CRC) for Do_CRC
    bus.o(.text.Bus_ParseReadRequest) refers to usart.o(.text.URT_Print) for URT_Print
    bus.o(.text.Bus_ParseReadRequest) refers to bus.o(.bss.CommandSize) for CommandSize
    bus.o(.text.Bus_ParseReadRequest) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.text.Bus_ParseReadRequest) refers to variables.o(.data.variables) for variables
    bus.o(.ARM.exidx.text.Bus_ParseReadRequest) refers to bus.o(.text.Bus_ParseReadRequest) for [Anonymous Symbol]
    bus.o(.text.Bus_ReturnReply) refers to crc.o(.text.Do_CRC) for Do_CRC
    bus.o(.text.Bus_ReturnReply) refers to usart.o(.text.URT_Print) for URT_Print
    bus.o(.text.Bus_ReturnReply) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.text.Bus_ReturnReply) refers to bus.o(.bss.CommandSize) for CommandSize
    bus.o(.ARM.exidx.text.Bus_ReturnReply) refers to bus.o(.text.Bus_ReturnReply) for [Anonymous Symbol]
    bus.o(.text.Bus_EventResponse) refers to crc.o(.text.Do_CRC) for Do_CRC
    bus.o(.text.Bus_EventResponse) refers to usart.o(.text.URT_Print) for URT_Print
    bus.o(.text.Bus_EventResponse) refers to bus.o(.bss.RecBytes) for RecBytes
    bus.o(.text.Bus_EventResponse) refers to bus.o(.bss.CommandSize) for CommandSize
    bus.o(.ARM.exidx.text.Bus_EventResponse) refers to bus.o(.text.Bus_EventResponse) for [Anonymous Symbol]
    bus.o(.text.Bus_ClearBuffer) refers to bus.o(.bss.MessLen) for MessLen
    bus.o(.text.Bus_ClearBuffer) refers to bus.o(.bss.iptr) for iptr
    bus.o(.text.Bus_ClearBuffer) refers to bus.o(.bss.parsingStatus) for parsingStatus
    bus.o(.text.Bus_ClearBuffer) refers to bus.o(.bss.usUsart) for usUsart
    bus.o(.ARM.exidx.text.Bus_ClearBuffer) refers to bus.o(.text.Bus_ClearBuffer) for [Anonymous Symbol]
    timers.o(.text.TIM00_Callback) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TIM00_Callback) refers to bus.o(.text.Bus_ClearBuffer) for Bus_ClearBuffer
    timers.o(.text.TIM00_Callback) refers to skud_algo.o(.bss.gerkonFilterCnt) for gerkonFilterCnt
    timers.o(.text.TIM00_Callback) refers to skud_algo.o(.bss.gerkonState) for gerkonState
    timers.o(.text.TIM00_Callback) refers to skud_algo.o(.data.gerkonFilterMax) for gerkonFilterMax
    timers.o(.text.TIM00_Callback) refers to skud_algo.o(.bss.oldGerkonState) for oldGerkonState
    timers.o(.text.TIM00_Callback) refers to bus.o(.bss.usUsart) for usUsart
    timers.o(.ARM.exidx.text.TIM00_Callback) refers to timers.o(.text.TIM00_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM01_Callback) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TIM01_Callback) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TIM01_Callback) refers to skud_algo.o(.bss.protectionDelayCnt) for protectionDelayCnt
    timers.o(.text.TIM01_Callback) refers to skud_algo.o(.data.protectionDelayMax) for protectionDelayMax
    timers.o(.ARM.exidx.text.TIM01_Callback) refers to timers.o(.text.TIM01_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM10_Callback) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TIM10_Callback) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TIM10_Callback) refers to skud_algo.o(.bss.alarmTimeoutCnt) for alarmTimeoutCnt
    timers.o(.text.TIM10_Callback) refers to skud_algo.o(.data.alarmTimeoutMax) for alarmTimeoutMax
    timers.o(.ARM.exidx.text.TIM10_Callback) refers to timers.o(.text.TIM10_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM16_Callback) refers to ibutton.o(.text.DS1990A_GetKeyID) for DS1990A_GetKeyID
    timers.o(.text.TIM16_Callback) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TIM16_Callback) refers to skud_algo.o(.text.IsKeyActive) for IsKeyActive
    timers.o(.text.TIM16_Callback) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.ARM.exidx.text.TIM16_Callback) refers to timers.o(.text.TIM16_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM36_Callback) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TIM36_Callback) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TIM36_Callback) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.data.indicWaitMax) for indicWaitMax
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    timers.o(.text.TIM36_Callback) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    timers.o(.ARM.exidx.text.TIM36_Callback) refers to timers.o(.text.TIM36_Callback) for [Anonymous Symbol]
    timers.o(.text.TIM_Config) refers to mg32x02z_tm_drv.o(.text.TM_TimeBaseStruct_Init) for TM_TimeBaseStruct_Init
    timers.o(.text.TIM_Config) refers to mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) for TM_TimeBase_Init
    timers.o(.text.TIM_Config) refers to mg32x02z_tm_drv.o(.text.TM_IT_Config) for TM_IT_Config
    timers.o(.text.TIM_Config) refers to mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd) for TM_ITEA_Cmd
    timers.o(.ARM.exidx.text.TIM_Config) refers to timers.o(.text.TIM_Config) for [Anonymous Symbol]
    timers.o(.text.TM0x_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TM0x_IRQHandler) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TM0x_IRQHandler) refers to timers.o(.text.TIM00_Callback) for TIM00_Callback
    timers.o(.text.TM0x_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers.o(.text.TM0x_IRQHandler) refers to skud_algo.o(.bss.protectionDelayCnt) for protectionDelayCnt
    timers.o(.text.TM0x_IRQHandler) refers to skud_algo.o(.data.protectionDelayMax) for protectionDelayMax
    timers.o(.ARM.exidx.text.TM0x_IRQHandler) refers to timers.o(.text.TM0x_IRQHandler) for [Anonymous Symbol]
    timers.o(.text.TM10_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TM10_IRQHandler) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TM10_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers.o(.text.TM10_IRQHandler) refers to skud_algo.o(.bss.alarmTimeoutCnt) for alarmTimeoutCnt
    timers.o(.text.TM10_IRQHandler) refers to skud_algo.o(.data.alarmTimeoutMax) for alarmTimeoutMax
    timers.o(.ARM.exidx.text.TM10_IRQHandler) refers to timers.o(.text.TM10_IRQHandler) for [Anonymous Symbol]
    timers.o(.text.TM1x_IRQHandler) refers to ibutton.o(.text.DS1990A_GetKeyID) for DS1990A_GetKeyID
    timers.o(.text.TM1x_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TM1x_IRQHandler) refers to skud_algo.o(.text.IsKeyActive) for IsKeyActive
    timers.o(.text.TM1x_IRQHandler) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TM1x_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers.o(.ARM.exidx.text.TM1x_IRQHandler) refers to timers.o(.text.TM1x_IRQHandler) for [Anonymous Symbol]
    timers.o(.text.TM3x_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    timers.o(.text.TM3x_IRQHandler) refers to buffer.o(.text.putEvent) for putEvent
    timers.o(.text.TM3x_IRQHandler) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    timers.o(.text.TM3x_IRQHandler) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for TM_ClearFlag
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.data.indicWaitMax) for indicWaitMax
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    timers.o(.text.TM3x_IRQHandler) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    timers.o(.ARM.exidx.text.TM3x_IRQHandler) refers to timers.o(.text.TM3x_IRQHandler) for [Anonymous Symbol]
    crc.o(.text.Do_CRC) refers to crc.o(.rodata.CRC_Table) for [Anonymous Symbol]
    crc.o(.ARM.exidx.text.Do_CRC) refers to crc.o(.text.Do_CRC) for [Anonymous Symbol]
    crc.o(.text.CRCisWrong) refers to crc.o(.rodata.CRC_Table) for [Anonymous Symbol]
    crc.o(.ARM.exidx.text.CRCisWrong) refers to crc.o(.text.CRCisWrong) for [Anonymous Symbol]
    usart.o(.text.URT_Rx_Callback) refers to bus.o(.text.Bus_AddNewByte) for Bus_AddNewByte
    usart.o(.ARM.exidx.text.URT_Rx_Callback) refers to usart.o(.text.URT_Rx_Callback) for [Anonymous Symbol]
    usart.o(.text.URT_Write) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for URT_SetTXData
    usart.o(.ARM.exidx.text.URT_Write) refers to usart.o(.text.URT_Write) for [Anonymous Symbol]
    usart.o(.text.URT_WriteWord) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for URT_SetTXData
    usart.o(.ARM.exidx.text.URT_WriteWord) refers to usart.o(.text.URT_WriteWord) for [Anonymous Symbol]
    usart.o(.text.URT_PrintString) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for URT_SetTXData
    usart.o(.ARM.exidx.text.URT_PrintString) refers to usart.o(.text.URT_PrintString) for [Anonymous Symbol]
    usart.o(.text.URT_Print) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for URT_SetTXData
    usart.o(.ARM.exidx.text.URT_Print) refers to usart.o(.text.URT_Print) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.URT_IsTxReady) refers to usart.o(.text.URT_IsTxReady) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.URT_IsTxEndTransmission) refers to usart.o(.text.URT_IsTxEndTransmission) for [Anonymous Symbol]
    usart.o(.text.USART_Config) refers to mg32x02z_urt_drv.o(.text.URT_IT_Config) for URT_IT_Config
    usart.o(.text.USART_Config) refers to mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd) for URT_ITEA_Cmd
    usart.o(.ARM.exidx.text.USART_Config) refers to usart.o(.text.USART_Config) for [Anonymous Symbol]
    usart.o(.text.URT0_IRQHandler) refers to bus.o(.text.Bus_AddNewByte) for Bus_AddNewByte
    usart.o(.text.URT0_IRQHandler) refers to mg32x02z_urt_drv.o(.text.URT_ClearITFlag) for URT_ClearITFlag
    usart.o(.ARM.exidx.text.URT0_IRQHandler) refers to usart.o(.text.URT0_IRQHandler) for [Anonymous Symbol]
    gpio.o(.text.InitPinBase) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for GPIO_PinHighSpeedMode_Cmd
    gpio.o(.text.InitPinBase) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for GPIO_PinInverse_Cmd
    gpio.o(.text.InitPinBase) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for GPIO_PinOutputDrive_Select
    gpio.o(.text.InitPinBase) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for GPIO_PinInFilterDivider_Select
    gpio.o(.ARM.exidx.text.InitPinBase) refers to gpio.o(.text.InitPinBase) for [Anonymous Symbol]
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for GPIO_PinPUResister_Cmd
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for GPIO_PinHighSpeedMode_Cmd
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for GPIO_PinInverse_Cmd
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for GPIO_PinOutputDrive_Select
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for GPIO_PinInFilterDivider_Select
    gpio.o(.text.InitPinPPO) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for GPIO_PinFunction_Select
    gpio.o(.ARM.exidx.text.InitPinPPO) refers to gpio.o(.text.InitPinPPO) for [Anonymous Symbol]
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for GPIO_PinPUResister_Cmd
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for GPIO_PinHighSpeedMode_Cmd
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for GPIO_PinInverse_Cmd
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for GPIO_PinOutputDrive_Select
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for GPIO_PinInFilterDivider_Select
    gpio.o(.text.InitPinUsartTx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for GPIO_PinFunction_Select
    gpio.o(.ARM.exidx.text.InitPinUsartTx) refers to gpio.o(.text.InitPinUsartTx) for [Anonymous Symbol]
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for GPIO_PinPUResister_Cmd
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for GPIO_PinHighSpeedMode_Cmd
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for GPIO_PinInverse_Cmd
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for GPIO_PinOutputDrive_Select
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for GPIO_PinInFilterDivider_Select
    gpio.o(.text.InitPinUsartRx) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for GPIO_PinFunction_Select
    gpio.o(.ARM.exidx.text.InitPinUsartRx) refers to gpio.o(.text.InitPinUsartRx) for [Anonymous Symbol]
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for GPIO_PinPUResister_Cmd
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for GPIO_PinHighSpeedMode_Cmd
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for GPIO_PinInverse_Cmd
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for GPIO_PinOutputDrive_Select
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for GPIO_PinInFilterDivider_Select
    gpio.o(.text.InitPinDI) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for GPIO_PinFunction_Select
    gpio.o(.ARM.exidx.text.InitPinDI) refers to gpio.o(.text.InitPinDI) for [Anonymous Symbol]
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for GPIO_PinPUResister_Cmd
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for GPIO_PinHighSpeedMode_Cmd
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for GPIO_PinInverse_Cmd
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for GPIO_PinOutputDrive_Select
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for GPIO_PinInFilterDivider_Select
    gpio.o(.text.GPIO_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for GPIO_PinFunction_Select
    gpio.o(.ARM.exidx.text.GPIO_Config) refers to gpio.o(.text.GPIO_Config) for [Anonymous Symbol]
    skud_algo.o(.text.IndicationStart) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.IndicationStart) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.IndicationStart) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    skud_algo.o(.text.IndicationStart) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.IndicationStart) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    skud_algo.o(.text.IndicationStart) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    skud_algo.o(.ARM.exidx.text.IndicationStart) refers to skud_algo.o(.text.IndicationStart) for [Anonymous Symbol]
    skud_algo.o(.text.IndicationStop) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.text.IndicationStop) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.IndicationStop) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.ARM.exidx.text.IndicationStop) refers to skud_algo.o(.text.IndicationStop) for [Anonymous Symbol]
    skud_algo.o(.text.AlarmCountdownEnable) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.ARM.exidx.text.AlarmCountdownEnable) refers to skud_algo.o(.text.AlarmCountdownEnable) for [Anonymous Symbol]
    skud_algo.o(.text.AlarmCountdownDisable) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.AlarmCountdownDisable) refers to skud_algo.o(.bss.alarmTimeoutCnt) for alarmTimeoutCnt
    skud_algo.o(.ARM.exidx.text.AlarmCountdownDisable) refers to skud_algo.o(.text.AlarmCountdownDisable) for [Anonymous Symbol]
    skud_algo.o(.text.ReadingKeyEnable) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.ARM.exidx.text.ReadingKeyEnable) refers to skud_algo.o(.text.ReadingKeyEnable) for [Anonymous Symbol]
    skud_algo.o(.text.ReadingKeyDisable) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.ReadingKeyDisable) refers to onewire.o(.text.OneWire_SetDirection) for OneWire_SetDirection
    skud_algo.o(.ARM.exidx.text.ReadingKeyDisable) refers to skud_algo.o(.text.ReadingKeyDisable) for [Anonymous Symbol]
    skud_algo.o(.text.ProtectionDelayEnable) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.ARM.exidx.text.ProtectionDelayEnable) refers to skud_algo.o(.text.ProtectionDelayEnable) for [Anonymous Symbol]
    skud_algo.o(.text.MuteBuzzer) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.ARM.exidx.text.MuteBuzzer) refers to skud_algo.o(.text.MuteBuzzer) for [Anonymous Symbol]
    skud_algo.o(.text.UnmuteBuzzer) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.UnmuteBuzzer) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.ARM.exidx.text.UnmuteBuzzer) refers to skud_algo.o(.text.UnmuteBuzzer) for [Anonymous Symbol]
    skud_algo.o(.text.hSleepToWaiting) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.hSleepToWaiting) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.hSleepToWaiting) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    skud_algo.o(.text.hSleepToWaiting) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.hSleepToWaiting) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    skud_algo.o(.text.hSleepToWaiting) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    skud_algo.o(.ARM.exidx.text.hSleepToWaiting) refers to skud_algo.o(.text.hSleepToWaiting) for [Anonymous Symbol]
    skud_algo.o(.text.hWaitingToAccess) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.hWaitingToAccess) refers to onewire.o(.text.OneWire_SetDirection) for OneWire_SetDirection
    skud_algo.o(.text.hWaitingToAccess) refers to skud_algo.o(.bss.alarmTimeoutCnt) for alarmTimeoutCnt
    skud_algo.o(.text.hWaitingToAccess) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.hWaitingToAccess) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    skud_algo.o(.text.hWaitingToAccess) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.hWaitingToAccess) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    skud_algo.o(.text.hWaitingToAccess) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    skud_algo.o(.ARM.exidx.text.hWaitingToAccess) refers to skud_algo.o(.text.hWaitingToAccess) for [Anonymous Symbol]
    skud_algo.o(.text.hAccessToSleep) refers to skud_algo.o(.bss.oldGerkonState) for oldGerkonState
    skud_algo.o(.ARM.exidx.text.hAccessToSleep) refers to skud_algo.o(.text.hAccessToSleep) for [Anonymous Symbol]
    skud_algo.o(.text.hReadingKeySuspend) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.hReadingKeySuspend) refers to onewire.o(.text.OneWire_SetDirection) for OneWire_SetDirection
    skud_algo.o(.text.hReadingKeySuspend) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.hReadingKeySuspend) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    skud_algo.o(.text.hReadingKeySuspend) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.hReadingKeySuspend) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    skud_algo.o(.text.hReadingKeySuspend) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    skud_algo.o(.ARM.exidx.text.hReadingKeySuspend) refers to skud_algo.o(.text.hReadingKeySuspend) for [Anonymous Symbol]
    skud_algo.o(.text.hReadingKeyResume) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.hReadingKeyResume) refers to skud_algo.o(.bss.gerkonState) for gerkonState
    skud_algo.o(.text.hReadingKeyResume) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.hReadingKeyResume) refers to skud_algo.o(.bss.indicWaitCnt) for indicWaitCnt
    skud_algo.o(.text.hReadingKeyResume) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.hReadingKeyResume) refers to skud_algo.o(.data.indicSpeed) for indicSpeed
    skud_algo.o(.text.hReadingKeyResume) refers to skud_algo.o(.data.indicTimeMax) for indicTimeMax
    skud_algo.o(.ARM.exidx.text.hReadingKeyResume) refers to skud_algo.o(.text.hReadingKeyResume) for [Anonymous Symbol]
    skud_algo.o(.text.hDoorClosedNoAccess) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.hDoorClosedNoAccess) refers to onewire.o(.text.OneWire_SetDirection) for OneWire_SetDirection
    skud_algo.o(.text.hDoorClosedNoAccess) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.ARM.exidx.text.hDoorClosedNoAccess) refers to skud_algo.o(.text.hDoorClosedNoAccess) for [Anonymous Symbol]
    skud_algo.o(.text.hDoorOpenedNoAccess) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for TM_Timer_Cmd
    skud_algo.o(.text.hDoorOpenedNoAccess) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.text.hDoorOpenedNoAccess) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.ARM.exidx.text.hDoorOpenedNoAccess) refers to skud_algo.o(.text.hDoorOpenedNoAccess) for [Anonymous Symbol]
    skud_algo.o(.text.hSendAlarmEvent) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.ARM.exidx.text.hSendAlarmEvent) refers to skud_algo.o(.text.hSendAlarmEvent) for [Anonymous Symbol]
    skud_algo.o(.text.hIndicationStop) refers to skud_algo.o(.bss.buzzerMuted) for buzzerMuted
    skud_algo.o(.text.hIndicationStop) refers to skud_algo.o(.data.indicTimeCnt) for indicTimeCnt
    skud_algo.o(.text.hIndicationStop) refers to skud_algo.o(.data.indicationPhase) for indicationPhase
    skud_algo.o(.ARM.exidx.text.hIndicationStop) refers to skud_algo.o(.text.hIndicationStop) for [Anonymous Symbol]
    skud_algo.o(.text.hParseBusMessage) refers to bus.o(.text.Bus_ParseMessage) for Bus_ParseMessage
    skud_algo.o(.ARM.exidx.text.hParseBusMessage) refers to skud_algo.o(.text.hParseBusMessage) for [Anonymous Symbol]
    skud_algo.o(.text.HandleEvent) refers to buffer.o(.text.getEvent) for getEvent
    skud_algo.o(.text.HandleEvent) refers to skud_algo.o(.bss.currentState) for currentState
    skud_algo.o(.text.HandleEvent) refers to skud_algo.o(.data.FSMTable) for FSMTable
    skud_algo.o(.ARM.exidx.text.HandleEvent) refers to skud_algo.o(.text.HandleEvent) for [Anonymous Symbol]
    skud_algo.o(.text.IsKeyActive) refers to md5.o(.text.MD5_MakeHash) for MD5_MakeHash
    skud_algo.o(.text.IsKeyActive) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    skud_algo.o(.text.IsKeyActive) refers to iap.o(.text.IAP_IsEqualToRAM) for IAP_IsEqualToRAM
    skud_algo.o(.text.IsKeyActive) refers to keys.o(.bss.KeyRaw) for KeyRaw
    skud_algo.o(.text.IsKeyActive) refers to keys.o(.bss.KeyEncrypted) for KeyEncrypted
    skud_algo.o(.text.IsKeyActive) refers to variables.o(.data.TotalKeys) for TotalKeys
    skud_algo.o(.ARM.exidx.text.IsKeyActive) refers to skud_algo.o(.text.IsKeyActive) for [Anonymous Symbol]
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hSleepToWaiting) for hSleepToWaiting
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hParseBusMessage) for hParseBusMessage
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hDoorOpenedNoAccess) for hDoorOpenedNoAccess
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hWaitingToAccess) for hWaitingToAccess
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hReadingKeySuspend) for hReadingKeySuspend
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hSendAlarmEvent) for hSendAlarmEvent
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hDoorClosedNoAccess) for hDoorClosedNoAccess
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hReadingKeyResume) for hReadingKeyResume
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hAccessToSleep) for hAccessToSleep
    skud_algo.o(.data.FSMTable) refers to skud_algo.o(.text.hIndicationStop) for hIndicationStop
    flash.o(.text.FlashTestFill) refers to md5.o(.text.MD5_MakeHash) for MD5_MakeHash
    flash.o(.text.FlashTestFill) refers to flash.o(.text.AddKey) for AddKey
    flash.o(.text.FlashTestFill) refers to keys.o(.data.key1) for key1
    flash.o(.text.FlashTestFill) refers to keys.o(.bss.KeyEncrypted) for KeyEncrypted
    flash.o(.ARM.exidx.text.FlashTestFill) refers to flash.o(.text.FlashTestFill) for [Anonymous Symbol]
    flash.o(.text.AddKey) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for IAP_CopyFromIAPToRAM
    flash.o(.text.AddKey) refers to memcpya.o(.text) for __aeabi_memcpy
    flash.o(.text.AddKey) refers to iap.o(.text.IAP_Erase_OnePage) for IAP_Erase_OnePage
    flash.o(.text.AddKey) refers to iap.o(.text.IAP_WriteMultipleWord) for IAP_WriteMultipleWord
    flash.o(.text.AddKey) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    flash.o(.text.AddKey) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.AddKey) refers to flash.o(.bss.fpage) for fpage
    flash.o(.text.AddKey) refers to variables.o(.data.ActiveKeys) for ActiveKeys
    flash.o(.text.AddKey) refers to variables.o(.data.TotalKeys) for TotalKeys
    flash.o(.text.AddKey) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.ARM.exidx.text.AddKey) refers to flash.o(.text.AddKey) for [Anonymous Symbol]
    flash.o(.text.FlashFirstInit) refers to iap.o(.text.IAP_Init) for IAP_Init
    flash.o(.text.FlashFirstInit) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.FlashFirstInit) refers to iap.o(.text.IAP_WriteSingleWord) for IAP_WriteSingleWord
    flash.o(.text.FlashFirstInit) refers to md5.o(.text.MD5_MakeHash) for MD5_MakeHash
    flash.o(.text.FlashFirstInit) refers to flash.o(.text.AddKey) for AddKey
    flash.o(.text.FlashFirstInit) refers to variables.o(.data.variables) for variables
    flash.o(.text.FlashFirstInit) refers to variables.o(.data.TotalKeys) for TotalKeys
    flash.o(.text.FlashFirstInit) refers to variables.o(.data.ActiveKeys) for ActiveKeys
    flash.o(.text.FlashFirstInit) refers to events.o(.data.events) for events
    flash.o(.text.FlashFirstInit) refers to keys.o(.data.key1) for key1
    flash.o(.text.FlashFirstInit) refers to keys.o(.bss.KeyEncrypted) for KeyEncrypted
    flash.o(.text.FlashFirstInit) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.ARM.exidx.text.FlashFirstInit) refers to flash.o(.text.FlashFirstInit) for [Anonymous Symbol]
    flash.o(.text.GetMaxFlashResource) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.ARM.exidx.text.GetMaxFlashResource) refers to flash.o(.text.GetMaxFlashResource) for [Anonymous Symbol]
    flash.o(.text.GetVariable) refers to variables.o(.data.variables) for variables
    flash.o(.ARM.exidx.text.GetVariable) refers to flash.o(.text.GetVariable) for [Anonymous Symbol]
    flash.o(.text.SetVariable) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for IAP_CopyFromIAPToRAM
    flash.o(.text.SetVariable) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.SetVariable) refers to iap.o(.text.IAP_Erase_OnePage) for IAP_Erase_OnePage
    flash.o(.text.SetVariable) refers to iap.o(.text.IAP_WriteMultipleWord) for IAP_WriteMultipleWord
    flash.o(.text.SetVariable) refers to variables.o(.data.variables) for variables
    flash.o(.text.SetVariable) refers to flash.o(.bss.fpage) for fpage
    flash.o(.text.SetVariable) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.ARM.exidx.text.SetVariable) refers to flash.o(.text.SetVariable) for [Anonymous Symbol]
    flash.o(.text.CopyFlashPageToRAM) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for IAP_CopyFromIAPToRAM
    flash.o(.text.CopyFlashPageToRAM) refers to flash.o(.bss.fpage) for fpage
    flash.o(.ARM.exidx.text.CopyFlashPageToRAM) refers to flash.o(.text.CopyFlashPageToRAM) for [Anonymous Symbol]
    flash.o(.text.UpdateFlashResource) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.UpdateFlashResource) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.ARM.exidx.text.UpdateFlashResource) refers to flash.o(.text.UpdateFlashResource) for [Anonymous Symbol]
    flash.o(.text.CopyRAMToFlashPage) refers to iap.o(.text.IAP_WriteMultipleWord) for IAP_WriteMultipleWord
    flash.o(.text.CopyRAMToFlashPage) refers to flash.o(.bss.fpage) for fpage
    flash.o(.ARM.exidx.text.CopyRAMToFlashPage) refers to flash.o(.text.CopyRAMToFlashPage) for [Anonymous Symbol]
    flash.o(.text.SetVariablePack) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for IAP_CopyFromIAPToRAM
    flash.o(.text.SetVariablePack) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.SetVariablePack) refers to iap.o(.text.IAP_Erase_OnePage) for IAP_Erase_OnePage
    flash.o(.text.SetVariablePack) refers to iap.o(.text.IAP_WriteMultipleWord) for IAP_WriteMultipleWord
    flash.o(.text.SetVariablePack) refers to variables.o(.data.variables) for variables
    flash.o(.text.SetVariablePack) refers to flash.o(.bss.fpage) for fpage
    flash.o(.text.SetVariablePack) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.ARM.exidx.text.SetVariablePack) refers to flash.o(.text.SetVariablePack) for [Anonymous Symbol]
    flash.o(.text.ActivateKey) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    flash.o(.text.ActivateKey) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for IAP_CopyFromIAPToRAM
    flash.o(.text.ActivateKey) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.ActivateKey) refers to iap.o(.text.IAP_Erase_OnePage) for IAP_Erase_OnePage
    flash.o(.text.ActivateKey) refers to iap.o(.text.IAP_WriteMultipleWord) for IAP_WriteMultipleWord
    flash.o(.text.ActivateKey) refers to variables.o(.data.TotalKeys) for TotalKeys
    flash.o(.text.ActivateKey) refers to flash.o(.bss.fpage) for fpage
    flash.o(.text.ActivateKey) refers to variables.o(.data.ActiveKeys) for ActiveKeys
    flash.o(.text.ActivateKey) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.ARM.exidx.text.ActivateKey) refers to flash.o(.text.ActivateKey) for [Anonymous Symbol]
    flash.o(.text.GetKeyStatus) refers to iap.o(.text.IAP_ReadByte) for IAP_ReadByte
    flash.o(.ARM.exidx.text.GetKeyStatus) refers to flash.o(.text.GetKeyStatus) for [Anonymous Symbol]
    flash.o(.text.DoCommand) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for IAP_CopyFromIAPToRAM
    flash.o(.text.DoCommand) refers to iap.o(.text.IAP_ReadWord) for IAP_ReadWord
    flash.o(.text.DoCommand) refers to iap.o(.text.IAP_Erase_OnePage) for IAP_Erase_OnePage
    flash.o(.text.DoCommand) refers to iap.o(.text.IAP_WriteMultipleWord) for IAP_WriteMultipleWord
    flash.o(.text.DoCommand) refers to variables.o(.data.variables) for variables
    flash.o(.text.DoCommand) refers to flash.o(.bss.fpage) for fpage
    flash.o(.text.DoCommand) refers to variables.o(.data.FlashResourse) for FlashResourse
    flash.o(.text.DoCommand) refers to variables.o(.data.TotalKeys) for TotalKeys
    flash.o(.text.DoCommand) refers to variables.o(.data.ActiveKeys) for ActiveKeys
    flash.o(.ARM.exidx.text.DoCommand) refers to flash.o(.text.DoCommand) for [Anonymous Symbol]
    events.o(.data.events) refers to events.o(.bss.eventDoor) for eventDoor
    events.o(.data.events) refers to events.o(.data.eventAccess) for eventAccess
    events.o(.data.events) refers to events.o(.data.eventAlarm) for eventAlarm
    variables.o(.data.variables) refers to variables.o(.data.GerkonFiltTime) for GerkonFiltTime
    variables.o(.data.variables) refers to variables.o(.data.SendAlarmTime) for SendAlarmTime
    variables.o(.data.variables) refers to variables.o(.data.ReactivateAlarmTime) for ReactivateAlarmTime
    variables.o(.data.variables) refers to variables.o(.data.BuzzerOffTime) for BuzzerOffTime
    variables.o(.data.variables) refers to variables.o(.data.SendOfflineEvents) for SendOfflineEvents
    variables.o(.data.variables) refers to variables.o(.data.FreeAccess) for FreeAccess
    variables.o(.data.variables) refers to variables.o(.data.MasterSlave) for MasterSlave
    variables.o(.data.variables) refers to variables.o(.data.TotalKeys) for TotalKeys
    variables.o(.data.variables) refers to variables.o(.data.ActiveKeys) for ActiveKeys
    variables.o(.data.variables) refers to variables.o(.data.FlashResourse) for FlashResourse
    ibutton.o(.text.DS1990A_GetKeyID) refers to onewire.o(.text.OneWire_Start) for OneWire_Start
    ibutton.o(.text.DS1990A_GetKeyID) refers to onewire.o(.text.OneWire_Write) for OneWire_Write
    ibutton.o(.text.DS1990A_GetKeyID) refers to onewire.o(.text.OneWire_Read) for OneWire_Read
    ibutton.o(.text.DS1990A_GetKeyID) refers to crc.o(.text.Do_CRC) for Do_CRC
    ibutton.o(.text.DS1990A_GetKeyID) refers to keys.o(.bss.KeyRaw) for KeyRaw
    ibutton.o(.ARM.exidx.text.DS1990A_GetKeyID) refers to ibutton.o(.text.DS1990A_GetKeyID) for [Anonymous Symbol]
    buffer.o(.text.getNextWrite) refers to buffer.o(.data.eBuf) for eBuf
    buffer.o(.ARM.exidx.text.getNextWrite) refers to buffer.o(.text.getNextWrite) for [Anonymous Symbol]
    buffer.o(.text.getNextRead) refers to buffer.o(.data.eBuf) for eBuf
    buffer.o(.ARM.exidx.text.getNextRead) refers to buffer.o(.text.getNextRead) for [Anonymous Symbol]
    buffer.o(.text.isFull) refers to buffer.o(.data.eBuf) for eBuf
    buffer.o(.ARM.exidx.text.isFull) refers to buffer.o(.text.isFull) for [Anonymous Symbol]
    buffer.o(.text.isEmpty) refers to buffer.o(.data.eBuf) for eBuf
    buffer.o(.ARM.exidx.text.isEmpty) refers to buffer.o(.text.isEmpty) for [Anonymous Symbol]
    buffer.o(.text.getEvent) refers to buffer.o(.data.eBuf) for eBuf
    buffer.o(.ARM.exidx.text.getEvent) refers to buffer.o(.text.getEvent) for [Anonymous Symbol]
    buffer.o(.text.putEvent) refers to buffer.o(.data.eBuf) for eBuf
    buffer.o(.ARM.exidx.text.putEvent) refers to buffer.o(.text.putEvent) for [Anonymous Symbol]
    onewire.o(.text.OneWire_SetDirection) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.ARM.exidx.text.OneWire_SetDirection) refers to onewire.o(.text.OneWire_SetDirection) for [Anonymous Symbol]
    onewire.o(.text.OneWire_Start) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.ARM.exidx.text.OneWire_Start) refers to onewire.o(.text.OneWire_Start) for [Anonymous Symbol]
    onewire.o(.text.OneWire_Write) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.ARM.exidx.text.OneWire_Write) refers to onewire.o(.text.OneWire_Write) for [Anonymous Symbol]
    onewire.o(.text.OneWire_Read) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for GPIO_PinMode_Select
    onewire.o(.ARM.exidx.text.OneWire_Read) refers to onewire.o(.text.OneWire_Read) for [Anonymous Symbol]
    md5.o(.ARM.exidx.text.body) refers to md5.o(.text.body) for [Anonymous Symbol]
    md5.o(.text.MD5_Init) refers to memseta.o(.text) for __aeabi_memclr4
    md5.o(.ARM.exidx.text.MD5_Init) refers to md5.o(.text.MD5_Init) for [Anonymous Symbol]
    md5.o(.text.MD5_Update) refers to memcpya.o(.text) for __aeabi_memcpy
    md5.o(.text.MD5_Update) refers to md5.o(.text.body) for body
    md5.o(.ARM.exidx.text.MD5_Update) refers to md5.o(.text.MD5_Update) for [Anonymous Symbol]
    md5.o(.text.MD5_Final) refers to memseta.o(.text) for __aeabi_memclr
    md5.o(.text.MD5_Final) refers to md5.o(.text.body) for body
    md5.o(.ARM.exidx.text.MD5_Final) refers to md5.o(.text.MD5_Final) for [Anonymous Symbol]
    md5.o(.text.MD5_MakeHash) refers to memseta.o(.text) for __aeabi_memclr4
    md5.o(.text.MD5_MakeHash) refers to md5.o(.text.body) for body
    md5.o(.text.MD5_MakeHash) refers to memcpya.o(.text) for __aeabi_memcpy
    md5.o(.text.MD5_MakeHash) refers to md5.o(.text.MD5_Final) for MD5_Final
    md5.o(.ARM.exidx.text.MD5_MakeHash) refers to md5.o(.text.MD5_MakeHash) for [Anonymous Symbol]
    md5.o(.text.MD5_MakeDigest16) refers to md5.o(.rodata.str1.1) for [Anonymous Symbol]
    md5.o(.ARM.exidx.text.MD5_MakeDigest16) refers to md5.o(.text.MD5_MakeDigest16) for [Anonymous Symbol]
    iap.o(.text.IAP_Init) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    iap.o(.text.IAP_Init) refers to mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd) for CSC_IHRCO_Cmd
    iap.o(.text.IAP_Init) refers to mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState) for CSC_GetClockSourceState
    iap.o(.text.IAP_Init) refers to mg32x02z_csc_drv.o(.text.CSC_ClearFlag) for CSC_ClearFlag
    iap.o(.text.IAP_Init) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    iap.o(.text.IAP_Init) refers to mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) for MEM_SetIAPSize
    iap.o(.ARM.exidx.text.IAP_Init) refers to iap.o(.text.IAP_Init) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Erase_OnePage) refers to iap.o(.text.IAP_Erase_OnePage) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Erase_Page) refers to iap.o(.text.IAP_Erase_Page) for [Anonymous Symbol]
    iap.o(.text.IAP_FullErase) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for MEM_GetIAPSize
    iap.o(.ARM.exidx.text.IAP_FullErase) refers to iap.o(.text.IAP_FullErase) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_ReadByte) refers to iap.o(.text.IAP_ReadByte) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_ReadWord) refers to iap.o(.text.IAP_ReadWord) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_WriteSingleWord) refers to iap.o(.text.IAP_WriteSingleWord) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Single_Write) refers to iap.o(.text.IAP_Single_Write) for [Anonymous Symbol]
    iap.o(.text.IAP_WriteMultipleWord) refers to iap.o(.text.IAP_Multiple_Write) for IAP_Multiple_Write
    iap.o(.ARM.exidx.text.IAP_WriteMultipleWord) refers to iap.o(.text.IAP_WriteMultipleWord) for [Anonymous Symbol]
    iap.o(.ARM.exidx.text.IAP_Multiple_Write) refers to iap.o(.text.IAP_Multiple_Write) for [Anonymous Symbol]
    iap.o(.text.IAP_CopyFromIAPToRAM) refers to memcpya.o(.text) for __aeabi_memcpy
    iap.o(.ARM.exidx.text.IAP_CopyFromIAPToRAM) refers to iap.o(.text.IAP_CopyFromIAPToRAM) for [Anonymous Symbol]
    iap.o(.text.IAP_IsEqualToRAM) refers to memcmp.o(.text) for memcmp
    iap.o(.ARM.exidx.text.IAP_IsEqualToRAM) refers to iap.o(.text.IAP_IsEqualToRAM) for [Anonymous Symbol]
    wdt.o(.text.WDT_Config) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    wdt.o(.text.WDT_Config) refers to mg32x02z_rst_drv.o(.text.RST_CRstSource_Config) for RST_CRstSource_Config
    wdt.o(.text.WDT_Config) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    wdt.o(.ARM.exidx.text.WDT_Config) refers to wdt.o(.text.WDT_Config) for [Anonymous Symbol]
    wdt.o(.text.wdt_enable) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    wdt.o(.text.wdt_enable) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select) for IWDT_Divider_Select
    wdt.o(.text.wdt_enable) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Cmd) for IWDT_Cmd
    wdt.o(.text.wdt_enable) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    wdt.o(.ARM.exidx.text.wdt_enable) refers to wdt.o(.text.wdt_enable) for [Anonymous Symbol]
    wdt.o(.text.wdt_reset) refers to mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter) for IWDT_RefreshCounter
    wdt.o(.ARM.exidx.text.wdt_reset) refers to wdt.o(.text.wdt_reset) for [Anonymous Symbol]
    wdt.o(.text.wdt_disable) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    wdt.o(.text.wdt_disable) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Cmd) for IWDT_Cmd
    wdt.o(.text.wdt_disable) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    wdt.o(.ARM.exidx.text.wdt_disable) refers to wdt.o(.text.wdt_disable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_IHRCO_Enable) refers to mg32x02z_csc_init.o(.text.CSC_IHRCO_Enable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_XOSC_Enable) refers to mg32x02z_csc_init.o(.text.CSC_XOSC_Enable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_EXTCK_Enable) refers to mg32x02z_csc_init.o(.text.CSC_EXTCK_Enable) for [Anonymous Symbol]
    mg32x02z_csc_init.o(.text.CSC_Init) refers to system_mg32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    mg32x02z_csc_init.o(.ARM.exidx.text.CSC_Init) refers to mg32x02z_csc_init.o(.text.CSC_Init) for [Anonymous Symbol]
    mg32x02z_chipinit.o(.text.ChipInit) refers to mg32x02z_csc_init.o(.text.CSC_Init) for CSC_Init
    mg32x02z_chipinit.o(.ARM.exidx.text.ChipInit) refers to mg32x02z_chipinit.o(.text.ChipInit) for [Anonymous Symbol]
    startup_mg32x02z.o(RESET) refers to startup_mg32x02z.o(STACK) for __initial_sp
    startup_mg32x02z.o(RESET) refers to startup_mg32x02z.o(.text) for MG32x02z_IEC60730_MANAGER
    startup_mg32x02z.o(RESET) refers to timers.o(.text.TM0x_IRQHandler) for TM0x_IRQHandler
    startup_mg32x02z.o(RESET) refers to timers.o(.text.TM10_IRQHandler) for TM10_IRQHandler
    startup_mg32x02z.o(RESET) refers to timers.o(.text.TM1x_IRQHandler) for TM1x_IRQHandler
    startup_mg32x02z.o(RESET) refers to timers.o(.text.TM3x_IRQHandler) for TM3x_IRQHandler
    startup_mg32x02z.o(RESET) refers to usart.o(.text.URT0_IRQHandler) for URT0_IRQHandler
    startup_mg32x02z.o(.text) refers to system_mg32x02z.o(.text.SystemInit) for SystemInit
    startup_mg32x02z.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mg32x02z.o(.text) refers to system_mg32x02z.o(.text.HardFault_Handler_C) for HardFault_Handler_C
    system_mg32x02z.o(.text.SystemCoreClockUpdate) refers to system_mg32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    system_mg32x02z.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mg32x02z.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_mg32x02z.o(.text.SystemInit) refers to system_mg32x02z.o(.data.SystemCoreClock) for SystemCoreClock
    system_mg32x02z.o(.ARM.exidx.text.SystemInit) refers to system_mg32x02z.o(.text.SystemInit) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to printf5.o(i.__0printf$5) for __2printf
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r0) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r1) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r2) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r3) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r12) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_lr) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_pc) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_psr) for [Anonymous Symbol]
    system_mg32x02z.o(.text.HardFault_Handler_C) refers to system_mg32x02z.o(.rodata.str1.1) for [Anonymous Symbol]
    system_mg32x02z.o(.ARM.exidx.text.HardFault_Handler_C) refers to system_mg32x02z.o(.text.HardFault_Handler_C) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DeInit) refers to mg32x02z_adc_drv.o(.text.ADC_DeInit) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_BaseStructure_Init) refers to mg32x02z_adc_drv.o(.text.ADC_BaseStructure_Init) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Base_Init) refers to mg32x02z_adc_drv.o(.text.ADC_Base_Init) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClockSource_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ClockSource_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetInternalClockDivider) refers to mg32x02z_adc_drv.o(.text.ADC_SetInternalClockDivider) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPLLClockDivider) refers to mg32x02z_adc_drv.o(.text.ADC_SetPLLClockDivider) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataAlignment_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DataAlignment_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataResolution_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataOverrunMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DataOverrunMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOperationCurrent) refers to mg32x02z_adc_drv.o(.text.ADC_SetOperationCurrent) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLowerThreshold) refers to mg32x02z_adc_drv.o(.text.ADC_SetLowerThreshold) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetHigherThreshold) refers to mg32x02z_adc_drv.o(.text.ADC_SetHigherThreshold) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetectRange_Select) refers to mg32x02z_adc_drv.o(.text.ADC_WindowDetectRange_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetect_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_WindowDetect_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Output_Select) refers to mg32x02z_adc_drv.o(.text.ADC_Output_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGA_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_PGA_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAGain) refers to mg32x02z_adc_drv.o(.text.ADC_SetPGAGain) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAOffset) refers to mg32x02z_adc_drv.o(.text.ADC_SetPGAOffset) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGAOffsetCalibration_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_StartCalibration) refers to mg32x02z_adc_drv.o(.text.ADC_StartCalibration) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearFlag) refers to mg32x02z_adc_drv.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMA_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMADataSize_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DMADataSize_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMAMaskFlag_Select) refers to mg32x02z_adc_drv.o(.text.ADC_DMAMaskFlag_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetNextConversionChannel) refers to mg32x02z_adc_drv.o(.text.ADC_GetNextConversionChannel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WaitDataReadOut) refers to mg32x02z_adc_drv.o(.text.ADC_WaitDataReadOut) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetExtendSampling) refers to mg32x02z_adc_drv.o(.text.ADC_SetExtendSampling) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ConversionMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_MainConversionMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_MainConversionMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ContinueMode_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_ContinueMode_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_HoldConversion_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_HoldConversion_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerSource_Select) refers to mg32x02z_adc_drv.o(.text.ADC_TriggerSource_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SoftwareConversion_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_SoftwareConversion_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerEdge_Select) refers to mg32x02z_adc_drv.o(.text.ADC_TriggerEdge_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChannelMUX_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ChannelMUX_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ExternalChannel_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ExternalChannel_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_InternalChannel_Select) refers to mg32x02z_adc_drv.o(.text.ADC_InternalChannel_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ScanLoopChannel_Enable) refers to mg32x02z_adc_drv.o(.text.ADC_ScanLoopChannel_Enable) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChangeMUXTiming_Select) refers to mg32x02z_adc_drv.o(.text.ADC_ChangeMUXTiming_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SingleDifferentMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SingleDifferentMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLimitFunction) refers to mg32x02z_adc_drv.o(.text.ADC_SetLimitFunction) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Channel) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum0Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Channel) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum1Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Channel) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum2Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumChannelMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SumChannelMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSumNumber) refers to mg32x02z_adc_drv.o(.text.ADC_SetSumNumber) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumOverrunMode_Select) refers to mg32x02z_adc_drv.o(.text.ADC_SumOverrunMode_Select) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum0Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum1Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum2Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum0Flags) refers to mg32x02z_adc_drv.o(.text.ADC_ClearSum0Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum1Flags) refers to mg32x02z_adc_drv.o(.text.ADC_ClearSum1Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum2Flags) refers to mg32x02z_adc_drv.o(.text.ADC_ClearSum2Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum0Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum1Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetSum2Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Data) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum0Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Data) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum1Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Data) refers to mg32x02z_adc_drv.o(.text.ADC_SetSum2Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Flags) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Flags) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Channel) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Channel) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Data) refers to mg32x02z_adc_drv.o(.text.ADC_GetDAT0Data) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetDigitalOffset) refers to mg32x02z_adc_drv.o(.text.ADC_SetDigitalOffset) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOutputCodeFormat) refers to mg32x02z_adc_drv.o(.text.ADC_SetOutputCodeFormat) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_IT_Config) refers to mg32x02z_adc_drv.o(.text.ADC_IT_Config) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ITEA_Cmd) refers to mg32x02z_adc_drv.o(.text.ADC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSingleFlagStatus) refers to mg32x02z_adc_drv.o(.text.ADC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetAllFlagStatus) refers to mg32x02z_adc_drv.o(.text.ADC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_TimerX_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_TimerX_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR6_Select) refers to mg32x02z_apb_drv.o(.text.APB_ITR6_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR7_Select) refers to mg32x02z_apb_drv.o(.text.APB_ITR7_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel0_Select) refers to mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel0_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel1_Select) refers to mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel1_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel2_Select) refers to mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel2_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS0_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseBKS0_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS1_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseBKS1_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS2_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseBKS2_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OBMxOpMode_Select) refers to mg32x02z_apb_drv.o(.text.APB_OBMxOpMode_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxOutputState) refers to mg32x02z_apb_drv.o(.text.APB_GetOBMxOutputState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOBMxOutput_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseOBMxOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputFilter_Select) refers to mg32x02z_apb_drv.o(.text.APB_OutputFilter_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxSwitchState) refers to mg32x02z_apb_drv.o(.text.APB_GetOBMxSwitchState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_SetOBMxInitState) refers to mg32x02z_apb_drv.o(.text.APB_SetOBMxInitState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxInitState) refers to mg32x02z_apb_drv.o(.text.APB_GetOBMxInitState) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel0Source_Select) refers to mg32x02z_apb_drv.o(.text.APB_OutputChannel0Source_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel1Source_Select) refers to mg32x02z_apb_drv.o(.text.APB_OutputChannel1Source_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel0_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel0_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel1_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel1_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRCLK_Select) refers to mg32x02z_apb_drv.o(.text.APB_IRCLK_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRDAT_Select) refers to mg32x02z_apb_drv.o(.text.APB_IRDAT_Select) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRCLK_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseIRCLK_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRDAT_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_InverseIRDAT_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IT_Config) refers to mg32x02z_apb_drv.o(.text.APB_IT_Config) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITEA_Cmd) refers to mg32x02z_apb_drv.o(.text.APB_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetSingleFlagStatus) refers to mg32x02z_apb_drv.o(.text.APB_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetAllFlagStatus) refers to mg32x02z_apb_drv.o(.text.APB_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ClearFlag) refers to mg32x02z_apb_drv.o(.text.APB_ClearFlag) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTick_Cmd) refers to mg32x02z_cm0_drv.o(.text.CM0_SysTick_Cmd) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickIT_Cmd) refers to mg32x02z_cm0_drv.o(.text.CM0_SysTickIT_Cmd) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickClockSource_Select) refers to mg32x02z_cm0_drv.o(.text.CM0_SysTickClockSource_Select) for [Anonymous Symbol]
    mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_GetSysTickCurrentValue) refers to mg32x02z_cm0_drv.o(.text.CM0_GetSysTickCurrentValue) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_DeInit) refers to mg32x02z_cmp_drv.o(.text.CMP_DeInit) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Power_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_Power_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClock_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_FilterClock_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClockDivider_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_FilterClockDivider_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_InverseOutputPin) refers to mg32x02z_cmp_drv.o(.text.CMP_InverseOutputPin) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_OutputPolarity_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_OutputPolarity_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_PositivePin_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_PositivePin_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_NegativePin_Select) refers to mg32x02z_cmp_drv.o(.text.CMP_NegativePin_Select) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_SetHysteresisWindow) refers to mg32x02z_cmp_drv.o(.text.CMP_SetHysteresisWindow) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IT_Config) refers to mg32x02z_cmp_drv.o(.text.CMP_IT_Config) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ITEA_Cmd) refers to mg32x02z_cmp_drv.o(.text.CMP_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetSingleFlagStatus) refers to mg32x02z_cmp_drv.o(.text.CMP_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetAllFlagStatus) refers to mg32x02z_cmp_drv.o(.text.CMP_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ClearFlag) refers to mg32x02z_cmp_drv.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetOutput) refers to mg32x02z_cmp_drv.o(.text.CMP_GetOutput) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Select) refers to mg32x02z_csc_drv.o(.text.CSC_IHRCO_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSC_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_XOSC_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSCGain_Select) refers to mg32x02z_csc_drv.o(.text.CSC_XOSCGain_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_EXTCK_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_EXTCK_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_ST_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_ST_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_MAIN_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_MAIN_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_HS_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_HS_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_LS_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_LS_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PLL_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_PLL_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_APB_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_APB_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_UT_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_UT_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_AHB_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_CK_AHB_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_ClockSource_Select) refers to mg32x02z_csc_drv.o(.text.CSC_ICKO_ClockSource_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Divider_Select) refers to mg32x02z_csc_drv.o(.text.CSC_ICKO_Divider_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_ICKO_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetectionDuration_Select) refers to mg32x02z_csc_drv.o(.text.CSC_MissingClockDetectionDuration_Select) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetection_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_MissingClockDetection_Cmd) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphProcessClockSource_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphProcessClockSource_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphONModeClock_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphONModeClock_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSLEEPModeClock_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphSLEEPModeClock_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSTOPModeClock_Config) refers to mg32x02z_csc_drv.o(.text.CSC_PeriphSTOPModeClock_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetAllFlagStatus) refers to mg32x02z_csc_drv.o(.text.CSC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetClockSourceState) refers to mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetMainSwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetMainSwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetHsSwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetHsSwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetLsSwitchState) refers to mg32x02z_csc_drv.o(.text.CSC_GetLsSwitchState) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetSingleFlagStatus) refers to mg32x02z_csc_drv.o(.text.CSC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ClearFlag) refers to mg32x02z_csc_drv.o(.text.CSC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IT_Config) refers to mg32x02z_csc_drv.o(.text.CSC_IT_Config) for [Anonymous Symbol]
    mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ITEA_Cmd) refers to mg32x02z_csc_drv.o(.text.CSC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_DeInit) refers to mg32x02z_dma_drv.o(.text.DMA_DeInit) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_BaseInitStructure_Init) refers to mg32x02z_dma_drv.o(.text.DMA_BaseInitStructure_Init) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Base_Init) refers to mg32x02z_dma_drv.o(.text.DMA_Base_Init) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerPin) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerPin) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerMode) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerMode) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LoopMode_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_LoopMode_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseSourceAddress) refers to mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseSourceAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseDestinationAddress) refers to mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseDestinationAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Source_Select) refers to mg32x02z_dma_drv.o(.text.DMA_Source_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Destination_Select) refers to mg32x02z_dma_drv.o(.text.DMA_Destination_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetBurstSize) refers to mg32x02z_dma_drv.o(.text.DMA_SetBurstSize) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetTransferDataNumber) refers to mg32x02z_dma_drv.o(.text.DMA_SetTransferDataNumber) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetSourceAddress) refers to mg32x02z_dma_drv.o(.text.DMA_SetSourceAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetDestinationAddress) refers to mg32x02z_dma_drv.o(.text.DMA_SetDestinationAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtraGPLChannel) refers to mg32x02z_dma_drv.o(.text.DMA_SetExtraGPLChannel) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCHxUseGPL) refers to mg32x02z_dma_drv.o(.text.DMA_GetCHxUseGPL) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_PriorityMode_Select) refers to mg32x02z_dma_drv.o(.text.DMA_PriorityMode_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_FlashMode_Select) refers to mg32x02z_dma_drv.o(.text.DMA_FlashMode_Select) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_StartRequest) refers to mg32x02z_dma_drv.o(.text.DMA_StartRequest) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Channel_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_Channel_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LastCycle_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_LastCycle_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Hold_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_Hold_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentSourceAddress) refers to mg32x02z_dma_drv.o(.text.DMA_GetCurrentSourceAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentDestinationAddress) refers to mg32x02z_dma_drv.o(.text.DMA_GetCurrentDestinationAddress) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetRemainDataCount) refers to mg32x02z_dma_drv.o(.text.DMA_GetRemainDataCount) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetPriority) refers to mg32x02z_dma_drv.o(.text.DMA_SetPriority) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetChxSKIP3Mode) refers to mg32x02z_dma_drv.o(.text.DMA_SetChxSKIP3Mode) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_IT_Config) refers to mg32x02z_dma_drv.o(.text.DMA_IT_Config) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ITEA_Cmd) refers to mg32x02z_dma_drv.o(.text.DMA_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetSingleFlagStatus) refers to mg32x02z_dma_drv.o(.text.DMA_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetAllFlagStatus) refers to mg32x02z_dma_drv.o(.text.DMA_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearFlag) refers to mg32x02z_dma_drv.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetChannelFlag) refers to mg32x02z_dma_drv.o(.text.DMA_GetChannelFlag) for [Anonymous Symbol]
    mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearChannelFlag) refers to mg32x02z_dma_drv.o(.text.DMA_ClearChannelFlag) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerMode_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerMode_Select) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndMask_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndMask_Select) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerOrMask_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerOrMask_Select) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndUnmatch_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndUnmatch_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerITEA_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_PxTriggerITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerEventFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerEventFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerITFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerITFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPinxTriggerEventSingleFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPinxTriggerEventSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerAndITFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerAndITFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerOrITFlagStatus) refers to mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerOrITFlagStatus) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerEventFlag) refers to mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerEventFlag) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerITFlag) refers to mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerITFlag) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetITSourceID) refers to mg32x02z_exic_drv.o(.text.EXIC_GetITSourceID) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_RXEV_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_RXEV_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Cmd) refers to mg32x02z_exic_drv.o(.text.EXIC_NMI_Cmd) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMITrigger_SW) refers to mg32x02z_exic_drv.o(.text.EXIC_NMITrigger_SW) for [Anonymous Symbol]
    mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Select) refers to mg32x02z_exic_drv.o(.text.EXIC_NMI_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Config) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortMode_Config) refers to mg32x02z_gpio_drv.o(.text.GPIO_PortMode_Config) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinHighSpeedMode_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinPUResister_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInverse_Cmd) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinOutputDrive_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInFilterDivider_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinFunction_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortFilterClockSource_Select) refers to mg32x02z_gpio_drv.o(.text.GPIO_PortFilterClockSource_Select) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_WritePort) refers to mg32x02z_gpio_drv.o(.text.GPIO_WritePort) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ReadPort) refers to mg32x02z_gpio_drv.o(.text.GPIO_ReadPort) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetPortBit) refers to mg32x02z_gpio_drv.o(.text.GPIO_SetPortBit) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ClearPortBit) refers to mg32x02z_gpio_drv.o(.text.GPIO_ClearPortBit) for [Anonymous Symbol]
    mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetClearPortBit) refers to mg32x02z_gpio_drv.o(.text.GPIO_SetClearPortBit) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ParityCheck_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_ParityCheck_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckWord) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckWord) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_Low) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_Low) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_High) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_High) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_0) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_0) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_1) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_1) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_2) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_2) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_3) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_3) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte) refers to mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_Inverse_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_Inverse_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ByteOrderChange_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_ByteOrderChange_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_16BitsByteOrderChange_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_16BitsByteOrderChange_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_BeforeBitOrderChange_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_BeforeBitOrderChange_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_AfterBitOrderChange_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_AfterBitOrderChange_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Mode_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_Mode_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Data_Size_Select) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_Data_Size_Select) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_SetInitValue) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_SetInitValue) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_CRC_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DMA_Cmd) refers to mg32x02z_gpl_drv.o(.text.GPL_DMA_Cmd) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DataInput) refers to mg32x02z_gpl_drv.o(.text.GPL_DataInput) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetOutputData) refers to mg32x02z_gpl_drv.o(.text.GPL_GetOutputData) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetAllFlagStatus) refers to mg32x02z_gpl_drv.o(.text.GPL_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetFlagStatus) refers to mg32x02z_gpl_drv.o(.text.GPL_GetFlagStatus) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockSource) refers to mg32x02z_i2c_drv.o(.text.I2C_SetClockSource) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockPrescaler) refers to mg32x02z_i2c_drv.o(.text.I2C_SetClockPrescaler) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockDivider) refers to mg32x02z_i2c_drv.o(.text.I2C_SetClockDivider) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLHighTime) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSCLHighTime) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLLowTime) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSCLLowTime) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetPreDriveTime) refers to mg32x02z_i2c_drv.o(.text.I2C_SetPreDriveTime) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GeneralCallAddress_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_GeneralCallAddress_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SlaveAddressDetect_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_SlaveAddressDetect_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress1Mask) refers to mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress1Mask) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveAddress) refers to mg32x02z_i2c_drv.o(.text.I2C_GetSlaveAddress) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_TXDMA_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_TXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_RXDMA_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_RXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_IT_Config) refers to mg32x02z_i2c_drv.o(.text.I2C_IT_Config) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ITEA_Cmd) refers to mg32x02z_i2c_drv.o(.text.I2C_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetITSource) refers to mg32x02z_i2c_drv.o(.text.I2C_GetITSource) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetAllFlagStatus) refers to mg32x02z_i2c_drv.o(.text.I2C_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to mg32x02z_i2c_drv.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearFlag) refers to mg32x02z_i2c_drv.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventCode) refers to mg32x02z_i2c_drv.o(.text.I2C_GetEventCode) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventFlag) refers to mg32x02z_i2c_drv.o(.text.I2C_GetEventFlag) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearEventFlag) refers to mg32x02z_i2c_drv.o(.text.I2C_ClearEventFlag) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveMatchAddress) refers to mg32x02z_i2c_drv.o(.text.I2C_GetSlaveMatchAddress) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SendSBUF) refers to mg32x02z_i2c_drv.o(.text.I2C_SendSBUF) for [Anonymous Symbol]
    mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ReceiveSBUF) refers to mg32x02z_i2c_drv.o(.text.I2C_ReceiveSBUF) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Divider_Select) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetCounter) refers to mg32x02z_iwdt_drv.o(.text.IWDT_GetCounter) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_RefreshCounter) refers to mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_StopModeWakeUpEvent_Config) refers to mg32x02z_iwdt_drv.o(.text.IWDT_StopModeWakeUpEvent_Config) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Cmd) refers to mg32x02z_iwdt_drv.o(.text.IWDT_Cmd) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetAllFlagStatus) refers to mg32x02z_iwdt_drv.o(.text.IWDT_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetSingleFlagStatus) refers to mg32x02z_iwdt_drv.o(.text.IWDT_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_ClearFlag) refers to mg32x02z_iwdt_drv.o(.text.IWDT_ClearFlag) for [Anonymous Symbol]
    mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_IT_Config) refers to mg32x02z_iwdt_drv.o(.text.IWDT_IT_Config) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllFlagStatus) refers to mg32x02z_mem_drv.o(.text.MEM_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetFlagStatus) refers to mg32x02z_mem_drv.o(.text.MEM_GetFlagStatus) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ClearFlag) refers to mg32x02z_mem_drv.o(.text.MEM_ClearFlag) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_HSP_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_HSP_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_HSP_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_HSP_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetFlashWaitState) refers to mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_IT_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_IT_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IT_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_IT_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ITEA_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorReset_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorHardFault_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_WriteFlashHold_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllAccessState) refers to mg32x02z_mem_drv.o(.text.MEM_GetAllAccessState) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAccessState) refers to mg32x02z_mem_drv.o(.text.MEM_GetAccessState) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_Access_Cmd) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_Access_Cmd) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Access_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_Access_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetWriteMode) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetWriteMode) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteMode) refers to mg32x02z_mem_drv.o(.text.MEM_SetWriteMode) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetWriteUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSinglePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetSinglePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultiplePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetMultiplePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSingleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetSingleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetMultipleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleWriteProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetMultipleWriteProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_APWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_APWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_GetIAPSize) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSize) refers to mg32x02z_mem_drv.o(.text.MEM_SetIAPSize) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for UnProtectModuleReg
    mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for ProtectModuleReg
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSizeLock) refers to mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPExecuteCode_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_IAPExecuteCode_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_IAPWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDRead_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPDRead_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPDWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetISPSize) refers to mg32x02z_mem_drv.o(.text.MEM_GetISPSize) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPRead_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPRead_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPWrite_Cmd) refers to mg32x02z_mem_drv.o(.text.MEM_ISPWrite_Cmd) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSinglePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPSinglePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultiplePageEraseUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPMultiplePageEraseUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSingleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPSingleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleProgramUnProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleProgramUnProtect) for [Anonymous Symbol]
    mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleWriteProtect) refers to mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleWriteProtect) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_STOPModeLDO_Select) refers to mg32x02z_pw_drv.o(.text.PW_STOPModeLDO_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ONModeLDO_Select) refers to mg32x02z_pw_drv.o(.text.PW_ONModeLDO_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Threshold_Select) refers to mg32x02z_pw_drv.o(.text.PW_BOD1Threshold_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Trigger_Select) refers to mg32x02z_pw_drv.o(.text.PW_BOD1Trigger_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_BOD1_Cmd) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_VoltageBuffer) refers to mg32x02z_pw_drv.o(.text.PW_VoltageBuffer) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD0_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_BOD0_Cmd) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetBod1Status) refers to mg32x02z_pw_drv.o(.text.PW_GetBod1Status) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSLEEPModeContinuous_Config) refers to mg32x02z_pw_drv.o(.text.PW_PeriphSLEEPModeContinuous_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeContinuous_Config) refers to mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeContinuous_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeWakeUp_Config) refers to mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeWakeUp_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_WakeUpDelay_Select) refers to mg32x02z_pw_drv.o(.text.PW_WakeUpDelay_Select) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetWakeUpMode) refers to mg32x02z_pw_drv.o(.text.PW_GetWakeUpMode) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetAllFlagStatus) refers to mg32x02z_pw_drv.o(.text.PW_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetSingleFlagStatus) refers to mg32x02z_pw_drv.o(.text.PW_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ClearFlag) refers to mg32x02z_pw_drv.o(.text.PW_ClearFlag) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_IT_Config) refers to mg32x02z_pw_drv.o(.text.PW_IT_Config) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetITStatus) refers to mg32x02z_pw_drv.o(.text.PW_GetITStatus) for [Anonymous Symbol]
    mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ITEA_Cmd) refers to mg32x02z_pw_drv.o(.text.PW_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetAllFlagStatus) refers to mg32x02z_rst_drv.o(.text.RST_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetSingleFlagStatus) refers to mg32x02z_rst_drv.o(.text.RST_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ClearFlag) refers to mg32x02z_rst_drv.o(.text.RST_ClearFlag) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_CRstSource_Config) refers to mg32x02z_rst_drv.o(.text.RST_CRstSource_Config) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstSource_Config) refers to mg32x02z_rst_drv.o(.text.RST_WRstSource_Config) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstGPIOLock_Config) refers to mg32x02z_rst_drv.o(.text.RST_WRstGPIOLock_Config) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ForceRstPeriph_SW) refers to mg32x02z_rst_drv.o(.text.RST_ForceRstPeriph_SW) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_TriggerSystemRst_SW) refers to mg32x02z_rst_drv.o(.text.RST_TriggerSystemRst_SW) for [Anonymous Symbol]
    mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WWDTWRstMask_Cmd) refers to mg32x02z_rst_drv.o(.text.RST_WWDTWRstMask_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_CLK_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_CLK_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_PreDivider_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_PreDivider_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Divider_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_Divider_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmCompareValue) refers to mg32x02z_rtc_drv.o(.text.RTC_GetAlarmCompareValue) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetAlarmCompareValue) refers to mg32x02z_rtc_drv.o(.text.RTC_SetAlarmCompareValue) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmState) refers to mg32x02z_rtc_drv.o(.text.RTC_GetAlarmState) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Alarm_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_Alarm_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetReloadReg) refers to mg32x02z_rtc_drv.o(.text.RTC_GetReloadReg) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetCaptureReg) refers to mg32x02z_rtc_drv.o(.text.RTC_GetCaptureReg) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetReloadReg) refers to mg32x02z_rtc_drv.o(.text.RTC_SetReloadReg) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_RCR_Mode_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_RCR_Mode_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_StopModeWakeUpEvent_Config) refers to mg32x02z_rtc_drv.o(.text.RTC_StopModeWakeUpEvent_Config) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_OutputSignal_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_OutputSignal_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_InitOutputSignalState_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_InitOutputSignalState_Cmd) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_Select) refers to mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_Select) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_SW) refers to mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_SW) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAllFlagStatus) refers to mg32x02z_rtc_drv.o(.text.RTC_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetSingleFlagStatus) refers to mg32x02z_rtc_drv.o(.text.RTC_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ClearFlag) refers to mg32x02z_rtc_drv.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_IT_Config) refers to mg32x02z_rtc_drv.o(.text.RTC_IT_Config) for [Anonymous Symbol]
    mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ITEA_Cmd) refers to mg32x02z_rtc_drv.o(.text.RTC_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DeInit) refers to mg32x02z_spi_drv.o(.text.SPI_DeInit) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Clock_Select) refers to mg32x02z_spi_drv.o(.text.SPI_Clock_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_PreDivider_Select) refers to mg32x02z_spi_drv.o(.text.SPI_PreDivider_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Prescaler_Select) refers to mg32x02z_spi_drv.o(.text.SPI_Prescaler_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Divider_Select) refers to mg32x02z_spi_drv.o(.text.SPI_Divider_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TriggerClockToggle) refers to mg32x02z_spi_drv.o(.text.SPI_TriggerClockToggle) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DualTransferRate_Select) refers to mg32x02z_spi_drv.o(.text.SPI_DualTransferRate_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveHighSpeed_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveHighSpeed_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModeAndNss_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ModeAndNss_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModfHappenedAction_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ModfHappenedAction_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputSignal_Select) refers to mg32x02z_spi_drv.o(.text.SPI_NSSInputSignal_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SingleMasterModeNssPulse_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SingleMasterModeNssPulse_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputInverse_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssInputInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputInverse_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssOutputInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputOutputSoftwareControl_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssInputOutputSoftwareControl_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputSoftwareControl_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssInputSoftwareControl_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputSoftwareControl_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_NssOutputSoftwareControl_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetNSSInputStatust) refers to mg32x02z_spi_drv.o(.text.SPI_GetNSSInputStatust) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputStatusControl_SW) refers to mg32x02z_spi_drv.o(.text.SPI_NSSInputStatusControl_SW) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSOutputStatusControl_SW) refers to mg32x02z_spi_drv.o(.text.SPI_NSSOutputStatusControl_SW) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssIdleTime_Select) refers to mg32x02z_spi_drv.o(.text.SPI_NssIdleTime_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPhase_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ClockPhase_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPolarity_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ClockPolarity_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_FirstBit_Select) refers to mg32x02z_spi_drv.o(.text.SPI_FirstBit_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxShadowBufferLevel) refers to mg32x02z_spi_drv.o(.text.SPI_GetRxShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearRxData) refers to mg32x02z_spi_drv.o(.text.SPI_ClearRxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetDataBufferReceivedBytes) refers to mg32x02z_spi_drv.o(.text.SPI_GetDataBufferReceivedBytes) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetDataBufferReceivedBytes) refers to mg32x02z_spi_drv.o(.text.SPI_SetDataBufferReceivedBytes) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearTxData) refers to mg32x02z_spi_drv.o(.text.SPI_ClearTxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxShadowBufferLevel) refers to mg32x02z_spi_drv.o(.text.SPI_GetTxShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxData) refers to mg32x02z_spi_drv.o(.text.SPI_GetRxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetTxData) refers to mg32x02z_spi_drv.o(.text.SPI_SetTxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxData) refers to mg32x02z_spi_drv.o(.text.SPI_GetTxData) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveModeReceivedThreshold_Select) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveModeReceivedThreshold_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataSize_Select) refers to mg32x02z_spi_drv.o(.text.SPI_DataSize_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLine_Select) refers to mg32x02z_spi_drv.o(.text.SPI_DataLine_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLineOutput_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_DataLineOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SendCopyMode_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SendCopyMode_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_BidirectionalOutput_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_BidirectionalOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TransferBidirection_Select) refers to mg32x02z_spi_drv.o(.text.SPI_TransferBidirection_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MosiMisoSignalSwap_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_MosiMisoSignalSwap_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_LoopBackMode_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_LoopBackMode_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockOutputSignal_Select) refers to mg32x02z_spi_drv.o(.text.SPI_ClockOutputSignal_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IdleStateDataMode_Select) refers to mg32x02z_spi_drv.o(.text.SPI_IdleStateDataMode_Select) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveAutoFullDuplex_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveAutoFullDuplex_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveSendDataDirectUpdate_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveSendDataDirectUpdate_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TXDMA_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_TXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMA_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_RXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMAPreCatch_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_RXDMAPreCatch_Cmd) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetAllFlagStatus) refers to mg32x02z_spi_drv.o(.text.SPI_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetSingleFlagStatus) refers to mg32x02z_spi_drv.o(.text.SPI_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearFlag) refers to mg32x02z_spi_drv.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IT_Config) refers to mg32x02z_spi_drv.o(.text.SPI_IT_Config) for [Anonymous Symbol]
    mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ITEA_Cmd) refers to mg32x02z_spi_drv.o(.text.SPI_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ITEA_Cmd) refers to mg32x02z_sys_drv.o(.text.SYS_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_GetChipMID) refers to mg32x02z_sys_drv.o(.text.SYS_GetChipMID) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadGeneralReg) refers to mg32x02z_sys_drv.o(.text.SYS_ReadGeneralReg) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteGeneralReg) refers to mg32x02z_sys_drv.o(.text.SYS_WriteGeneralReg) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadBackupReg) refers to mg32x02z_sys_drv.o(.text.SYS_ReadBackupReg) for [Anonymous Symbol]
    mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteBackupReg) refers to mg32x02z_sys_drv.o(.text.SYS_WriteBackupReg) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DeInit) refers to mg32x02z_tm_drv.o(.text.TM_DeInit) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBaseStruct_Init) refers to mg32x02z_tm_drv.o(.text.TM_TimeBaseStruct_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBase_Init) refers to mg32x02z_tm_drv.o(.text.TM_TimeBase_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Config) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Config) refers to mg32x02z_tm_drv.o(.text.TM_Counter_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimerMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_TimerMode_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CounterClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_CounterClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PrescalerClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_PrescalerClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetInternalClockDivider) refers to mg32x02z_tm_drv.o(.text.TM_SetInternalClockDivider) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCounterDirection) refers to mg32x02z_tm_drv.o(.text.TM_SetCounterDirection) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetPrescalerDirection) refers to mg32x02z_tm_drv.o(.text.TM_SetPrescalerDirection) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalClockSource_Select) refers to mg32x02z_tm_drv.o(.text.TM_InternalClockSource_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalClock_Select) refers to mg32x02z_tm_drv.o(.text.TM_ExternalClock_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITRx_Select) refers to mg32x02z_tm_drv.o(.text.TM_ITRx_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCounter) refers to mg32x02z_tm_drv.o(.text.TM_GetCounter) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_Counter_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_SW) refers to mg32x02z_tm_drv.o(.text.TM_Counter_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetPrescaler) refers to mg32x02z_tm_drv.o(.text.TM_GetPrescaler) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_SW) refers to mg32x02z_tm_drv.o(.text.TM_Prescaler_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Timer_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_Timer_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GatePrescaler_SW) refers to mg32x02z_tm_drv.o(.text.TM_GatePrescaler_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GateCounter_SW) refers to mg32x02z_tm_drv.o(.text.TM_GateCounter_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetPrescaler_SW) refers to mg32x02z_tm_drv.o(.text.TM_ResetPrescaler_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetCounter_SW) refers to mg32x02z_tm_drv.o(.text.TM_ResetCounter_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TriggerSource_Select) refers to mg32x02z_tm_drv.o(.text.TM_TriggerSource_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGICounter_Select) refers to mg32x02z_tm_drv.o(.text.TM_TRGICounter_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGIPrescaler_Select) refers to mg32x02z_tm_drv.o(.text.TM_TRGIPrescaler_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Config) refers to mg32x02z_tm_drv.o(.text.TM_UEV_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGOOut_SW) refers to mg32x02z_tm_drv.o(.text.TM_TRGOOut_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGO_Select) refers to mg32x02z_tm_drv.o(.text.TM_TRGO_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseTRGO_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseTRGO_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN0Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN0TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN1Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN1TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN2Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN2TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3Source_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN3Source_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3TriggerEvent_Select) refers to mg32x02z_tm_drv.o(.text.TM_IN3TriggerEvent_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOutSource_Select) refers to mg32x02z_tm_drv.o(.text.TM_ClockOutSource_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOut_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ClockOut_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CKOOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_CKOOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0z_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC0z_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0zOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0zBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC0zOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC00Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC00Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC01Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC01Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC02Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC02Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0N_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC0N_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC0NOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0NBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC0H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC0HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1z_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC1z_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1zOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1zBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC1zOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC10Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC10Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC11Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC11Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC12Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC12Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1N_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC1N_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC1NOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1NBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC1H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC1HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC2_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2OutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2OutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2BreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC2Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2N_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC2N_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NOutput_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC2NOutput_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NBreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2NBreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC2H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC2HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC3_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3OutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC3OutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakStopState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC3BreakStopState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3Output_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OC3Output_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3H_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseOC3H_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3HOutputState_Init) refers to mg32x02z_tm_drv.o(.text.TM_OC3HOutputState_Init) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalBreakEvent_Config) refers to mg32x02z_tm_drv.o(.text.TM_ExternalBreakEvent_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalBreakEvent_Config) refers to mg32x02z_tm_drv.o(.text.TM_InternalBreakEvent_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakTrigger_SW) refers to mg32x02z_tm_drv.o(.text.TM_BreakTrigger_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH3_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_BreakCH3_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH012_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_BreakCH012_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_BreakMode_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC0BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC1BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC2BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakControl_Select) refers to mg32x02z_tm_drv.o(.text.TM_OC3BreakControl_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadEventSource_Config) refers to mg32x02z_tm_drv.o(.text.TM_PreloadEventSource_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadActive_SW) refers to mg32x02z_tm_drv.o(.text.TM_PreloadActive_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC0z_Config) refers to mg32x02z_tm_drv.o(.text.TM_PreloadOC0z_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC1z_Config) refers to mg32x02z_tm_drv.o(.text.TM_PreloadOC1z_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH0Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH0Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH1Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH1Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH2Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH2Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH3Function_Config) refers to mg32x02z_tm_drv.o(.text.TM_CH3Function_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OutputDelayMode_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_OutputDelayMode_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC0Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC0Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC1Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC1Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC2Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC2Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC3Value) refers to mg32x02z_tm_drv.o(.text.TM_GetIC3Value) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC0OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC0OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC1OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC1OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC2OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC2OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC3OverWritten_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_IC3OverWritten_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC0_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC0_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC1_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC1_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC2_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC2_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC3_SW) refers to mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC3_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC0_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC0_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC1_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC1_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC2_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC2_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC3_SW) refers to mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC3_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC0A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC1A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC2A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3A) refers to mg32x02z_tm_drv.o(.text.TM_GetCC3A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC0B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC1B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC2B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3B) refers to mg32x02z_tm_drv.o(.text.TM_GetCC3B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC0A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC1A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC2A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3A) refers to mg32x02z_tm_drv.o(.text.TM_SetCC3A) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC0B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC1B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC2B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3B) refers to mg32x02z_tm_drv.o(.text.TM_SetCC3B) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF0A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF1A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF2A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3A_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF3A_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF0B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF1B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF2B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3B_SW) refers to mg32x02z_tm_drv.o(.text.TM_GenerateCF3B_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ReloadFromCCxB_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ReloadFromCCxB_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AlignmentMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_AlignmentMode_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEI_Select) refers to mg32x02z_tm_drv.o(.text.TM_QEI_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIReset_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_QEIReset_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIResetIDX_Select) refers to mg32x02z_tm_drv.o(.text.TM_QEIResetIDX_Select) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseQEIDirection) refers to mg32x02z_tm_drv.o(.text.TM_InverseQEIDirection) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AutoStop_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_AutoStop_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepeatAutoStopMode_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_RepeatAutoStopMode_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadZoneClockDivider) refers to mg32x02z_tm_drv.o(.text.TM_SetDeadZoneClockDivider) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadTime) refers to mg32x02z_tm_drv.o(.text.TM_SetDeadTime) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IT_Config) refers to mg32x02z_tm_drv.o(.text.TM_IT_Config) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITEA_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetSingleFlagStatus) refers to mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetAllFlagStatus) refers to mg32x02z_tm_drv.o(.text.TM_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClearFlag) refers to mg32x02z_tm_drv.o(.text.TM_ClearFlag) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ExtTRGI_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseExtTRGI_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_InverseExtTRGI_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI2UEV_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_ExtTRGI2UEV_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ForceUpdate_SW) refers to mg32x02z_tm_drv.o(.text.TM_ForceUpdate_SW) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_UEV_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAChannel_Cmd) refers to mg32x02z_tm_drv.o(.text.TM_DMAChannel_Cmd) for [Anonymous Symbol]
    mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAUpdateMode_Select) refers to mg32x02z_tm_drv.o(.text.TM_DMAUpdateMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IT_Config) refers to mg32x02z_urt_drv.o(.text.URT_IT_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetITStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ITEA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITAllFlagStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetITAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITSingleFlagStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetITSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearITFlag) refers to mg32x02z_urt_drv.o(.text.URT_ClearITFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxDifferentFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxDifferentFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxHoldFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxHoldFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRxHoldFlag) refers to mg32x02z_urt_drv.o(.text.URT_ClearRxHoldFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetIrDaBusyFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetIrDaBusyFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBreakBusyFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetBreakBusyFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxBusyFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxBusyFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxNoiseFlag) refers to mg32x02z_urt_drv.o(.text.URT_GetRxNoiseFlag) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataCharacter_Config) refers to mg32x02z_urt_drv.o(.text.URT_DataCharacter_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mode_Select) refers to mg32x02z_urt_drv.o(.text.URT_Mode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataLine_Select) refers to mg32x02z_urt_drv.o(.text.URT_DataLine_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_HalfDuplexMode_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_HalfDuplexMode_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_LoopBackMode_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_LoopBackMode_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TX_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TX_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RX_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RX_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RXInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TXInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NoiseDataSkip_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NoiseDataSkip_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Config) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorClock_Select) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorClock_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPreReload) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPreReload) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCountReload) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCountReload) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPre) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPre) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCount) refers to mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCount) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignalSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_CLKSignalSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignal_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CLKSignal_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlBROSignalStatus_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlBROSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlCLKSignalStatus_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlCLKSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXOverSamplingSampleNumber_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXOverSamplingSampleNumber_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingSampleNumber_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXOverSamplingSampleNumber_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXOverSamplingMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeroutTimer_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TimeroutTimer_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TriggerTimeoutTimerRst_SW) refers to mg32x02z_urt_drv.o(.text.URT_TriggerTimeoutTimerRst_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_TimeoutMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutTimerClockSource_Select) refers to mg32x02z_urt_drv.o(.text.URT_TimeoutTimerClockSource_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleDetect_Select) refers to mg32x02z_urt_drv.o(.text.URT_IdleDetect_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_IdleTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_RXTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_BreakTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationTimeoutDetect_Config) refers to mg32x02z_urt_drv.o(.text.URT_CalibrationTimeoutDetect_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlTMOSignalStatus_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlTMOSignalStatus_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerCounter) refers to mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerCounter) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCounter) refers to mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCounter) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerReload) refers to mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerReload) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCompare) refers to mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCompare) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShadowBufferLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetTXShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShadowBufferLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetRXShadowBufferLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearTXData) refers to mg32x02z_urt_drv.o(.text.URT_ClearTXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRXData) refers to mg32x02z_urt_drv.o(.text.URT_ClearRXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXDataRegLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetTXDataRegLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXShadowBufferThreshold_Select) refers to mg32x02z_urt_drv.o(.text.URT_RXShadowBufferThreshold_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXDataRegLevel) refers to mg32x02z_urt_drv.o(.text.URT_GetRXDataRegLevel) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXData) refers to mg32x02z_urt_drv.o(.text.URT_GetRXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureData) refers to mg32x02z_urt_drv.o(.text.URT_GetCaptureData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureStatusBit) refers to mg32x02z_urt_drv.o(.text.URT_GetCaptureStatusBit) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferStatusBit) refers to mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferStatusBit) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShiftBufferData) refers to mg32x02z_urt_drv.o(.text.URT_GetTXShiftBufferData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferData) refers to mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTS_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RTS_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTSInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RTSInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlRTS_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlRTS_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTS_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CTS_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCTSLineStatus) refers to mg32x02z_urt_drv.o(.text.URT_GetCTSLineStatus) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTSInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CTSInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DE_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_DE_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_DEInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEGuardTime_Select) refers to mg32x02z_urt_drv.o(.text.URT_DEGuardTime_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdlehandleMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_IdlehandleMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXHalt_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TXHalt_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXGuardTime_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXGuardTime_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTXData) refers to mg32x02z_urt_drv.o(.text.URT_SetTXData) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPHAMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_CPHAMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPOLMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_CPOLMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssInverse_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NssInverse_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssSW_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_NssSW_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlNSS_SW) refers to mg32x02z_urt_drv.o(.text.URT_CtrlNSS_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddressMask) refers to mg32x02z_urt_drv.o(.text.URT_SetSlaveAddressMask) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddress) refers to mg32x02z_urt_drv.o(.text.URT_SetSlaveAddress) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GlobalAddress_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_GlobalAddress_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendAddress) refers to mg32x02z_urt_drv.o(.text.URT_SendAddress) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_CalibrationMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoCalibration_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_AutoCalibration_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Calibration_SW) refers to mg32x02z_urt_drv.o(.text.URT_Calibration_SW) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationCompleteDataHold_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_CalibrationCompleteDataHold_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExtraBreakBit_Select) refers to mg32x02z_urt_drv.o(.text.URT_ExtraBreakBit_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendBreak) refers to mg32x02z_urt_drv.o(.text.URT_SendBreak) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCalibrationResult) refers to mg32x02z_urt_drv.o(.text.URT_GetCalibrationResult) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXDMA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_TXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXDMA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RXDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakDisableDMA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_BreakDisableDMA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Config) refers to mg32x02z_urt_drv.o(.text.URT_IrDA_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_IrDA_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoExitMuteMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_AutoExitMuteMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoEnterMuteMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_AutoEnterMuteMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mute_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_Mute_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXParityError_Config) refers to mg32x02z_urt_drv.o(.text.URT_RXParityError_Config) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorDetectMode_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXErrorDetectMode_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorResendTime_Select) refers to mg32x02z_urt_drv.o(.text.URT_TXErrorResendTime_Select) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RxTxSwap_Cmd) refers to mg32x02z_urt_drv.o(.text.URT_RxTxSwap_Cmd) for [Anonymous Symbol]
    mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExternalClockMux_Select) refers to mg32x02z_urt_drv.o(.text.URT_ExternalClockMux_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_CLK_Select) refers to mg32x02z_wwdt_drv.o(.text.WWDT_CLK_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_DIV_Select) refers to mg32x02z_wwdt_drv.o(.text.WWDT_DIV_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_PDIV_Select) refers to mg32x02z_wwdt_drv.o(.text.WWDT_PDIV_Select) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_Cmd) refers to mg32x02z_wwdt_drv.o(.text.WWDT_Cmd) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetCounter) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetCounter) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RefreshCounter) refers to mg32x02z_wwdt_drv.o(.text.WWDT_RefreshCounter) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetReloadReg) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetReloadReg) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetReloadReg) refers to mg32x02z_wwdt_drv.o(.text.WWDT_SetReloadReg) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWindowThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetWindowThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWindowThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_SetWindowThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWarningThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetWarningThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWarningThreshold) refers to mg32x02z_wwdt_drv.o(.text.WWDT_SetWarningThreshold) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RstEvent_Config) refers to mg32x02z_wwdt_drv.o(.text.WWDT_RstEvent_Config) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetAllFlagStatus) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetAllFlagStatus) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetSingleFlagStatus) refers to mg32x02z_wwdt_drv.o(.text.WWDT_GetSingleFlagStatus) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_ClearFlag) refers to mg32x02z_wwdt_drv.o(.text.WWDT_ClearFlag) for [Anonymous Symbol]
    mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_IT_Config) refers to mg32x02z_wwdt_drv.o(.text.WWDT_IT_Config) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.InitTick) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    mg32x02z__common_drv.o(.ARM.exidx.text.InitTick) refers to mg32x02z__common_drv.o(.text.InitTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.IncTick) refers to mg32x02z__common_drv.o(.bss.uwTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.IncTick) refers to mg32x02z__common_drv.o(.text.IncTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.GetTick) refers to mg32x02z__common_drv.o(.bss.uwTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.GetTick) refers to mg32x02z__common_drv.o(.text.GetTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.text.Delay) refers to mg32x02z__common_drv.o(.text.GetTick) for GetTick
    mg32x02z__common_drv.o(.ARM.exidx.text.Delay) refers to mg32x02z__common_drv.o(.text.Delay) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.SuspendTick) refers to mg32x02z__common_drv.o(.text.SuspendTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.ResumeTick) refers to mg32x02z__common_drv.o(.text.ResumeTick) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.ProtectModuleReg) refers to mg32x02z__common_drv.o(.text.ProtectModuleReg) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.UnProtectModuleReg) refers to mg32x02z__common_drv.o(.text.UnProtectModuleReg) for [Anonymous Symbol]
    mg32x02z__common_drv.o(.ARM.exidx.text.LockModuleReg) refers to mg32x02z__common_drv.o(.text.LockModuleReg) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mg32x02z.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mg32x02z.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing bus.o(.text), (0 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_AddNewByte), (8 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_ParseMessage), (8 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_ParseWriteRequest9), (8 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_ParseWriteRequest24), (8 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_ParseReadRequest), (8 bytes).
    Removing bus.o(.text.Bus_ReturnReply), (56 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_ReturnReply), (8 bytes).
    Removing bus.o(.text.Bus_EventResponse), (88 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_EventResponse), (8 bytes).
    Removing bus.o(.ARM.exidx.text.Bus_ClearBuffer), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.TIM00_Callback), (8 bytes).
    Removing timers.o(.text.TIM01_Callback), (52 bytes).
    Removing timers.o(.ARM.exidx.text.TIM01_Callback), (8 bytes).
    Removing timers.o(.text.TIM10_Callback), (48 bytes).
    Removing timers.o(.ARM.exidx.text.TIM10_Callback), (8 bytes).
    Removing timers.o(.text.TIM16_Callback), (44 bytes).
    Removing timers.o(.ARM.exidx.text.TIM16_Callback), (8 bytes).
    Removing timers.o(.text.TIM36_Callback), (140 bytes).
    Removing timers.o(.ARM.exidx.text.TIM36_Callback), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TIM_Config), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TM0x_IRQHandler), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TM10_IRQHandler), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TM1x_IRQHandler), (8 bytes).
    Removing timers.o(.ARM.exidx.text.TM3x_IRQHandler), (8 bytes).
    Removing crc.o(.text), (0 bytes).
    Removing crc.o(.ARM.exidx.text.Do_CRC), (8 bytes).
    Removing crc.o(.ARM.exidx.text.CRCisWrong), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.text.URT_Rx_Callback), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT_Rx_Callback), (8 bytes).
    Removing usart.o(.text.URT_Write), (24 bytes).
    Removing usart.o(.ARM.exidx.text.URT_Write), (8 bytes).
    Removing usart.o(.text.URT_WriteWord), (24 bytes).
    Removing usart.o(.ARM.exidx.text.URT_WriteWord), (8 bytes).
    Removing usart.o(.text.URT_PrintString), (48 bytes).
    Removing usart.o(.ARM.exidx.text.URT_PrintString), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT_Print), (8 bytes).
    Removing usart.o(.text.URT_IsTxReady), (10 bytes).
    Removing usart.o(.ARM.exidx.text.URT_IsTxReady), (8 bytes).
    Removing usart.o(.text.URT_IsTxEndTransmission), (12 bytes).
    Removing usart.o(.ARM.exidx.text.URT_IsTxEndTransmission), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART_Config), (8 bytes).
    Removing usart.o(.ARM.exidx.text.URT0_IRQHandler), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.InitPinBase), (38 bytes).
    Removing gpio.o(.ARM.exidx.text.InitPinBase), (8 bytes).
    Removing gpio.o(.text.InitPinPPO), (62 bytes).
    Removing gpio.o(.ARM.exidx.text.InitPinPPO), (8 bytes).
    Removing gpio.o(.text.InitPinUsartTx), (62 bytes).
    Removing gpio.o(.ARM.exidx.text.InitPinUsartTx), (8 bytes).
    Removing gpio.o(.text.InitPinUsartRx), (64 bytes).
    Removing gpio.o(.ARM.exidx.text.InitPinUsartRx), (8 bytes).
    Removing gpio.o(.text.InitPinDI), (64 bytes).
    Removing gpio.o(.ARM.exidx.text.InitPinDI), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_Config), (8 bytes).
    Removing keys.o(.text), (0 bytes).
    Removing keys.o(.data.key2), (8 bytes).
    Removing keys.o(.data.key3), (8 bytes).
    Removing keys.o(.data.key4), (8 bytes).
    Removing keys.o(.data.key5), (8 bytes).
    Removing keys.o(.data.key_em_1), (8 bytes).
    Removing keys.o(.data.key_em_2), (8 bytes).
    Removing keys.o(.data.key_em_3), (8 bytes).
    Removing keys.o(.data.key_em_4), (8 bytes).
    Removing keys.o(.data.key_em_5), (8 bytes).
    Removing skud_algo.o(.text), (0 bytes).
    Removing skud_algo.o(.text.IndicationStart), (104 bytes).
    Removing skud_algo.o(.ARM.exidx.text.IndicationStart), (8 bytes).
    Removing skud_algo.o(.text.IndicationStop), (40 bytes).
    Removing skud_algo.o(.ARM.exidx.text.IndicationStop), (8 bytes).
    Removing skud_algo.o(.text.AlarmCountdownEnable), (14 bytes).
    Removing skud_algo.o(.ARM.exidx.text.AlarmCountdownEnable), (8 bytes).
    Removing skud_algo.o(.text.AlarmCountdownDisable), (24 bytes).
    Removing skud_algo.o(.ARM.exidx.text.AlarmCountdownDisable), (8 bytes).
    Removing skud_algo.o(.text.ReadingKeyEnable), (16 bytes).
    Removing skud_algo.o(.ARM.exidx.text.ReadingKeyEnable), (8 bytes).
    Removing skud_algo.o(.text.ReadingKeyDisable), (24 bytes).
    Removing skud_algo.o(.ARM.exidx.text.ReadingKeyDisable), (8 bytes).
    Removing skud_algo.o(.text.ProtectionDelayEnable), (16 bytes).
    Removing skud_algo.o(.ARM.exidx.text.ProtectionDelayEnable), (8 bytes).
    Removing skud_algo.o(.text.MuteBuzzer), (24 bytes).
    Removing skud_algo.o(.ARM.exidx.text.MuteBuzzer), (8 bytes).
    Removing skud_algo.o(.text.UnmuteBuzzer), (32 bytes).
    Removing skud_algo.o(.ARM.exidx.text.UnmuteBuzzer), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hSleepToWaiting), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hWaitingToAccess), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hAccessToSleep), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hReadingKeySuspend), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hReadingKeyResume), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hDoorClosedNoAccess), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hDoorOpenedNoAccess), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hSendAlarmEvent), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hIndicationStop), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.hParseBusMessage), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.HandleEvent), (8 bytes).
    Removing skud_algo.o(.ARM.exidx.text.IsKeyActive), (8 bytes).
    Removing flash.o(.text), (0 bytes).
    Removing flash.o(.text.FlashTestFill), (36 bytes).
    Removing flash.o(.ARM.exidx.text.FlashTestFill), (8 bytes).
    Removing flash.o(.ARM.exidx.text.AddKey), (8 bytes).
    Removing flash.o(.ARM.exidx.text.FlashFirstInit), (8 bytes).
    Removing flash.o(.text.GetMaxFlashResource), (36 bytes).
    Removing flash.o(.ARM.exidx.text.GetMaxFlashResource), (8 bytes).
    Removing flash.o(.ARM.exidx.text.GetVariable), (8 bytes).
    Removing flash.o(.ARM.exidx.text.SetVariable), (8 bytes).
    Removing flash.o(.text.CopyFlashPageToRAM), (24 bytes).
    Removing flash.o(.ARM.exidx.text.CopyFlashPageToRAM), (8 bytes).
    Removing flash.o(.text.UpdateFlashResource), (28 bytes).
    Removing flash.o(.ARM.exidx.text.UpdateFlashResource), (8 bytes).
    Removing flash.o(.text.CopyRAMToFlashPage), (20 bytes).
    Removing flash.o(.ARM.exidx.text.CopyRAMToFlashPage), (8 bytes).
    Removing flash.o(.ARM.exidx.text.SetVariablePack), (8 bytes).
    Removing flash.o(.ARM.exidx.text.ActivateKey), (8 bytes).
    Removing flash.o(.text.GetKeyStatus), (12 bytes).
    Removing flash.o(.ARM.exidx.text.GetKeyStatus), (8 bytes).
    Removing flash.o(.ARM.exidx.text.DoCommand), (8 bytes).
    Removing events.o(.text), (0 bytes).
    Removing variables.o(.text), (0 bytes).
    Removing ibutton.o(.text), (0 bytes).
    Removing ibutton.o(.ARM.exidx.text.DS1990A_GetKeyID), (8 bytes).
    Removing buffer.o(.text), (0 bytes).
    Removing buffer.o(.text.getNextWrite), (28 bytes).
    Removing buffer.o(.ARM.exidx.text.getNextWrite), (8 bytes).
    Removing buffer.o(.text.getNextRead), (28 bytes).
    Removing buffer.o(.ARM.exidx.text.getNextRead), (8 bytes).
    Removing buffer.o(.text.isFull), (24 bytes).
    Removing buffer.o(.ARM.exidx.text.isFull), (8 bytes).
    Removing buffer.o(.text.isEmpty), (20 bytes).
    Removing buffer.o(.ARM.exidx.text.isEmpty), (8 bytes).
    Removing buffer.o(.ARM.exidx.text.getEvent), (8 bytes).
    Removing buffer.o(.ARM.exidx.text.putEvent), (8 bytes).
    Removing tests.o(.text), (0 bytes).
    Removing onewire.o(.text), (0 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_SetDirection), (8 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_Start), (8 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_Write), (8 bytes).
    Removing onewire.o(.ARM.exidx.text.OneWire_Read), (8 bytes).
    Removing md5.o(.text), (0 bytes).
    Removing md5.o(.ARM.exidx.text.body), (8 bytes).
    Removing md5.o(.text.MD5_Init), (52 bytes).
    Removing md5.o(.ARM.exidx.text.MD5_Init), (8 bytes).
    Removing md5.o(.text.MD5_Update), (124 bytes).
    Removing md5.o(.ARM.exidx.text.MD5_Update), (8 bytes).
    Removing md5.o(.ARM.exidx.text.MD5_Final), (8 bytes).
    Removing md5.o(.ARM.exidx.text.MD5_MakeHash), (8 bytes).
    Removing md5.o(.text.MD5_MakeDigest16), (48 bytes).
    Removing md5.o(.ARM.exidx.text.MD5_MakeDigest16), (8 bytes).
    Removing md5.o(.rodata.str1.1), (17 bytes).
    Removing iap.o(.text), (0 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Init), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Erase_OnePage), (8 bytes).
    Removing iap.o(.text.IAP_Erase_Page), (192 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Erase_Page), (8 bytes).
    Removing iap.o(.text.IAP_FullErase), (168 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_FullErase), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_ReadByte), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_ReadWord), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_WriteSingleWord), (8 bytes).
    Removing iap.o(.text.IAP_Single_Write), (156 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Single_Write), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_WriteMultipleWord), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_Multiple_Write), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_CopyFromIAPToRAM), (8 bytes).
    Removing iap.o(.ARM.exidx.text.IAP_IsEqualToRAM), (8 bytes).
    Removing wdt.o(.text), (0 bytes).
    Removing wdt.o(.ARM.exidx.text.WDT_Config), (8 bytes).
    Removing wdt.o(.ARM.exidx.text.wdt_enable), (8 bytes).
    Removing wdt.o(.ARM.exidx.text.wdt_reset), (8 bytes).
    Removing wdt.o(.text.wdt_disable), (28 bytes).
    Removing wdt.o(.ARM.exidx.text.wdt_disable), (8 bytes).
    Removing mg32x02z_csc_init.o(.text), (0 bytes).
    Removing mg32x02z_csc_init.o(.text.CSC_IHRCO_Enable), (68 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_IHRCO_Enable), (8 bytes).
    Removing mg32x02z_csc_init.o(.text.CSC_XOSC_Enable), (108 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_XOSC_Enable), (8 bytes).
    Removing mg32x02z_csc_init.o(.text.CSC_EXTCK_Enable), (32 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_EXTCK_Enable), (8 bytes).
    Removing mg32x02z_csc_init.o(.ARM.exidx.text.CSC_Init), (8 bytes).
    Removing mg32x02z_chipinit.o(.text), (0 bytes).
    Removing mg32x02z_chipinit.o(.ARM.exidx.text.ChipInit), (8 bytes).
    Removing startup_mg32x02z.o(HEAP), (512 bytes).
    Removing system_mg32x02z.o(.text), (0 bytes).
    Removing system_mg32x02z.o(.text.SystemCoreClockUpdate), (16 bytes).
    Removing system_mg32x02z.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_mg32x02z.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mg32x02z.o(.ARM.exidx.text.HardFault_Handler_C), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text), (0 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DeInit), (48 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_BaseStructure_Init), (18 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_BaseStructure_Init), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_Base_Init), (106 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Base_Init), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClockSource_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClockSource_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetInternalClockDivider), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetInternalClockDivider), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetPLLClockDivider), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPLLClockDivider), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DataAlignment_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataAlignment_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DataResolution_Select), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataResolution_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DataOverrunMode_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DataOverrunMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetOperationCurrent), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOperationCurrent), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetLowerThreshold), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLowerThreshold), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetHigherThreshold), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetHigherThreshold), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_WindowDetectRange_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetectRange_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_WindowDetect_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WindowDetect_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_Output_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Output_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_PGA_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGA_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetPGAGain), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAGain), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetPGAOffset), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetPGAOffset), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_PGAOffsetCalibration_Cmd), (220 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_PGAOffsetCalibration_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_StartCalibration), (12 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_StartCalibration), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearFlag), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DMA_Cmd), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMA_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DMADataSize_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMADataSize_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_DMAMaskFlag_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_DMAMaskFlag_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetNextConversionChannel), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetNextConversionChannel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_WaitDataReadOut), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_WaitDataReadOut), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetExtendSampling), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetExtendSampling), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ConversionMode_Select), (116 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ConversionMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_MainConversionMode_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_MainConversionMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ContinueMode_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ContinueMode_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_HoldConversion_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_HoldConversion_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TriggerSource_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerSource_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SoftwareConversion_Cmd), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SoftwareConversion_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_TriggerEdge_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_TriggerEdge_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ChannelMUX_Select), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChannelMUX_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ExternalChannel_Select), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ExternalChannel_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_InternalChannel_Select), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_InternalChannel_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ScanLoopChannel_Enable), (22 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ScanLoopChannel_Enable), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ChangeMUXTiming_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ChangeMUXTiming_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SingleDifferentMode_Select), (12 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SingleDifferentMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetLimitFunction), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetLimitFunction), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum0Channel), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum1Channel), (14 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum2Channel), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SumChannelMode_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumChannelMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSumNumber), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSumNumber), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SumOverrunMode_Select), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SumOverrunMode_Select), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum0Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum1Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum2Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearSum0Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum0Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearSum1Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum1Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ClearSum2Flags), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ClearSum2Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum0Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum0Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum1Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum1Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSum2Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSum2Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum0Data), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum0Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum1Data), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum1Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetSum2Data), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetSum2Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetDAT0Flags), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Flags), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetDAT0Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Channel), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetDAT0Data), (6 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetDAT0Data), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetDigitalOffset), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetDigitalOffset), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_SetOutputCodeFormat), (12 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_SetOutputCodeFormat), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_IT_Config), (20 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_IT_Config), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_adc_drv.o(.text.ADC_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_adc_drv.o(.ARM.exidx.text.ADC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text), (0 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_TimerX_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_TimerX_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ITR6_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR6_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ITR7_Select), (20 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITR7_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel0_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel0_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel1_Select), (14 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel1_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_BreakSourceChannel2_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_BreakSourceChannel2_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseBKS0_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS0_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseBKS1_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS1_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseBKS2_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseBKS2_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OBMxOpMode_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OBMxOpMode_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetOBMxOutputState), (44 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxOutputState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseOBMxOutput_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOBMxOutput_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OutputFilter_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputFilter_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetOBMxSwitchState), (44 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxSwitchState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_SetOBMxInitState), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_SetOBMxInitState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetOBMxInitState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetOBMxInitState), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OutputChannel0Source_Select), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel0Source_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_OutputChannel1Source_Select), (14 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_OutputChannel1Source_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel0_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel0_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseOutputChannel1_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseOutputChannel1_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_IRCLK_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRCLK_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_IRDAT_Select), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IRDAT_Select), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseIRCLK_Cmd), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRCLK_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_InverseIRDAT_Cmd), (24 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_InverseIRDAT_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_IT_Config), (20 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_IT_Config), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_apb_drv.o(.text.APB_ClearFlag), (4 bytes).
    Removing mg32x02z_apb_drv.o(.ARM.exidx.text.APB_ClearFlag), (8 bytes).
    Removing mg32x02z_cfg_drv.o(.text), (0 bytes).
    Removing mg32x02z_cm0_drv.o(.text), (0 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_SysTick_Cmd), (24 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTick_Cmd), (8 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_SysTickIT_Cmd), (28 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickIT_Cmd), (8 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_SysTickClockSource_Select), (28 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_SysTickClockSource_Select), (8 bytes).
    Removing mg32x02z_cm0_drv.o(.text.CM0_GetSysTickCurrentValue), (12 bytes).
    Removing mg32x02z_cm0_drv.o(.ARM.exidx.text.CM0_GetSysTickCurrentValue), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text), (0 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_DeInit), (20 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_Power_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_Power_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_FilterClock_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClock_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_FilterClockDivider_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_FilterClockDivider_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_InverseOutputPin), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_InverseOutputPin), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_OutputPolarity_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_OutputPolarity_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF_Select), (24 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IVREF2_Select), (24 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IVREF2_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_PositivePin_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_PositivePin_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_NegativePin_Select), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_NegativePin_Select), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_SetHysteresisWindow), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_SetHysteresisWindow), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_IT_Config), (20 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_IT_Config), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_ClearFlag), (4 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing mg32x02z_cmp_drv.o(.text.CMP_GetOutput), (48 bytes).
    Removing mg32x02z_cmp_drv.o(.ARM.exidx.text.CMP_GetOutput), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text), (0 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_IHRCO_Select), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IHRCO_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_XOSC_Cmd), (40 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSC_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_XOSCGain_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_XOSCGain_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_EXTCK_Cmd), (32 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_EXTCK_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_ST_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_ST_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_MAIN_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_MAIN_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_HS_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_HS_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_LS_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_LS_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PLL_Config), (104 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PLL_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PLL_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_APB_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_APB_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_UT_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_UT_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_CK_AHB_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_CK_AHB_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ICKO_ClockSource_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_ClockSource_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ICKO_Divider_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Divider_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ICKO_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ICKO_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_MissingClockDetectionDuration_Select), (20 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetectionDuration_Select), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_MissingClockDetection_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_MissingClockDetection_Cmd), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphProcessClockSource_Config), (92 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphProcessClockSource_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphONModeClock_Config), (96 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphONModeClock_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphSLEEPModeClock_Config), (76 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSLEEPModeClock_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_PeriphSTOPModeClock_Config), (32 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_PeriphSTOPModeClock_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetClockSourceState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetMainSwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetMainSwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetHsSwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetHsSwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetLsSwitchState), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetLsSwitchState), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_GetSingleFlagStatus), (16 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ClearFlag), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_IT_Config), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_IT_Config), (8 bytes).
    Removing mg32x02z_csc_drv.o(.text.CSC_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_csc_drv.o(.ARM.exidx.text.CSC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text), (0 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_DeInit), (26 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_BaseInitStructure_Init), (68 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_BaseInitStructure_Init), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Base_Init), (424 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Base_Init), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerPin), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerPin), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetExtTriggerMode), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtTriggerMode), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_LoopMode_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LoopMode_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseSourceAddress), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseSourceAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_AutoIncreaseDestinationAddress), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_AutoIncreaseDestinationAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Source_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Source_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Destination_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Destination_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetBurstSize), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetBurstSize), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetTransferDataNumber), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetTransferDataNumber), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetSourceAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetSourceAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetDestinationAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetDestinationAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Cmd), (24 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetExtraGPLChannel), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetExtraGPLChannel), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetCHxUseGPL), (8 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCHxUseGPL), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_PriorityMode_Select), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_PriorityMode_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_FlashMode_Select), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_FlashMode_Select), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_StartRequest), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_StartRequest), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Channel_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Channel_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_LastCycle_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_LastCycle_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_Hold_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_Hold_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetCurrentSourceAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentSourceAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetCurrentDestinationAddress), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetCurrentDestinationAddress), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetRemainDataCount), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetRemainDataCount), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetPriority), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetPriority), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_SetChxSKIP3Mode), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_SetChxSKIP3Mode), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_IT_Config), (18 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_IT_Config), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_ClearFlag), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_GetChannelFlag), (10 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_GetChannelFlag), (8 bytes).
    Removing mg32x02z_dma_drv.o(.text.DMA_ClearChannelFlag), (4 bytes).
    Removing mg32x02z_dma_drv.o(.ARM.exidx.text.DMA_ClearChannelFlag), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text), (0 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerMode_Select), (56 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerMode_Select), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndMask_Select), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndMask_Select), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerOrMask_Select), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerOrMask_Select), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerAndUnmatch_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerAndUnmatch_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_PxTriggerITEA_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_PxTriggerITEA_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerEventFlagStatus), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerEventFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxAllTriggerITFlagStatus), (18 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxAllTriggerITFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPinxTriggerEventSingleFlagStatus), (10 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPinxTriggerEventSingleFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerAndITFlagStatus), (20 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerAndITFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetPxTriggerOrITFlagStatus), (18 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetPxTriggerOrITFlagStatus), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerEventFlag), (4 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerEventFlag), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_ClearPxTriggerITFlag), (12 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_ClearPxTriggerITFlag), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_GetITSourceID), (12 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_GetITSourceID), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_RXEV_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_RXEV_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_NMI_Cmd), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Cmd), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_NMITrigger_SW), (16 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMITrigger_SW), (8 bytes).
    Removing mg32x02z_exic_drv.o(.text.EXIC_NMI_Select), (24 bytes).
    Removing mg32x02z_exic_drv.o(.ARM.exidx.text.EXIC_NMI_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text), (0 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Config), (66 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Config), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PortMode_Config), (130 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortMode_Config), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinMode_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinHighSpeedMode_Cmd), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinPUResister_Cmd), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInverse_Cmd), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinOutputDrive_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinInFilterDivider_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PinFunction_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_PortFilterClockSource_Select), (20 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_PortFilterClockSource_Select), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_WritePort), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_WritePort), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_ReadPort), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ReadPort), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_SetPortBit), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetPortBit), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_ClearPortBit), (4 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_ClearPortBit), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.text.GPIO_SetClearPortBit), (8 bytes).
    Removing mg32x02z_gpio_drv.o(.ARM.exidx.text.GPIO_SetClearPortBit), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text), (0 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_ParityCheck_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ParityCheck_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckWord), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckWord), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord), (34 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_Low), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_Low), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckHalfWord_High), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckHalfWord_High), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_0), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_0), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_1), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_1), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_2), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_2), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte_3), (14 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte_3), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetParityCheckByte), (26 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetParityCheckByte), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_Inverse_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_Inverse_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_ByteOrderChange_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_ByteOrderChange_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_16BitsByteOrderChange_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_16BitsByteOrderChange_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_BeforeBitOrderChange_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_BeforeBitOrderChange_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_AfterBitOrderChange_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_AfterBitOrderChange_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_Mode_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Mode_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_Data_Size_Select), (20 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Data_Size_Select), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_SetInitValue), (12 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_SetInitValue), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_CRC_Cmd), (24 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_CRC_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_DMA_Cmd), (28 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DMA_Cmd), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_DataInput), (12 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_DataInput), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetOutputData), (16 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetOutputData), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_gpl_drv.o(.text.GPL_GetFlagStatus), (16 bytes).
    Removing mg32x02z_gpl_drv.o(.ARM.exidx.text.GPL_GetFlagStatus), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text), (0 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetClockSource), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockSource), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetClockPrescaler), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockPrescaler), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetClockDivider), (16 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetClockDivider), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSCLHighTime), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLHighTime), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSCLLowTime), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSCLLowTime), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetPreDriveTime), (16 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetPreDriveTime), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GeneralCallAddress_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GeneralCallAddress_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SlaveAddressDetect_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SlaveAddressDetect_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress), (16 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SetSlaveAddress1Mask), (6 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SetSlaveAddress1Mask), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetSlaveAddress), (38 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveAddress), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_Cmd), (18 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_TXDMA_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_TXDMA_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_RXDMA_Cmd), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_RXDMA_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_IT_Config), (20 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_IT_Config), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ITEA_Cmd), (18 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetITSource), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetITSource), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetFlagStatus), (12 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ClearFlag), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetEventCode), (10 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventCode), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetEventFlag), (10 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetEventFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ClearEventFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ClearEventFlag), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_GetSlaveMatchAddress), (4 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_GetSlaveMatchAddress), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_SendSBUF), (6 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_SendSBUF), (8 bytes).
    Removing mg32x02z_i2c_drv.o(.text.I2C_ReceiveSBUF), (6 bytes).
    Removing mg32x02z_i2c_drv.o(.ARM.exidx.text.I2C_ReceiveSBUF), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text), (0 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Divider_Select), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_GetCounter), (12 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetCounter), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_RefreshCounter), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_StopModeWakeUpEvent_Config), (24 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_StopModeWakeUpEvent_Config), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_Cmd), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_GetSingleFlagStatus), (14 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_ClearFlag), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_ClearFlag), (8 bytes).
    Removing mg32x02z_iwdt_drv.o(.text.IWDT_IT_Config), (24 bytes).
    Removing mg32x02z_iwdt_drv.o(.ARM.exidx.text.IWDT_IT_Config), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text), (0 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetFlagStatus), (16 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetFlagStatus), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ClearFlag), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ClearFlag), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_Cmd), (40 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_HSP_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_HSP_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetFlashWaitState), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetFlashWaitState), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_IT_Cmd), (52 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IT_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ITEA_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ErrorReset_Cmd), (52 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorReset_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ErrorHardFault_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ErrorHardFault_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_WriteFlashHold_Cmd), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_WriteFlashHold_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetAllAccessState), (20 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAllAccessState), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetAccessState), (20 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetAccessState), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_Access_Cmd), (52 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_Access_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetWriteMode), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteMode), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetWriteUnProtect), (112 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetWriteUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetSinglePageEraseUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSinglePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetMultiplePageEraseUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultiplePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetSingleProgramUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetSingleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetMultipleProgramUnProtect), (44 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetMultipleWriteProtect), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetMultipleWriteProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_APWrite_Cmd), (60 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_APWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetIAPSize), (12 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetIAPSize), (8 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSize), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetIAPSizeLock), (40 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetIAPSizeLock), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_IAPExecuteCode_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPExecuteCode_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_IAPWrite_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_IAPWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPDRead_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDRead_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPDWrite_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPDWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_GetISPSize), (12 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_GetISPSize), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPRead_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPRead_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_ISPWrite_Cmd), (64 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_ISPWrite_Cmd), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPSinglePageEraseUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSinglePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPMultiplePageEraseUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultiplePageEraseUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPSingleProgramUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPSingleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleProgramUnProtect), (72 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleProgramUnProtect), (8 bytes).
    Removing mg32x02z_mem_drv.o(.text.MEM_SetISPMultipleWriteProtect), (36 bytes).
    Removing mg32x02z_mem_drv.o(.ARM.exidx.text.MEM_SetISPMultipleWriteProtect), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text), (0 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_STOPModeLDO_Select), (20 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_STOPModeLDO_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_ONModeLDO_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ONModeLDO_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD1Threshold_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Threshold_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD1Trigger_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1Trigger_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD1_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD1_Cmd), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_VoltageBuffer), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_VoltageBuffer), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_BOD0_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_BOD0_Cmd), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetBod1Status), (16 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetBod1Status), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_PeriphSLEEPModeContinuous_Config), (28 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSLEEPModeContinuous_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeContinuous_Config), (28 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeContinuous_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_PeriphSTOPModeWakeUp_Config), (64 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_PeriphSTOPModeWakeUp_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_WakeUpDelay_Select), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_WakeUpDelay_Select), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetWakeUpMode), (28 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetWakeUpMode), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetSingleFlagStatus), (16 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_ClearFlag), (12 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ClearFlag), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_IT_Config), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_IT_Config), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_GetITStatus), (12 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_GetITStatus), (8 bytes).
    Removing mg32x02z_pw_drv.o(.text.PW_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_pw_drv.o(.ARM.exidx.text.PW_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text), (0 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_GetSingleFlagStatus), (14 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_ClearFlag), (8 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ClearFlag), (8 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_CRstSource_Config), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_WRstSource_Config), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstSource_Config), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_WRstGPIOLock_Config), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WRstGPIOLock_Config), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_ForceRstPeriph_SW), (100 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_ForceRstPeriph_SW), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_TriggerSystemRst_SW), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_TriggerSystemRst_SW), (8 bytes).
    Removing mg32x02z_rst_drv.o(.text.RST_WWDTWRstMask_Cmd), (24 bytes).
    Removing mg32x02z_rst_drv.o(.ARM.exidx.text.RST_WWDTWRstMask_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text), (0 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_CLK_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_CLK_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_PreDivider_Select), (20 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_PreDivider_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_Divider_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Divider_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetAlarmCompareValue), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmCompareValue), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_SetAlarmCompareValue), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetAlarmCompareValue), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetAlarmState), (16 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAlarmState), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_Alarm_Cmd), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Alarm_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetReloadReg), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetReloadReg), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetCaptureReg), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetCaptureReg), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_SetReloadReg), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_SetReloadReg), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_Cmd), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_RCR_Mode_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_RCR_Mode_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_StopModeWakeUpEvent_Config), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_StopModeWakeUpEvent_Config), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_OutputSignal_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_OutputSignal_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_InitOutputSignalState_Cmd), (32 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_InitOutputSignalState_Cmd), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_Select), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_Select), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_TriggerStamp_SW), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_TriggerStamp_SW), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_GetSingleFlagStatus), (16 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_ClearFlag), (12 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_IT_Config), (20 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_IT_Config), (8 bytes).
    Removing mg32x02z_rtc_drv.o(.text.RTC_ITEA_Cmd), (24 bytes).
    Removing mg32x02z_rtc_drv.o(.ARM.exidx.text.RTC_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text), (0 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DeInit), (28 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Clock_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Clock_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_PreDivider_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_PreDivider_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Prescaler_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Prescaler_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Divider_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Divider_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_TriggerClockToggle), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TriggerClockToggle), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DualTransferRate_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DualTransferRate_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveHighSpeed_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveHighSpeed_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ModeAndNss_Select), (18 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModeAndNss_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ModfHappenedAction_Select), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ModfHappenedAction_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NSSInputSignal_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputSignal_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SingleMasterModeNssPulse_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SingleMasterModeNssPulse_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssInputInverse_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputInverse_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssOutputInverse_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputInverse_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssInputOutputSoftwareControl_Cmd), (30 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputOutputSoftwareControl_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssInputSoftwareControl_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssInputSoftwareControl_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssOutputSoftwareControl_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssOutputSoftwareControl_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetNSSInputStatust), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetNSSInputStatust), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NSSInputStatusControl_SW), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSInputStatusControl_SW), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NSSOutputStatusControl_SW), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NSSOutputStatusControl_SW), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_NssIdleTime_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_NssIdleTime_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClockPhase_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPhase_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClockPolarity_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockPolarity_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_FirstBit_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_FirstBit_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetRxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClearRxData), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearRxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetDataBufferReceivedBytes), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetDataBufferReceivedBytes), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SetDataBufferReceivedBytes), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetDataBufferReceivedBytes), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClearTxData), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearTxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetTxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxShadowBufferLevel), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetRxData), (4 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetRxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SetTxData), (46 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SetTxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetTxData), (4 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetTxData), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveModeReceivedThreshold_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveModeReceivedThreshold_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DataSize_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataSize_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DataLine_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLine_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_DataLineOutput_Cmd), (18 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_DataLineOutput_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SendCopyMode_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SendCopyMode_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_BidirectionalOutput_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_BidirectionalOutput_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_TransferBidirection_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TransferBidirection_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_MosiMisoSignalSwap_Cmd), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_MosiMisoSignalSwap_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_LoopBackMode_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_LoopBackMode_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClockOutputSignal_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClockOutputSignal_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_IdleStateDataMode_Select), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IdleStateDataMode_Select), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveAutoFullDuplex_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveAutoFullDuplex_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveSendDataDirectUpdate_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveSendDataDirectUpdate_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_SlaveDataReadShadowBufferTriggerToUpload_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_TXDMA_Cmd), (14 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_TXDMA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_RXDMA_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMA_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_RXDMAPreCatch_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_RXDMAPreCatch_Cmd), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetAllFlagStatus), (6 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ClearFlag), (4 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_IT_Config), (20 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_IT_Config), (8 bytes).
    Removing mg32x02z_spi_drv.o(.text.SPI_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_spi_drv.o(.ARM.exidx.text.SPI_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text), (0 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_ITEA_Cmd), (16 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_GetChipMID), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_GetChipMID), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_ReadGeneralReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadGeneralReg), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_WriteGeneralReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteGeneralReg), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_ReadBackupReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_ReadBackupReg), (8 bytes).
    Removing mg32x02z_sys_drv.o(.text.SYS_WriteBackupReg), (12 bytes).
    Removing mg32x02z_sys_drv.o(.ARM.exidx.text.SYS_WriteBackupReg), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text), (0 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_DeInit), (68 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DeInit), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBaseStruct_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimeBase_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Prescaler_Config), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Counter_Config), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TimerMode_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TimerMode_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CounterClock_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CounterClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PrescalerClock_Select), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PrescalerClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetInternalClockDivider), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetInternalClockDivider), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCounterDirection), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCounterDirection), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetPrescalerDirection), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetPrescalerDirection), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InternalClockSource_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalClockSource_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExternalClock_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalClock_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ITRx_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITRx_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCounter), (4 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCounter), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Counter_Cmd), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Counter_SW), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Counter_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetPrescaler), (4 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetPrescaler), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Prescaler_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_Prescaler_SW), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Prescaler_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_Timer_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GatePrescaler_SW), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GatePrescaler_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GateCounter_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GateCounter_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ResetPrescaler_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetPrescaler_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ResetCounter_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ResetCounter_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TriggerSource_Select), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TriggerSource_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGICounter_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGICounter_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGIPrescaler_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGIPrescaler_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_UEV_Config), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGOOut_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGOOut_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_TRGO_Select), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_TRGO_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseTRGO_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseTRGO_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN0Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN0TriggerEvent_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN0TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN1Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN1TriggerEvent_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN1TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN2Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN2TriggerEvent_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN2TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN3Source_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3Source_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IN3TriggerEvent_Select), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IN3TriggerEvent_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ClockOutSource_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOutSource_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ClockOut_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClockOut_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CKOOutputState_Init), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CKOOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC0z_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0z_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0zOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0zBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0zOutput_Cmd), (44 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0zOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC00Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC00Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC01Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC01Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC02Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC02Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC0N_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0N_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0NOutput_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0NBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0NBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC0H_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC0H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC1z_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1z_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1zOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1zBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1zOutput_Cmd), (46 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1zOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC10Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC10Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC11Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC11Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC12Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC12Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC1N_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1N_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1NOutput_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1NBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1NBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC1H_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC1H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC2_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2OutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2OutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2BreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC2N_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2N_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2NOutput_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NOutput_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2NBreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2NBreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC2H_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC2H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC3_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3OutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3OutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3BreakStopState_Init), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakStopState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3Output_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3Output_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseOC3H_Cmd), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseOC3H_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3HOutputState_Init), (26 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3HOutputState_Init), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExternalBreakEvent_Config), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExternalBreakEvent_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InternalBreakEvent_Config), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InternalBreakEvent_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakTrigger_SW), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakTrigger_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakCH3_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH3_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakCH012_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakCH012_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_BreakMode_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_BreakMode_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC0BreakControl_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC0BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC1BreakControl_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC1BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC2BreakControl_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC2BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OC3BreakControl_Select), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OC3BreakControl_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadEventSource_Config), (24 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadEventSource_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadActive_SW), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadActive_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadOC0z_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC0z_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_PreloadOC1z_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_PreloadOC1z_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH0Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH0Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH1Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH1Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH2Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH2Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_CH3Function_Config), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_CH3Function_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_OutputDelayMode_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_OutputDelayMode_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC0Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC0Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC1Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC1Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC2Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC2Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetIC3Value), (22 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetIC3Value), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC0OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC0OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC1OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC1OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC2OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC2OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_IC3OverWritten_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IC3OverWritten_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC0_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC0_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC1_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC1_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC2_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC2_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RisingCaptureIC3_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RisingCaptureIC3_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC0_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC0_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC1_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC1_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC2_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC2_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_FallingCaptureIC3_SW), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_FallingCaptureIC3_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC0A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC1A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC2A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC3A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC0B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC0B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC1B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC1B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC2B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC2B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetCC3B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetCC3B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC0A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC1A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC2A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC3A), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3A), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC0B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC0B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC1B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC1B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC2B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC2B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetCC3B), (6 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetCC3B), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF0A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF1A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF2A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF3A_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3A_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF0B_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF0B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF1B_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF1B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF2B_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF2B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GenerateCF3B_SW), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GenerateCF3B_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ReloadFromCCxB_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ReloadFromCCxB_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_AlignmentMode_Select), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AlignmentMode_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_QEI_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEI_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_QEIReset_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIReset_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_QEIResetIDX_Select), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_QEIResetIDX_Select), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseQEIDirection), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseQEIDirection), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_AutoStop_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_AutoStop_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_RepeatAutoStopMode_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_RepeatAutoStopMode_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetDeadZoneClockDivider), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadZoneClockDivider), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_SetDeadTime), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_SetDeadTime), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_IT_Config), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetSingleFlagStatus), (10 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_GetAllFlagStatus), (4 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ClearFlag), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExtTRGI_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_InverseExtTRGI_Cmd), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_InverseExtTRGI_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ExtTRGI2UEV_Cmd), (14 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ExtTRGI2UEV_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_ForceUpdate_SW), (16 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_ForceUpdate_SW), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_UEV_Cmd), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_UEV_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_DMAChannel_Cmd), (20 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAChannel_Cmd), (8 bytes).
    Removing mg32x02z_tm_drv.o(.text.TM_DMAUpdateMode_Select), (18 bytes).
    Removing mg32x02z_tm_drv.o(.ARM.exidx.text.TM_DMAUpdateMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text), (0 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IT_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetITStatus), (4 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ITEA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetITAllFlagStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITAllFlagStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetITSingleFlagStatus), (24 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetITSingleFlagStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearITFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxDifferentFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxDifferentFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxHoldFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxHoldFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ClearRxHoldFlag), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRxHoldFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetIrDaBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetIrDaBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBreakBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBreakBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxBusyFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRxNoiseFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRxNoiseFlag), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DataCharacter_Config), (58 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataCharacter_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_Mode_Select), (32 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DataLine_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DataLine_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_HalfDuplexMode_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_HalfDuplexMode_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_LoopBackMode_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_LoopBackMode_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TX_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TX_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RX_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RX_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NoiseDataSkip_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NoiseDataSkip_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Config), (56 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorMode_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGeneratorClock_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGeneratorClock_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPreReload), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPreReload), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCountReload), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCountReload), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorPre), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorPre), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetBaudRateGeneratorCount), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetBaudRateGeneratorCount), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BaudRateGenerator_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BaudRateGenerator_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CLKSignalSource_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignalSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CLKSignal_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CLKSignal_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlBROSignalStatus_SW), (22 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlBROSignalStatus_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlCLKSignalStatus_SW), (22 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlCLKSignalStatus_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXOverSamplingSampleNumber_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXOverSamplingSampleNumber_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXOverSamplingSampleNumber_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingSampleNumber_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXOverSamplingMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXOverSamplingMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TimeroutTimer_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeroutTimer_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TriggerTimeoutTimerRst_SW), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TriggerTimeoutTimerRst_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TimeoutMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TimeoutTimerClockSource_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TimeoutTimerClockSource_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IdleDetect_Select), (4 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleDetect_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IdleTimeoutDetect_Config), (28 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdleTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXTimeoutDetect_Config), (28 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BreakTimeoutDetect_Config), (44 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CalibrationTimeoutDetect_Config), (44 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationTimeoutDetect_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlTMOSignalStatus_SW), (22 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlTMOSignalStatus_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerCounter), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerCounter), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCounter), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCounter), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTimeoutTimerReload), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTimeoutTimerReload), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetTimeoutTimerCompare), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTimeoutTimerCompare), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShadowBufferLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ClearTXData), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearTXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ClearRXData), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ClearRXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTXDataRegLevel), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXDataRegLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXShadowBufferThreshold_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXShadowBufferThreshold_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXDataRegLevel), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXDataRegLevel), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCaptureData), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCaptureStatusBit), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCaptureStatusBit), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferStatusBit), (10 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferStatusBit), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetTXShiftBufferData), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetTXShiftBufferData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetRXShiftBufferData), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetRXShiftBufferData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RTS_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTS_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RTSInverse_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RTSInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlRTS_SW), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlRTS_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CTS_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTS_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCTSLineStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCTSLineStatus), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CTSInverse_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CTSInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DE_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DE_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DEInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_DEGuardTime_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_DEGuardTime_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IdlehandleMode_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IdlehandleMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXHalt_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXHalt_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXGuardTime_Select), (4 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXGuardTime_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetTXData), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CPHAMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPHAMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CPOLMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CPOLMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NssInverse_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssInverse_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_NssSW_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_NssSW_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CtrlNSS_SW), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CtrlNSS_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetSlaveAddressMask), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddressMask), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SetSlaveAddress), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SetSlaveAddress), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GlobalAddress_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GlobalAddress_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SendAddress), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendAddress), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CalibrationMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_AutoCalibration_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoCalibration_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_Calibration_SW), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Calibration_SW), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_CalibrationCompleteDataHold_Cmd), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_CalibrationCompleteDataHold_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ExtraBreakBit_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExtraBreakBit_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_SendBreak), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_SendBreak), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_GetCalibrationResult), (38 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_GetCalibrationResult), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXDMA_Cmd), (72 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXDMA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXDMA_Cmd), (70 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXDMA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_BreakDisableDMA_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_BreakDisableDMA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IrDA_Config), (18 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_IrDA_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_IrDA_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_AutoExitMuteMode_Select), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoExitMuteMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_AutoEnterMuteMode_Select), (6 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_AutoEnterMuteMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_Mute_Cmd), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_Mute_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RXParityError_Config), (28 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RXParityError_Config), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXErrorDetectMode_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorDetectMode_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_TXErrorResendTime_Select), (14 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_TXErrorResendTime_Select), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_RxTxSwap_Cmd), (16 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_RxTxSwap_Cmd), (8 bytes).
    Removing mg32x02z_urt_drv.o(.text.URT_ExternalClockMux_Select), (12 bytes).
    Removing mg32x02z_urt_drv.o(.ARM.exidx.text.URT_ExternalClockMux_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text), (0 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_CLK_Select), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_CLK_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_DIV_Select), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_DIV_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_PDIV_Select), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_PDIV_Select), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_Cmd), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_Cmd), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetCounter), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetCounter), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_RefreshCounter), (16 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RefreshCounter), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetReloadReg), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetReloadReg), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_SetReloadReg), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetReloadReg), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetWindowThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWindowThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_SetWindowThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWindowThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetWarningThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetWarningThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_SetWarningThreshold), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_SetWarningThreshold), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_RstEvent_Config), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_RstEvent_Config), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetAllFlagStatus), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetAllFlagStatus), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_GetSingleFlagStatus), (16 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_GetSingleFlagStatus), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_ClearFlag), (12 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_ClearFlag), (8 bytes).
    Removing mg32x02z_wwdt_drv.o(.text.WWDT_IT_Config), (24 bytes).
    Removing mg32x02z_wwdt_drv.o(.ARM.exidx.text.WWDT_IT_Config), (8 bytes).
    Removing mg32x02z__common_drv.o(.text), (0 bytes).
    Removing mg32x02z__common_drv.o(.text.InitTick), (72 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.InitTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.IncTick), (16 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.IncTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.GetTick), (12 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.GetTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.Delay), (36 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.SuspendTick), (16 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.SuspendTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.ResumeTick), (16 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.ResumeTick), (8 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.ProtectModuleReg), (8 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.UnProtectModuleReg), (8 bytes).
    Removing mg32x02z__common_drv.o(.text.LockModuleReg), (12 bytes).
    Removing mg32x02z__common_drv.o(.ARM.exidx.text.LockModuleReg), (8 bytes).
    Removing mg32x02z__common_drv.o(.bss.uwTick), (4 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

1648 unused section(s) (total 24863 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcmp.c         0x00000000   Number         0  memcmp.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    MG32x02z_ADC_DRV.c                       0x00000000   Number         0  mg32x02z_adc_drv.o ABSOLUTE
    MG32x02z_APB_DRV.c                       0x00000000   Number         0  mg32x02z_apb_drv.o ABSOLUTE
    MG32x02z_CFG_DRV.c                       0x00000000   Number         0  mg32x02z_cfg_drv.o ABSOLUTE
    MG32x02z_CM0_DRV.c                       0x00000000   Number         0  mg32x02z_cm0_drv.o ABSOLUTE
    MG32x02z_CMP_DRV.c                       0x00000000   Number         0  mg32x02z_cmp_drv.o ABSOLUTE
    MG32x02z_CSC_DRV.c                       0x00000000   Number         0  mg32x02z_csc_drv.o ABSOLUTE
    MG32x02z_CSC_Init.c                      0x00000000   Number         0  mg32x02z_csc_init.o ABSOLUTE
    MG32x02z_ChipInit.c                      0x00000000   Number         0  mg32x02z_chipinit.o ABSOLUTE
    MG32x02z_DMA_DRV.c                       0x00000000   Number         0  mg32x02z_dma_drv.o ABSOLUTE
    MG32x02z_EXIC_DRV.c                      0x00000000   Number         0  mg32x02z_exic_drv.o ABSOLUTE
    MG32x02z_GPIO_DRV.c                      0x00000000   Number         0  mg32x02z_gpio_drv.o ABSOLUTE
    MG32x02z_GPL_DRV.c                       0x00000000   Number         0  mg32x02z_gpl_drv.o ABSOLUTE
    MG32x02z_I2C_DRV.c                       0x00000000   Number         0  mg32x02z_i2c_drv.o ABSOLUTE
    MG32x02z_IWDT_DRV.c                      0x00000000   Number         0  mg32x02z_iwdt_drv.o ABSOLUTE
    MG32x02z_MEM_DRV.c                       0x00000000   Number         0  mg32x02z_mem_drv.o ABSOLUTE
    MG32x02z_PW_DRV.c                        0x00000000   Number         0  mg32x02z_pw_drv.o ABSOLUTE
    MG32x02z_RST_DRV.c                       0x00000000   Number         0  mg32x02z_rst_drv.o ABSOLUTE
    MG32x02z_RTC_DRV.c                       0x00000000   Number         0  mg32x02z_rtc_drv.o ABSOLUTE
    MG32x02z_SPI_DRV.c                       0x00000000   Number         0  mg32x02z_spi_drv.o ABSOLUTE
    MG32x02z_SYS_DRV.c                       0x00000000   Number         0  mg32x02z_sys_drv.o ABSOLUTE
    MG32x02z_TM_DRV.c                        0x00000000   Number         0  mg32x02z_tm_drv.o ABSOLUTE
    MG32x02z_URT_DRV.c                       0x00000000   Number         0  mg32x02z_urt_drv.o ABSOLUTE
    MG32x02z_WWDT_DRV.c                      0x00000000   Number         0  mg32x02z_wwdt_drv.o ABSOLUTE
    MG32x02z__Common_DRV.c                   0x00000000   Number         0  mg32x02z__common_drv.o ABSOLUTE
    RTE/Device/MG32F02A032/startup_MG32x02z.s 0x00000000   Number         0  startup_mg32x02z.o ABSOLUTE
    buffer.c                                 0x00000000   Number         0  buffer.o ABSOLUTE
    bus.c                                    0x00000000   Number         0  bus.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    crc.c                                    0x00000000   Number         0  crc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    events.c                                 0x00000000   Number         0  events.o ABSOLUTE
    flash.c                                  0x00000000   Number         0  flash.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    iap.c                                    0x00000000   Number         0  iap.o ABSOLUTE
    ibutton.c                                0x00000000   Number         0  ibutton.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    keys.c                                   0x00000000   Number         0  keys.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    md5.c                                    0x00000000   Number         0  md5.o ABSOLUTE
    onewire.c                                0x00000000   Number         0  onewire.o ABSOLUTE
    skud_algo.c                              0x00000000   Number         0  skud_algo.o ABSOLUTE
    system_MG32x02z.c                        0x00000000   Number         0  system_mg32x02z.o ABSOLUTE
    tests.c                                  0x00000000   Number         0  tests.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    variables.c                              0x00000000   Number         0  variables.o ABSOLUTE
    wdt.c                                    0x00000000   Number         0  wdt.o ABSOLUTE
    RESET                                    0x00000000   Section      192  startup_mg32x02z.o(RESET)
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       60  startup_mg32x02z.o(.text)
    .text                                    0x00000110   Section        0  memcpya.o(.text)
    .text                                    0x00000134   Section        0  memseta.o(.text)
    .text                                    0x00000158   Section        0  memcmp.o(.text)
    .text                                    0x00000172   Section        0  uidiv_div0.o(.text)
    .text                                    0x000001b0   Section        0  uldiv.o(.text)
    .text                                    0x00000210   Section       36  init.o(.text)
    .text                                    0x00000234   Section        0  semi.o(.text)
    .text                                    0x00000234   Section        0  llshl.o(.text)
    .text                                    0x00000254   Section        0  llushr.o(.text)
    .text                                    0x00000276   Section        0  iusesemip.o(.text)
    .text                                    0x00000276   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x000002b0   Section        0  flash.o(.text.ActivateKey)
    [Anonymous Symbol]                       0x00000350   Section        0  flash.o(.text.AddKey)
    __arm_cp.1_0                             0x0000046c   Number         4  flash.o(.text.AddKey)
    __arm_cp.1_1                             0x00000470   Number         4  flash.o(.text.AddKey)
    __arm_cp.1_2                             0x00000474   Number         4  flash.o(.text.AddKey)
    __arm_cp.1_3                             0x00000478   Number         4  flash.o(.text.AddKey)
    __arm_cp.1_4                             0x0000047c   Number         4  flash.o(.text.AddKey)
    [Anonymous Symbol]                       0x00000480   Section        0  bus.o(.text.Bus_AddNewByte)
    __arm_cp.0_4                             0x000004dc   Number         4  bus.o(.text.Bus_AddNewByte)
    [Anonymous Symbol]                       0x000004e0   Section        0  bus.o(.text.Bus_ClearBuffer)
    __arm_cp.7_0                             0x000004f8   Number         4  bus.o(.text.Bus_ClearBuffer)
    __arm_cp.7_2                             0x000004fc   Number         4  bus.o(.text.Bus_ClearBuffer)
    __arm_cp.7_3                             0x00000500   Number         4  bus.o(.text.Bus_ClearBuffer)
    [Anonymous Symbol]                       0x00000504   Section        0  bus.o(.text.Bus_ParseMessage)
    __arm_cp.1_0                             0x00000568   Number         4  bus.o(.text.Bus_ParseMessage)
    [Anonymous Symbol]                       0x0000056c   Section        0  bus.o(.text.Bus_ParseReadRequest)
    __arm_cp.4_2                             0x00000620   Number         4  bus.o(.text.Bus_ParseReadRequest)
    [Anonymous Symbol]                       0x00000624   Section        0  bus.o(.text.Bus_ParseWriteRequest24)
    [Anonymous Symbol]                       0x000006ac   Section        0  bus.o(.text.Bus_ParseWriteRequest9)
    __arm_cp.2_0                             0x00000748   Number         4  bus.o(.text.Bus_ParseWriteRequest9)
    __arm_cp.2_1                             0x0000074c   Number         4  bus.o(.text.Bus_ParseWriteRequest9)
    __arm_cp.2_2                             0x00000750   Number         4  bus.o(.text.Bus_ParseWriteRequest9)
    __arm_cp.2_3                             0x00000754   Number         4  bus.o(.text.Bus_ParseWriteRequest9)
    [Anonymous Symbol]                       0x00000758   Section        0  crc.o(.text.CRCisWrong)
    __arm_cp.1_0                             0x0000077c   Number         4  crc.o(.text.CRCisWrong)
    [Anonymous Symbol]                       0x00000780   Section        0  mg32x02z_csc_drv.o(.text.CSC_ClearFlag)
    [Anonymous Symbol]                       0x00000788   Section        0  mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState)
    __arm_cp.24_0                            0x00000794   Number         4  mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState)
    [Anonymous Symbol]                       0x00000798   Section        0  mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd)
    [Anonymous Symbol]                       0x000007ac   Section        0  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_1                             0x00000a04   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_2                             0x00000a08   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_3                             0x00000a0c   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_4                             0x00000a10   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_5                             0x00000a14   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_6                             0x00000a18   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_7                             0x00000a1c   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    __arm_cp.3_8                             0x00000a20   Number         4  mg32x02z_csc_init.o(.text.CSC_Init)
    [Anonymous Symbol]                       0x00000a24   Section        0  mg32x02z_chipinit.o(.text.ChipInit)
    __arm_cp.0_0                             0x00000a34   Number         4  mg32x02z_chipinit.o(.text.ChipInit)
    [Anonymous Symbol]                       0x00000a38   Section        0  ibutton.o(.text.DS1990A_GetKeyID)
    __arm_cp.0_0                             0x00000a74   Number         4  ibutton.o(.text.DS1990A_GetKeyID)
    [Anonymous Symbol]                       0x00000a78   Section        0  flash.o(.text.DoCommand)
    __arm_cp.12_1                            0x00000b7c   Number         4  flash.o(.text.DoCommand)
    [Anonymous Symbol]                       0x00000b80   Section        0  crc.o(.text.Do_CRC)
    __arm_cp.0_0                             0x00000b9c   Number         4  crc.o(.text.Do_CRC)
    [Anonymous Symbol]                       0x00000ba0   Section        0  flash.o(.text.FlashFirstInit)
    __arm_cp.2_0                             0x00000d0c   Number         4  flash.o(.text.FlashFirstInit)
    __arm_cp.2_1                             0x00000d10   Number         4  flash.o(.text.FlashFirstInit)
    __arm_cp.2_2                             0x00000d14   Number         4  flash.o(.text.FlashFirstInit)
    __arm_cp.2_3                             0x00000d18   Number         4  flash.o(.text.FlashFirstInit)
    __arm_cp.2_4                             0x00000d1c   Number         4  flash.o(.text.FlashFirstInit)
    __arm_cp.2_5                             0x00000d20   Number         4  flash.o(.text.FlashFirstInit)
    __arm_cp.2_6                             0x00000d24   Number         4  flash.o(.text.FlashFirstInit)
    [Anonymous Symbol]                       0x00000d28   Section        0  gpio.o(.text.GPIO_Config)
    __arm_cp.5_0                             0x00000f9c   Number         4  gpio.o(.text.GPIO_Config)
    __arm_cp.5_1                             0x00000fa0   Number         4  gpio.o(.text.GPIO_Config)
    __arm_cp.5_2                             0x00000fa4   Number         4  gpio.o(.text.GPIO_Config)
    [Anonymous Symbol]                       0x00000fa8   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select)
    __arm_cp.8_0                             0x00000fbc   Number         4  mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select)
    [Anonymous Symbol]                       0x00000fc0   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd)
    [Anonymous Symbol]                       0x00000fd0   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select)
    [Anonymous Symbol]                       0x00000fe2   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd)
    [Anonymous Symbol]                       0x00000ff0   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select)
    [Anonymous Symbol]                       0x00001002   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select)
    [Anonymous Symbol]                       0x00001014   Section        0  mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd)
    [Anonymous Symbol]                       0x00001024   Section        0  flash.o(.text.GetVariable)
    __arm_cp.4_0                             0x00001038   Number         4  flash.o(.text.GetVariable)
    [Anonymous Symbol]                       0x0000103c   Section        0  skud_algo.o(.text.HandleEvent)
    __arm_cp.19_0                            0x0000106c   Number         4  skud_algo.o(.text.HandleEvent)
    __arm_cp.19_1                            0x00001070   Number         4  skud_algo.o(.text.HandleEvent)
    [Anonymous Symbol]                       0x00001074   Section        0  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_0                             0x00001100   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_1                             0x00001104   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_2                             0x00001108   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_3                             0x0000110c   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_4                             0x00001110   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_5                             0x00001114   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_6                             0x00001118   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_7                             0x0000111c   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_8                             0x00001120   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_9                             0x00001124   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    __arm_cp.2_10                            0x00001128   Number         4  system_mg32x02z.o(.text.HardFault_Handler_C)
    [Anonymous Symbol]                       0x000011bc   Section        0  iap.o(.text.IAP_CopyFromIAPToRAM)
    [Anonymous Symbol]                       0x000011d4   Section        0  iap.o(.text.IAP_Erase_OnePage)
    [Anonymous Symbol]                       0x00001258   Section        0  iap.o(.text.IAP_Init)
    __arm_cp.0_0                             0x0000128c   Number         4  iap.o(.text.IAP_Init)
    [Anonymous Symbol]                       0x00001290   Section        0  iap.o(.text.IAP_IsEqualToRAM)
    [Anonymous Symbol]                       0x000012a4   Section        0  iap.o(.text.IAP_Multiple_Write)
    __arm_cp.9_3                             0x00001360   Number         4  iap.o(.text.IAP_Multiple_Write)
    [Anonymous Symbol]                       0x00001364   Section        0  iap.o(.text.IAP_ReadByte)
    [Anonymous Symbol]                       0x00001370   Section        0  iap.o(.text.IAP_ReadWord)
    [Anonymous Symbol]                       0x0000137e   Section        0  iap.o(.text.IAP_WriteMultipleWord)
    [Anonymous Symbol]                       0x00001398   Section        0  iap.o(.text.IAP_WriteSingleWord)
    __arm_cp.6_0                             0x0000142c   Number         4  iap.o(.text.IAP_WriteSingleWord)
    __arm_cp.6_1                             0x00001430   Number         4  iap.o(.text.IAP_WriteSingleWord)
    __arm_cp.6_2                             0x00001434   Number         4  iap.o(.text.IAP_WriteSingleWord)
    [Anonymous Symbol]                       0x00001438   Section        0  mg32x02z_iwdt_drv.o(.text.IWDT_Cmd)
    __arm_cp.4_0                             0x0000144c   Number         4  mg32x02z_iwdt_drv.o(.text.IWDT_Cmd)
    [Anonymous Symbol]                       0x00001450   Section        0  mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select)
    __arm_cp.0_0                             0x00001460   Number         4  mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select)
    [Anonymous Symbol]                       0x00001464   Section        0  mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter)
    __arm_cp.2_0                             0x0000146c   Number         4  mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter)
    __arm_cp.2_1                             0x00001470   Number         4  mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter)
    [Anonymous Symbol]                       0x00001474   Section        0  skud_algo.o(.text.IsKeyActive)
    __arm_cp.20_0                            0x000014d0   Number         4  skud_algo.o(.text.IsKeyActive)
    __arm_cp.20_1                            0x000014d4   Number         4  skud_algo.o(.text.IsKeyActive)
    __arm_cp.20_2                            0x000014d8   Number         4  skud_algo.o(.text.IsKeyActive)
    [Anonymous Symbol]                       0x000014dc   Section        0  md5.o(.text.MD5_Final)
    [Anonymous Symbol]                       0x0000159c   Section        0  md5.o(.text.MD5_MakeHash)
    __arm_cp.4_0                             0x00001608   Number         4  md5.o(.text.MD5_MakeHash)
    __arm_cp.4_1                             0x0000160c   Number         4  md5.o(.text.MD5_MakeHash)
    __arm_cp.4_2                             0x00001610   Number         4  md5.o(.text.MD5_MakeHash)
    __arm_cp.4_3                             0x00001614   Number         4  md5.o(.text.MD5_MakeHash)
    [Anonymous Symbol]                       0x00001618   Section        0  mg32x02z_mem_drv.o(.text.MEM_SetIAPSize)
    __arm_cp.23_0                            0x00001680   Number         4  mg32x02z_mem_drv.o(.text.MEM_SetIAPSize)
    [Anonymous Symbol]                       0x00001684   Section        0  onewire.o(.text.OneWire_Read)
    [Anonymous Symbol]                       0x000016dc   Section        0  onewire.o(.text.OneWire_SetDirection)
    [Anonymous Symbol]                       0x000016e8   Section        0  onewire.o(.text.OneWire_Start)
    [Anonymous Symbol]                       0x00001738   Section        0  onewire.o(.text.OneWire_Write)
    __arm_cp.2_0                             0x000017a4   Number         4  onewire.o(.text.OneWire_Write)
    __arm_cp.2_1                             0x000017a8   Number         4  onewire.o(.text.OneWire_Write)
    [Anonymous Symbol]                       0x000017ac   Section        0  mg32x02z__common_drv.o(.text.ProtectModuleReg)
    [Anonymous Symbol]                       0x000017b4   Section        0  mg32x02z_rst_drv.o(.text.RST_CRstSource_Config)
    __arm_cp.3_0                             0x000017c8   Number         4  mg32x02z_rst_drv.o(.text.RST_CRstSource_Config)
    [Anonymous Symbol]                       0x000017cc   Section        0  flash.o(.text.SetVariable)
    [Anonymous Symbol]                       0x00001840   Section        0  flash.o(.text.SetVariablePack)
    __arm_cp.9_0                             0x00001928   Number         4  flash.o(.text.SetVariablePack)
    __arm_cp.9_1                             0x0000192c   Number         4  flash.o(.text.SetVariablePack)
    __arm_cp.9_2                             0x00001930   Number         4  flash.o(.text.SetVariablePack)
    [Anonymous Symbol]                       0x00001934   Section        0  system_mg32x02z.o(.text.SystemInit)
    __arm_cp.1_0                             0x0000193c   Number         4  system_mg32x02z.o(.text.SystemInit)
    __arm_cp.1_1                             0x00001940   Number         4  system_mg32x02z.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001944   Section        0  timers.o(.text.TIM00_Callback)
    __arm_cp.0_0                             0x000019bc   Number         4  timers.o(.text.TIM00_Callback)
    __arm_cp.0_1                             0x000019c0   Number         4  timers.o(.text.TIM00_Callback)
    __arm_cp.0_2                             0x000019c4   Number         4  timers.o(.text.TIM00_Callback)
    __arm_cp.0_3                             0x000019c8   Number         4  timers.o(.text.TIM00_Callback)
    __arm_cp.0_4                             0x000019cc   Number         4  timers.o(.text.TIM00_Callback)
    __arm_cp.0_5                             0x000019d0   Number         4  timers.o(.text.TIM00_Callback)
    [Anonymous Symbol]                       0x000019d4   Section        0  timers.o(.text.TIM_Config)
    __arm_cp.5_1                             0x00001ae0   Number         4  timers.o(.text.TIM_Config)
    __arm_cp.5_5                             0x00001ae4   Number         4  timers.o(.text.TIM_Config)
    __arm_cp.5_6                             0x00001ae8   Number         4  timers.o(.text.TIM_Config)
    [Anonymous Symbol]                       0x00001aec   Section        0  timers.o(.text.TM0x_IRQHandler)
    __arm_cp.6_0                             0x00001b34   Number         4  timers.o(.text.TM0x_IRQHandler)
    __arm_cp.6_1                             0x00001b38   Number         4  timers.o(.text.TM0x_IRQHandler)
    __arm_cp.6_2                             0x00001b3c   Number         4  timers.o(.text.TM0x_IRQHandler)
    __arm_cp.6_3                             0x00001b40   Number         4  timers.o(.text.TM0x_IRQHandler)
    [Anonymous Symbol]                       0x00001b44   Section        0  timers.o(.text.TM10_IRQHandler)
    __arm_cp.7_0                             0x00001b78   Number         4  timers.o(.text.TM10_IRQHandler)
    __arm_cp.7_1                             0x00001b7c   Number         4  timers.o(.text.TM10_IRQHandler)
    [Anonymous Symbol]                       0x00001b80   Section        0  timers.o(.text.TM1x_IRQHandler)
    __arm_cp.8_0                             0x00001bb0   Number         4  timers.o(.text.TM1x_IRQHandler)
    [Anonymous Symbol]                       0x00001bb4   Section        0  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_0                             0x00001c24   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_1                             0x00001c28   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_2                             0x00001c2c   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_3                             0x00001c30   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_4                             0x00001c34   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_5                             0x00001c38   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_6                             0x00001c3c   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_7                             0x00001c40   Number         4  timers.o(.text.TM3x_IRQHandler)
    __arm_cp.9_8                             0x00001c44   Number         4  timers.o(.text.TM3x_IRQHandler)
    [Anonymous Symbol]                       0x00001c48   Section        0  mg32x02z_tm_drv.o(.text.TM_ClearFlag)
    [Anonymous Symbol]                       0x00001c4c   Section        0  mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd)
    [Anonymous Symbol]                       0x00001c5c   Section        0  mg32x02z_tm_drv.o(.text.TM_IT_Config)
    [Anonymous Symbol]                       0x00001c70   Section        0  mg32x02z_tm_drv.o(.text.TM_TimeBaseStruct_Init)
    [Anonymous Symbol]                       0x00001c84   Section        0  mg32x02z_tm_drv.o(.text.TM_TimeBase_Init)
    [Anonymous Symbol]                       0x00001cfe   Section        0  mg32x02z_tm_drv.o(.text.TM_Timer_Cmd)
    [Anonymous Symbol]                       0x00001d14   Section        0  usart.o(.text.URT0_IRQHandler)
    [Anonymous Symbol]                       0x00001d26   Section        0  mg32x02z_urt_drv.o(.text.URT_ClearITFlag)
    [Anonymous Symbol]                       0x00001d2e   Section        0  mg32x02z_urt_drv.o(.text.URT_Cmd)
    [Anonymous Symbol]                       0x00001d3a   Section        0  mg32x02z_urt_drv.o(.text.URT_GetRXData)
    [Anonymous Symbol]                       0x00001d3e   Section        0  mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd)
    [Anonymous Symbol]                       0x00001d4a   Section        0  mg32x02z_urt_drv.o(.text.URT_IT_Config)
    [Anonymous Symbol]                       0x00001d56   Section        0  usart.o(.text.URT_Print)
    [Anonymous Symbol]                       0x00001d8c   Section        0  mg32x02z_urt_drv.o(.text.URT_SetTXData)
    [Anonymous Symbol]                       0x00001dc0   Section        0  usart.o(.text.USART_Config)
    __arm_cp.7_0                             0x00001e24   Number         4  usart.o(.text.USART_Config)
    __arm_cp.7_1                             0x00001e28   Number         4  usart.o(.text.USART_Config)
    __arm_cp.7_2                             0x00001e2c   Number         4  usart.o(.text.USART_Config)
    __arm_cp.7_3                             0x00001e30   Number         4  usart.o(.text.USART_Config)
    __arm_cp.7_4                             0x00001e34   Number         4  usart.o(.text.USART_Config)
    __arm_cp.7_5                             0x00001e38   Number         4  usart.o(.text.USART_Config)
    [Anonymous Symbol]                       0x00001e3c   Section        0  mg32x02z__common_drv.o(.text.UnProtectModuleReg)
    __arm_cp.7_0                             0x00001e44   Number         4  mg32x02z__common_drv.o(.text.UnProtectModuleReg)
    [Anonymous Symbol]                       0x00001e48   Section        0  wdt.o(.text.WDT_Config)
    __arm_cp.0_0                             0x00001e64   Number         4  wdt.o(.text.WDT_Config)
    [Anonymous Symbol]                       0x00001e68   Section        0  md5.o(.text.body)
    __arm_cp.0_64                            0x00002454   Number         4  md5.o(.text.body)
    __arm_cp.0_65                            0x00002458   Number         4  md5.o(.text.body)
    __arm_cp.0_66                            0x0000245c   Number         4  md5.o(.text.body)
    __arm_cp.0_67                            0x00002460   Number         4  md5.o(.text.body)
    __arm_cp.0_68                            0x00002464   Number         4  md5.o(.text.body)
    __arm_cp.0_69                            0x00002468   Number         4  md5.o(.text.body)
    __arm_cp.0_70                            0x0000246c   Number         4  md5.o(.text.body)
    __arm_cp.0_71                            0x00002470   Number         4  md5.o(.text.body)
    __arm_cp.0_72                            0x00002474   Number         4  md5.o(.text.body)
    __arm_cp.0_73                            0x00002478   Number         4  md5.o(.text.body)
    __arm_cp.0_74                            0x0000247c   Number         4  md5.o(.text.body)
    __arm_cp.0_75                            0x00002480   Number         4  md5.o(.text.body)
    __arm_cp.0_76                            0x00002484   Number         4  md5.o(.text.body)
    __arm_cp.0_77                            0x00002488   Number         4  md5.o(.text.body)
    __arm_cp.0_78                            0x0000248c   Number         4  md5.o(.text.body)
    __arm_cp.0_79                            0x00002490   Number         4  md5.o(.text.body)
    __arm_cp.0_80                            0x00002494   Number         4  md5.o(.text.body)
    __arm_cp.0_81                            0x00002498   Number         4  md5.o(.text.body)
    __arm_cp.0_82                            0x0000249c   Number         4  md5.o(.text.body)
    __arm_cp.0_83                            0x000024a0   Number         4  md5.o(.text.body)
    __arm_cp.0_84                            0x000024a4   Number         4  md5.o(.text.body)
    __arm_cp.0_85                            0x000024a8   Number         4  md5.o(.text.body)
    __arm_cp.0_86                            0x000024ac   Number         4  md5.o(.text.body)
    __arm_cp.0_87                            0x000024b0   Number         4  md5.o(.text.body)
    __arm_cp.0_24                            0x000026a8   Number         4  md5.o(.text.body)
    __arm_cp.0_25                            0x000026ac   Number         4  md5.o(.text.body)
    __arm_cp.0_26                            0x000026b0   Number         4  md5.o(.text.body)
    __arm_cp.0_27                            0x000026b4   Number         4  md5.o(.text.body)
    __arm_cp.0_28                            0x000026b8   Number         4  md5.o(.text.body)
    __arm_cp.0_29                            0x000026bc   Number         4  md5.o(.text.body)
    __arm_cp.0_30                            0x000026c0   Number         4  md5.o(.text.body)
    __arm_cp.0_31                            0x000026c4   Number         4  md5.o(.text.body)
    __arm_cp.0_32                            0x000026c8   Number         4  md5.o(.text.body)
    __arm_cp.0_33                            0x000026cc   Number         4  md5.o(.text.body)
    __arm_cp.0_34                            0x000026d0   Number         4  md5.o(.text.body)
    __arm_cp.0_35                            0x000026d4   Number         4  md5.o(.text.body)
    __arm_cp.0_36                            0x000026d8   Number         4  md5.o(.text.body)
    __arm_cp.0_37                            0x000026dc   Number         4  md5.o(.text.body)
    __arm_cp.0_38                            0x000026e0   Number         4  md5.o(.text.body)
    __arm_cp.0_39                            0x000026e4   Number         4  md5.o(.text.body)
    __arm_cp.0_40                            0x000026e8   Number         4  md5.o(.text.body)
    __arm_cp.0_41                            0x000026ec   Number         4  md5.o(.text.body)
    __arm_cp.0_42                            0x000026f0   Number         4  md5.o(.text.body)
    __arm_cp.0_43                            0x000026f4   Number         4  md5.o(.text.body)
    __arm_cp.0_44                            0x000026f8   Number         4  md5.o(.text.body)
    __arm_cp.0_45                            0x000026fc   Number         4  md5.o(.text.body)
    __arm_cp.0_46                            0x00002700   Number         4  md5.o(.text.body)
    __arm_cp.0_47                            0x00002704   Number         4  md5.o(.text.body)
    __arm_cp.0_48                            0x00002708   Number         4  md5.o(.text.body)
    __arm_cp.0_49                            0x0000270c   Number         4  md5.o(.text.body)
    __arm_cp.0_50                            0x00002710   Number         4  md5.o(.text.body)
    __arm_cp.0_51                            0x00002714   Number         4  md5.o(.text.body)
    __arm_cp.0_52                            0x00002718   Number         4  md5.o(.text.body)
    __arm_cp.0_53                            0x0000271c   Number         4  md5.o(.text.body)
    __arm_cp.0_54                            0x00002720   Number         4  md5.o(.text.body)
    __arm_cp.0_55                            0x00002724   Number         4  md5.o(.text.body)
    __arm_cp.0_56                            0x00002728   Number         4  md5.o(.text.body)
    __arm_cp.0_57                            0x0000272c   Number         4  md5.o(.text.body)
    __arm_cp.0_58                            0x00002730   Number         4  md5.o(.text.body)
    __arm_cp.0_59                            0x00002734   Number         4  md5.o(.text.body)
    __arm_cp.0_60                            0x00002738   Number         4  md5.o(.text.body)
    __arm_cp.0_61                            0x0000273c   Number         4  md5.o(.text.body)
    __arm_cp.0_62                            0x00002740   Number         4  md5.o(.text.body)
    __arm_cp.0_63                            0x00002744   Number         4  md5.o(.text.body)
    [Anonymous Symbol]                       0x00002748   Section        0  buffer.o(.text.getEvent)
    [Anonymous Symbol]                       0x0000276c   Section        0  skud_algo.o(.text.hAccessToSleep)
    __arm_cp.11_0                            0x00002774   Number         4  skud_algo.o(.text.hAccessToSleep)
    [Anonymous Symbol]                       0x00002778   Section        0  skud_algo.o(.text.hDoorClosedNoAccess)
    [Anonymous Symbol]                       0x00002798   Section        0  skud_algo.o(.text.hDoorOpenedNoAccess)
    [Anonymous Symbol]                       0x000027b8   Section        0  skud_algo.o(.text.hIndicationStop)
    [Anonymous Symbol]                       0x000027d0   Section        0  skud_algo.o(.text.hParseBusMessage)
    [Anonymous Symbol]                       0x000027d8   Section        0  skud_algo.o(.text.hReadingKeyResume)
    __arm_cp.13_0                            0x00002814   Number         4  skud_algo.o(.text.hReadingKeyResume)
    [Anonymous Symbol]                       0x00002818   Section        0  skud_algo.o(.text.hReadingKeySuspend)
    [Anonymous Symbol]                       0x00002850   Section        0  skud_algo.o(.text.hSendAlarmEvent)
    __arm_cp.16_0                            0x00002860   Number         4  skud_algo.o(.text.hSendAlarmEvent)
    [Anonymous Symbol]                       0x00002864   Section        0  skud_algo.o(.text.hSleepToWaiting)
    [Anonymous Symbol]                       0x000028a4   Section        0  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_0                            0x000028f8   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_1                            0x000028fc   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_2                            0x00002900   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_3                            0x00002904   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_4                            0x00002908   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_5                            0x0000290c   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_6                            0x00002910   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_7                            0x00002914   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_8                            0x00002918   Number         4  skud_algo.o(.text.hWaitingToAccess)
    __arm_cp.10_9                            0x0000291c   Number         4  skud_algo.o(.text.hWaitingToAccess)
    [Anonymous Symbol]                       0x00002920   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00002968   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x0000296c   Section        0  buffer.o(.text.putEvent)
    __arm_cp.5_0                             0x00002998   Number         4  buffer.o(.text.putEvent)
    [Anonymous Symbol]                       0x0000299c   Section        0  wdt.o(.text.wdt_enable)
    __arm_cp.1_0                             0x000029bc   Number         4  wdt.o(.text.wdt_enable)
    [Anonymous Symbol]                       0x000029c0   Section        0  wdt.o(.text.wdt_reset)
    i.__0printf$5                            0x000029c8   Section        0  printf5.o(i.__0printf$5)
    i.__scatterload_copy                     0x000029e8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000029f6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000029f8   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x00002a09   Thumb Code   688  printf5.o(i._printf_core)
    i._printf_core                           0x00002a08   Section        0  printf5.o(i._printf_core)
    i.fputc                                  0x00002ce4   Section        0  fputc.o(i.fputc)
    CRC_Table                                0x00002cf6   Data         256  crc.o(.rodata.CRC_Table)
    [Anonymous Symbol]                       0x00002cf6   Section        0  crc.o(.rodata.CRC_Table)
    [Anonymous Symbol]                       0x00002df6   Section        0  system_mg32x02z.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    HardFault_Handler_C.stacked_lr           0x20000174   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_lr)
    [Anonymous Symbol]                       0x20000174   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_lr)
    HardFault_Handler_C.stacked_pc           0x20000178   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_pc)
    [Anonymous Symbol]                       0x20000178   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_pc)
    HardFault_Handler_C.stacked_psr          0x2000017c   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_psr)
    [Anonymous Symbol]                       0x2000017c   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_psr)
    HardFault_Handler_C.stacked_r0           0x20000180   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r0)
    [Anonymous Symbol]                       0x20000180   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r0)
    HardFault_Handler_C.stacked_r1           0x20000184   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r1)
    [Anonymous Symbol]                       0x20000184   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r1)
    HardFault_Handler_C.stacked_r12          0x20000188   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r12)
    [Anonymous Symbol]                       0x20000188   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r12)
    HardFault_Handler_C.stacked_r2           0x2000018c   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r2)
    [Anonymous Symbol]                       0x2000018c   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r2)
    HardFault_Handler_C.stacked_r3           0x20000190   Data           4  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r3)
    [Anonymous Symbol]                       0x20000190   Section        0  system_mg32x02z.o(.bss.HardFault_Handler_C.stacked_r3)
    STACK                                    0x200005f0   Section     1024  startup_mg32x02z.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mg32x02z.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_mg32x02z.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_mg32x02z.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    MG32x02z_IEC60730_MANAGER                0x000000d5   Thumb Code     0  startup_mg32x02z.o(.text)
    ReInitial_Stack                          0x000000d5   Thumb Code     6  startup_mg32x02z.o(.text)
    Reset_Handler                            0x000000db   Thumb Code     8  startup_mg32x02z.o(.text)
    NMI_Handler                              0x000000e3   Thumb Code     2  startup_mg32x02z.o(.text)
    HardFault_Handler                        0x000000e5   Thumb Code    24  startup_mg32x02z.o(.text)
    SVC_Handler                              0x000000fd   Thumb Code     2  startup_mg32x02z.o(.text)
    PendSV_Handler                           0x000000ff   Thumb Code     2  startup_mg32x02z.o(.text)
    SysTick_Handler                          0x00000101   Thumb Code     2  startup_mg32x02z.o(.text)
    ADC_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    APX_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    COMP_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    DAC_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    DMA_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT0_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT1_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT2_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    EXINT3_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    I2C0_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    I2Cx_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    SPI0_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    SPIx_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    SYS_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    TM20_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    TM2x_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    URT123_IRQHandler                        0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    URT4x_IRQHandler                         0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    USB_IRQHandler                           0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    WWDT_IRQHandler                          0x00000103   Thumb Code     0  startup_mg32x02z.o(.text)
    __aeabi_memcpy                           0x00000111   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000111   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000111   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00000135   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00000135   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00000135   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000143   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000143   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000143   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x00000147   Thumb Code    18  memseta.o(.text)
    memcmp                                   0x00000159   Thumb Code    26  memcmp.o(.text)
    __aeabi_uidiv                            0x00000173   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000173   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_uldivmod                         0x000001b1   Thumb Code    96  uldiv.o(.text)
    __scatterload                            0x00000211   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000211   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00000235   Thumb Code    32  llshl.o(.text)
    __semihosting_library_function           0x00000235   Thumb Code     0  semi.o(.text)
    _ll_shift_l                              0x00000235   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000255   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x00000255   Thumb Code     0  llushr.o(.text)
    __I$use$semihosting$fputc                0x00000277   Thumb Code     0  iusesemip.o(.text)
    __decompress                             0x00000277   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x00000277   Thumb Code    58  __dczerorl.o(.text)
    ActivateKey                              0x000002b1   Thumb Code   160  flash.o(.text.ActivateKey)
    AddKey                                   0x00000351   Thumb Code   284  flash.o(.text.AddKey)
    Bus_AddNewByte                           0x00000481   Thumb Code    92  bus.o(.text.Bus_AddNewByte)
    Bus_ClearBuffer                          0x000004e1   Thumb Code    24  bus.o(.text.Bus_ClearBuffer)
    Bus_ParseMessage                         0x00000505   Thumb Code   100  bus.o(.text.Bus_ParseMessage)
    Bus_ParseReadRequest                     0x0000056d   Thumb Code   180  bus.o(.text.Bus_ParseReadRequest)
    Bus_ParseWriteRequest24                  0x00000625   Thumb Code   136  bus.o(.text.Bus_ParseWriteRequest24)
    Bus_ParseWriteRequest9                   0x000006ad   Thumb Code   156  bus.o(.text.Bus_ParseWriteRequest9)
    CRCisWrong                               0x00000759   Thumb Code    36  crc.o(.text.CRCisWrong)
    CSC_ClearFlag                            0x00000781   Thumb Code     8  mg32x02z_csc_drv.o(.text.CSC_ClearFlag)
    CSC_GetClockSourceState                  0x00000789   Thumb Code    12  mg32x02z_csc_drv.o(.text.CSC_GetClockSourceState)
    CSC_IHRCO_Cmd                            0x00000799   Thumb Code    20  mg32x02z_csc_drv.o(.text.CSC_IHRCO_Cmd)
    CSC_Init                                 0x000007ad   Thumb Code   600  mg32x02z_csc_init.o(.text.CSC_Init)
    ChipInit                                 0x00000a25   Thumb Code    16  mg32x02z_chipinit.o(.text.ChipInit)
    DS1990A_GetKeyID                         0x00000a39   Thumb Code    60  ibutton.o(.text.DS1990A_GetKeyID)
    DoCommand                                0x00000a79   Thumb Code   260  flash.o(.text.DoCommand)
    Do_CRC                                   0x00000b81   Thumb Code    28  crc.o(.text.Do_CRC)
    FlashFirstInit                           0x00000ba1   Thumb Code   364  flash.o(.text.FlashFirstInit)
    GPIO_Config                              0x00000d29   Thumb Code   628  gpio.o(.text.GPIO_Config)
    GPIO_PinFunction_Select                  0x00000fa9   Thumb Code    20  mg32x02z_gpio_drv.o(.text.GPIO_PinFunction_Select)
    GPIO_PinHighSpeedMode_Cmd                0x00000fc1   Thumb Code    16  mg32x02z_gpio_drv.o(.text.GPIO_PinHighSpeedMode_Cmd)
    GPIO_PinInFilterDivider_Select           0x00000fd1   Thumb Code    18  mg32x02z_gpio_drv.o(.text.GPIO_PinInFilterDivider_Select)
    GPIO_PinInverse_Cmd                      0x00000fe3   Thumb Code    14  mg32x02z_gpio_drv.o(.text.GPIO_PinInverse_Cmd)
    GPIO_PinMode_Select                      0x00000ff1   Thumb Code    18  mg32x02z_gpio_drv.o(.text.GPIO_PinMode_Select)
    GPIO_PinOutputDrive_Select               0x00001003   Thumb Code    18  mg32x02z_gpio_drv.o(.text.GPIO_PinOutputDrive_Select)
    GPIO_PinPUResister_Cmd                   0x00001015   Thumb Code    16  mg32x02z_gpio_drv.o(.text.GPIO_PinPUResister_Cmd)
    GetVariable                              0x00001025   Thumb Code    20  flash.o(.text.GetVariable)
    HandleEvent                              0x0000103d   Thumb Code    48  skud_algo.o(.text.HandleEvent)
    HardFault_Handler_C                      0x00001075   Thumb Code   140  system_mg32x02z.o(.text.HardFault_Handler_C)
    IAP_CopyFromIAPToRAM                     0x000011bd   Thumb Code    22  iap.o(.text.IAP_CopyFromIAPToRAM)
    IAP_Erase_OnePage                        0x000011d5   Thumb Code   132  iap.o(.text.IAP_Erase_OnePage)
    IAP_Init                                 0x00001259   Thumb Code    52  iap.o(.text.IAP_Init)
    IAP_IsEqualToRAM                         0x00001291   Thumb Code    18  iap.o(.text.IAP_IsEqualToRAM)
    IAP_Multiple_Write                       0x000012a5   Thumb Code   188  iap.o(.text.IAP_Multiple_Write)
    IAP_ReadByte                             0x00001365   Thumb Code    12  iap.o(.text.IAP_ReadByte)
    IAP_ReadWord                             0x00001371   Thumb Code    14  iap.o(.text.IAP_ReadWord)
    IAP_WriteMultipleWord                    0x0000137f   Thumb Code    24  iap.o(.text.IAP_WriteMultipleWord)
    IAP_WriteSingleWord                      0x00001399   Thumb Code   148  iap.o(.text.IAP_WriteSingleWord)
    IWDT_Cmd                                 0x00001439   Thumb Code    20  mg32x02z_iwdt_drv.o(.text.IWDT_Cmd)
    IWDT_Divider_Select                      0x00001451   Thumb Code    16  mg32x02z_iwdt_drv.o(.text.IWDT_Divider_Select)
    IWDT_RefreshCounter                      0x00001465   Thumb Code     8  mg32x02z_iwdt_drv.o(.text.IWDT_RefreshCounter)
    IsKeyActive                              0x00001475   Thumb Code    92  skud_algo.o(.text.IsKeyActive)
    MD5_Final                                0x000014dd   Thumb Code   190  md5.o(.text.MD5_Final)
    MD5_MakeHash                             0x0000159d   Thumb Code   108  md5.o(.text.MD5_MakeHash)
    MEM_SetIAPSize                           0x00001619   Thumb Code   104  mg32x02z_mem_drv.o(.text.MEM_SetIAPSize)
    OneWire_Read                             0x00001685   Thumb Code    88  onewire.o(.text.OneWire_Read)
    OneWire_SetDirection                     0x000016dd   Thumb Code    12  onewire.o(.text.OneWire_SetDirection)
    OneWire_Start                            0x000016e9   Thumb Code    80  onewire.o(.text.OneWire_Start)
    OneWire_Write                            0x00001739   Thumb Code   108  onewire.o(.text.OneWire_Write)
    ProtectModuleReg                         0x000017ad   Thumb Code     8  mg32x02z__common_drv.o(.text.ProtectModuleReg)
    RST_CRstSource_Config                    0x000017b5   Thumb Code    20  mg32x02z_rst_drv.o(.text.RST_CRstSource_Config)
    SetVariable                              0x000017cd   Thumb Code   116  flash.o(.text.SetVariable)
    SetVariablePack                          0x00001841   Thumb Code   232  flash.o(.text.SetVariablePack)
    SystemInit                               0x00001935   Thumb Code     8  system_mg32x02z.o(.text.SystemInit)
    TIM00_Callback                           0x00001945   Thumb Code   120  timers.o(.text.TIM00_Callback)
    TIM_Config                               0x000019d5   Thumb Code   268  timers.o(.text.TIM_Config)
    TM0x_IRQHandler                          0x00001aed   Thumb Code    72  timers.o(.text.TM0x_IRQHandler)
    TM10_IRQHandler                          0x00001b45   Thumb Code    52  timers.o(.text.TM10_IRQHandler)
    TM1x_IRQHandler                          0x00001b81   Thumb Code    48  timers.o(.text.TM1x_IRQHandler)
    TM3x_IRQHandler                          0x00001bb5   Thumb Code   112  timers.o(.text.TM3x_IRQHandler)
    TM_ClearFlag                             0x00001c49   Thumb Code     4  mg32x02z_tm_drv.o(.text.TM_ClearFlag)
    TM_ITEA_Cmd                              0x00001c4d   Thumb Code    16  mg32x02z_tm_drv.o(.text.TM_ITEA_Cmd)
    TM_IT_Config                             0x00001c5d   Thumb Code    20  mg32x02z_tm_drv.o(.text.TM_IT_Config)
    TM_TimeBaseStruct_Init                   0x00001c71   Thumb Code    20  mg32x02z_tm_drv.o(.text.TM_TimeBaseStruct_Init)
    TM_TimeBase_Init                         0x00001c85   Thumb Code   122  mg32x02z_tm_drv.o(.text.TM_TimeBase_Init)
    TM_Timer_Cmd                             0x00001cff   Thumb Code    22  mg32x02z_tm_drv.o(.text.TM_Timer_Cmd)
    URT0_IRQHandler                          0x00001d15   Thumb Code    18  usart.o(.text.URT0_IRQHandler)
    URT_ClearITFlag                          0x00001d27   Thumb Code     8  mg32x02z_urt_drv.o(.text.URT_ClearITFlag)
    URT_Cmd                                  0x00001d2f   Thumb Code    12  mg32x02z_urt_drv.o(.text.URT_Cmd)
    URT_GetRXData                            0x00001d3b   Thumb Code     4  mg32x02z_urt_drv.o(.text.URT_GetRXData)
    URT_ITEA_Cmd                             0x00001d3f   Thumb Code    12  mg32x02z_urt_drv.o(.text.URT_ITEA_Cmd)
    URT_IT_Config                            0x00001d4b   Thumb Code    12  mg32x02z_urt_drv.o(.text.URT_IT_Config)
    URT_Print                                0x00001d57   Thumb Code    54  usart.o(.text.URT_Print)
    URT_SetTXData                            0x00001d8d   Thumb Code    50  mg32x02z_urt_drv.o(.text.URT_SetTXData)
    USART_Config                             0x00001dc1   Thumb Code   100  usart.o(.text.USART_Config)
    UnProtectModuleReg                       0x00001e3d   Thumb Code     8  mg32x02z__common_drv.o(.text.UnProtectModuleReg)
    WDT_Config                               0x00001e49   Thumb Code    28  wdt.o(.text.WDT_Config)
    body                                     0x00001e69   Thumb Code  2112  md5.o(.text.body)
    getEvent                                 0x00002749   Thumb Code    36  buffer.o(.text.getEvent)
    hAccessToSleep                           0x0000276d   Thumb Code     8  skud_algo.o(.text.hAccessToSleep)
    hDoorClosedNoAccess                      0x00002779   Thumb Code    32  skud_algo.o(.text.hDoorClosedNoAccess)
    hDoorOpenedNoAccess                      0x00002799   Thumb Code    32  skud_algo.o(.text.hDoorOpenedNoAccess)
    hIndicationStop                          0x000027b9   Thumb Code    24  skud_algo.o(.text.hIndicationStop)
    hParseBusMessage                         0x000027d1   Thumb Code     8  skud_algo.o(.text.hParseBusMessage)
    hReadingKeyResume                        0x000027d9   Thumb Code    60  skud_algo.o(.text.hReadingKeyResume)
    hReadingKeySuspend                       0x00002819   Thumb Code    56  skud_algo.o(.text.hReadingKeySuspend)
    hSendAlarmEvent                          0x00002851   Thumb Code    16  skud_algo.o(.text.hSendAlarmEvent)
    hSleepToWaiting                          0x00002865   Thumb Code    64  skud_algo.o(.text.hSleepToWaiting)
    hWaitingToAccess                         0x000028a5   Thumb Code    84  skud_algo.o(.text.hWaitingToAccess)
    main                                     0x00002921   Thumb Code    72  main.o(.text.main)
    putEvent                                 0x0000296d   Thumb Code    44  buffer.o(.text.putEvent)
    wdt_enable                               0x0000299d   Thumb Code    32  wdt.o(.text.wdt_enable)
    wdt_reset                                0x000029c1   Thumb Code     8  wdt.o(.text.wdt_reset)
    __0printf$5                              0x000029c9   Thumb Code    24  printf5.o(i.__0printf$5)
    __1printf$5                              0x000029c9   Thumb Code     0  printf5.o(i.__0printf$5)
    __2printf                                0x000029c9   Thumb Code     0  printf5.o(i.__0printf$5)
    __scatterload_copy                       0x000029e9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000029f7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000029f9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    fputc                                    0x00002ce5   Thumb Code    18  fputc.o(i.fputc)
    Region$$Table$$Base                      0x00002e2c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00002e4c   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    ActiveKeys                               0x20000004   Data           6  variables.o(.data.ActiveKeys)
    BuzzerOffTime                            0x2000000a   Data           6  variables.o(.data.BuzzerOffTime)
    FSMTable                                 0x20000010   Data         192  skud_algo.o(.data.FSMTable)
    FlashResourse                            0x200000d0   Data           6  variables.o(.data.FlashResourse)
    FreeAccess                               0x200000d6   Data           6  variables.o(.data.FreeAccess)
    GerkonFiltTime                           0x200000dc   Data           6  variables.o(.data.GerkonFiltTime)
    MasterSlave                              0x200000e2   Data           6  variables.o(.data.MasterSlave)
    MessageLenArr                            0x200000e8   Data           4  bus.o(.data.MessageLenArr)
    ReactivateAlarmTime                      0x200000ec   Data           6  variables.o(.data.ReactivateAlarmTime)
    SendAlarmTime                            0x200000f2   Data           6  variables.o(.data.SendAlarmTime)
    SendOfflineEvents                        0x200000f8   Data           6  variables.o(.data.SendOfflineEvents)
    SystemCoreClock                          0x20000100   Data           4  system_mg32x02z.o(.data.SystemCoreClock)
    TotalKeys                                0x20000104   Data           6  variables.o(.data.TotalKeys)
    alarmTimeoutMax                          0x2000010c   Data           4  skud_algo.o(.data.alarmTimeoutMax)
    eBuf                                     0x20000110   Data           8  buffer.o(.data.eBuf)
    eventAccess                              0x20000118   Data           6  events.o(.data.eventAccess)
    eventAlarm                               0x2000011e   Data           6  events.o(.data.eventAlarm)
    events                                   0x20000124   Data          12  events.o(.data.events)
    gerkonFilterMax                          0x20000130   Data           1  skud_algo.o(.data.gerkonFilterMax)
    indicSpeed                               0x20000131   Data           1  skud_algo.o(.data.indicSpeed)
    indicTimeCnt                             0x20000134   Data           4  skud_algo.o(.data.indicTimeCnt)
    indicTimeMax                             0x20000138   Data           4  skud_algo.o(.data.indicTimeMax)
    indicWaitMax                             0x2000013c   Data           1  skud_algo.o(.data.indicWaitMax)
    indicationPhase                          0x2000013d   Data           1  skud_algo.o(.data.indicationPhase)
    key1                                     0x2000013e   Data           8  keys.o(.data.key1)
    protectionDelayMax                       0x20000146   Data           2  skud_algo.o(.data.protectionDelayMax)
    variables                                0x20000148   Data          40  variables.o(.data.variables)
    CommandSize                              0x20000170   Data           1  bus.o(.bss.CommandSize)
    KeyEncrypted                             0x20000194   Data          16  keys.o(.bss.KeyEncrypted)
    KeyRaw                                   0x200001a4   Data           8  keys.o(.bss.KeyRaw)
    MessLen                                  0x200001ac   Data           1  bus.o(.bss.MessLen)
    RecBytes                                 0x200001ad   Data          30  bus.o(.bss.RecBytes)
    alarmTimeoutCnt                          0x200001cc   Data           4  skud_algo.o(.bss.alarmTimeoutCnt)
    buzzerMuted                              0x200001d0   Data           1  skud_algo.o(.bss.buzzerMuted)
    currentState                             0x200001d1   Data           1  skud_algo.o(.bss.currentState)
    eventDoor                                0x200001d2   Data           6  events.o(.bss.eventDoor)
    fpage                                    0x200001d8   Data        1024  flash.o(.bss.fpage)
    gerkonFilterCnt                          0x200005d8   Data           1  skud_algo.o(.bss.gerkonFilterCnt)
    gerkonState                              0x200005d9   Data           1  skud_algo.o(.bss.gerkonState)
    indicWaitCnt                             0x200005da   Data           1  skud_algo.o(.bss.indicWaitCnt)
    iptr                                     0x200005db   Data           1  bus.o(.bss.iptr)
    oldGerkonState                           0x200005dc   Data           1  skud_algo.o(.bss.oldGerkonState)
    operStatus                               0x200005e0   Data           4  bus.o(.bss.operStatus)
    parsingStatus                            0x200005e4   Data           1  bus.o(.bss.parsingStatus)
    protectionDelayCnt                       0x200005e6   Data           2  skud_algo.o(.bss.protectionDelayCnt)
    usUsart                                  0x200005e8   Data           1  bus.o(.bss.usUsart)
    __initial_sp                             0x200009f0   Data           0  startup_mg32x02z.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000db

  Load Region LR_1 (Base: 0x00000000, Size: 0x00002fbc, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00002f10])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00002e4c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO          414    RESET               startup_mg32x02z.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         2071  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         2349    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         2352    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2354    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2356    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         2357    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2359    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2361    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         2350    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x0000003c   Code   RO          415  * .text               startup_mg32x02z.o
    0x00000110   0x00000110   0x00000024   Code   RO         2080    .text               mc_p.l(memcpya.o)
    0x00000134   0x00000134   0x00000024   Code   RO         2082    .text               mc_p.l(memseta.o)
    0x00000158   0x00000158   0x0000001a   Code   RO         2084    .text               mc_p.l(memcmp.o)
    0x00000172   0x00000172   0x0000003e   Code   RO         2372    .text               mc_p.l(uidiv_div0.o)
    0x000001b0   0x000001b0   0x00000060   Code   RO         2378    .text               mc_p.l(uldiv.o)
    0x00000210   0x00000210   0x00000024   Code   RO         2391    .text               mc_p.l(init.o)
    0x00000234   0x00000234   0x00000000   Code   RO         2393    .text               mc_p.l(semi.o)
    0x00000234   0x00000234   0x00000020   Code   RO         2394    .text               mc_p.l(llshl.o)
    0x00000254   0x00000254   0x00000022   Code   RO         2396    .text               mc_p.l(llushr.o)
    0x00000276   0x00000276   0x00000000   Code   RO         2400    .text               mc_p.l(iusesemip.o)
    0x00000276   0x00000276   0x0000003a   Code   RO         2413    .text               mc_p.l(__dczerorl.o)
    0x000002b0   0x000002b0   0x000000a0   Code   RO          233    .text.ActivateKey   flash.o
    0x00000350   0x00000350   0x00000130   Code   RO          215    .text.AddKey        flash.o
    0x00000480   0x00000480   0x00000060   Code   RO           11    .text.Bus_AddNewByte  bus.o
    0x000004e0   0x000004e0   0x00000024   Code   RO           25    .text.Bus_ClearBuffer  bus.o
    0x00000504   0x00000504   0x00000068   Code   RO           13    .text.Bus_ParseMessage  bus.o
    0x0000056c   0x0000056c   0x000000b8   Code   RO           19    .text.Bus_ParseReadRequest  bus.o
    0x00000624   0x00000624   0x00000088   Code   RO           17    .text.Bus_ParseWriteRequest24  bus.o
    0x000006ac   0x000006ac   0x000000ac   Code   RO           15    .text.Bus_ParseWriteRequest9  bus.o
    0x00000758   0x00000758   0x00000028   Code   RO           72    .text.CRCisWrong    crc.o
    0x00000780   0x00000780   0x00000008   Code   RO          781    .text.CSC_ClearFlag  mg32x02z_csc_drv.o
    0x00000788   0x00000788   0x00000010   Code   RO          771    .text.CSC_GetClockSourceState  mg32x02z_csc_drv.o
    0x00000798   0x00000798   0x00000014   Code   RO          723    .text.CSC_IHRCO_Cmd  mg32x02z_csc_drv.o
    0x000007ac   0x000007ac   0x00000278   Code   RO          395    .text.CSC_Init      mg32x02z_csc_init.o
    0x00000a24   0x00000a24   0x00000014   Code   RO          405    .text.ChipInit      mg32x02z_chipinit.o
    0x00000a38   0x00000a38   0x00000040   Code   RO          273    .text.DS1990A_GetKeyID  ibutton.o
    0x00000a78   0x00000a78   0x00000108   Code   RO          237    .text.DoCommand     flash.o
    0x00000b80   0x00000b80   0x00000020   Code   RO           70    .text.Do_CRC        crc.o
    0x00000ba0   0x00000ba0   0x00000188   Code   RO          217    .text.FlashFirstInit  flash.o
    0x00000d28   0x00000d28   0x00000280   Code   RO          119    .text.GPIO_Config   gpio.o
    0x00000fa8   0x00000fa8   0x00000018   Code   RO          931    .text.GPIO_PinFunction_Select  mg32x02z_gpio_drv.o
    0x00000fc0   0x00000fc0   0x00000010   Code   RO          921    .text.GPIO_PinHighSpeedMode_Cmd  mg32x02z_gpio_drv.o
    0x00000fd0   0x00000fd0   0x00000012   Code   RO          929    .text.GPIO_PinInFilterDivider_Select  mg32x02z_gpio_drv.o
    0x00000fe2   0x00000fe2   0x0000000e   Code   RO          925    .text.GPIO_PinInverse_Cmd  mg32x02z_gpio_drv.o
    0x00000ff0   0x00000ff0   0x00000012   Code   RO          919    .text.GPIO_PinMode_Select  mg32x02z_gpio_drv.o
    0x00001002   0x00001002   0x00000012   Code   RO          927    .text.GPIO_PinOutputDrive_Select  mg32x02z_gpio_drv.o
    0x00001014   0x00001014   0x00000010   Code   RO          923    .text.GPIO_PinPUResister_Cmd  mg32x02z_gpio_drv.o
    0x00001024   0x00001024   0x00000018   Code   RO          221    .text.GetVariable   flash.o
    0x0000103c   0x0000103c   0x00000038   Code   RO          184    .text.HandleEvent   skud_algo.o
    0x00001074   0x00001074   0x00000148   Code   RO          426    .text.HardFault_Handler_C  system_mg32x02z.o
    0x000011bc   0x000011bc   0x00000016   Code   RO          361    .text.IAP_CopyFromIAPToRAM  iap.o
    0x000011d2   0x000011d2   0x00000002   PAD
    0x000011d4   0x000011d4   0x00000084   Code   RO          343    .text.IAP_Erase_OnePage  iap.o
    0x00001258   0x00001258   0x00000038   Code   RO          341    .text.IAP_Init      iap.o
    0x00001290   0x00001290   0x00000012   Code   RO          363    .text.IAP_IsEqualToRAM  iap.o
    0x000012a2   0x000012a2   0x00000002   PAD
    0x000012a4   0x000012a4   0x000000c0   Code   RO          359    .text.IAP_Multiple_Write  iap.o
    0x00001364   0x00001364   0x0000000c   Code   RO          349    .text.IAP_ReadByte  iap.o
    0x00001370   0x00001370   0x0000000e   Code   RO          351    .text.IAP_ReadWord  iap.o
    0x0000137e   0x0000137e   0x00000018   Code   RO          357    .text.IAP_WriteMultipleWord  iap.o
    0x00001396   0x00001396   0x00000002   PAD
    0x00001398   0x00001398   0x000000a0   Code   RO          353    .text.IAP_WriteSingleWord  iap.o
    0x00001438   0x00001438   0x00000018   Code   RO         1077    .text.IWDT_Cmd      mg32x02z_iwdt_drv.o
    0x00001450   0x00001450   0x00000014   Code   RO         1069    .text.IWDT_Divider_Select  mg32x02z_iwdt_drv.o
    0x00001464   0x00001464   0x00000010   Code   RO         1073    .text.IWDT_RefreshCounter  mg32x02z_iwdt_drv.o
    0x00001474   0x00001474   0x00000068   Code   RO          186    .text.IsKeyActive   skud_algo.o
    0x000014dc   0x000014dc   0x000000be   Code   RO          326    .text.MD5_Final     md5.o
    0x0000159a   0x0000159a   0x00000002   PAD
    0x0000159c   0x0000159c   0x0000007c   Code   RO          328    .text.MD5_MakeHash  md5.o
    0x00001618   0x00001618   0x0000006c   Code   RO         1141    .text.MEM_SetIAPSize  mg32x02z_mem_drv.o
    0x00001684   0x00001684   0x00000058   Code   RO          310    .text.OneWire_Read  onewire.o
    0x000016dc   0x000016dc   0x0000000c   Code   RO          304    .text.OneWire_SetDirection  onewire.o
    0x000016e8   0x000016e8   0x00000050   Code   RO          306    .text.OneWire_Start  onewire.o
    0x00001738   0x00001738   0x00000074   Code   RO          308    .text.OneWire_Write  onewire.o
    0x000017ac   0x000017ac   0x00000008   Code   RO         2057    .text.ProtectModuleReg  mg32x02z__common_drv.o
    0x000017b4   0x000017b4   0x00000018   Code   RO         1229    .text.RST_CRstSource_Config  mg32x02z_rst_drv.o
    0x000017cc   0x000017cc   0x00000074   Code   RO          223    .text.SetVariable   flash.o
    0x00001840   0x00001840   0x000000f4   Code   RO          231    .text.SetVariablePack  flash.o
    0x00001934   0x00001934   0x00000010   Code   RO          424    .text.SystemInit    system_mg32x02z.o
    0x00001944   0x00001944   0x00000090   Code   RO           43    .text.TIM00_Callback  timers.o
    0x000019d4   0x000019d4   0x00000118   Code   RO           53    .text.TIM_Config    timers.o
    0x00001aec   0x00001aec   0x00000058   Code   RO           55    .text.TM0x_IRQHandler  timers.o
    0x00001b44   0x00001b44   0x0000003c   Code   RO           57    .text.TM10_IRQHandler  timers.o
    0x00001b80   0x00001b80   0x00000034   Code   RO           59    .text.TM1x_IRQHandler  timers.o
    0x00001bb4   0x00001bb4   0x00000094   Code   RO           61    .text.TM3x_IRQHandler  timers.o
    0x00001c48   0x00001c48   0x00000004   Code   RO         1751    .text.TM_ClearFlag  mg32x02z_tm_drv.o
    0x00001c4c   0x00001c4c   0x00000010   Code   RO         1745    .text.TM_ITEA_Cmd   mg32x02z_tm_drv.o
    0x00001c5c   0x00001c5c   0x00000014   Code   RO         1743    .text.TM_IT_Config  mg32x02z_tm_drv.o
    0x00001c70   0x00001c70   0x00000014   Code   RO         1443    .text.TM_TimeBaseStruct_Init  mg32x02z_tm_drv.o
    0x00001c84   0x00001c84   0x0000007a   Code   RO         1445    .text.TM_TimeBase_Init  mg32x02z_tm_drv.o
    0x00001cfe   0x00001cfe   0x00000016   Code   RO         1481    .text.TM_Timer_Cmd  mg32x02z_tm_drv.o
    0x00001d14   0x00001d14   0x00000012   Code   RO           99    .text.URT0_IRQHandler  usart.o
    0x00001d26   0x00001d26   0x00000008   Code   RO         1785    .text.URT_ClearITFlag  mg32x02z_urt_drv.o
    0x00001d2e   0x00001d2e   0x0000000c   Code   RO         1821    .text.URT_Cmd       mg32x02z_urt_drv.o
    0x00001d3a   0x00001d3a   0x00000004   Code   RO         1899    .text.URT_GetRXData  mg32x02z_urt_drv.o
    0x00001d3e   0x00001d3e   0x0000000c   Code   RO         1779    .text.URT_ITEA_Cmd  mg32x02z_urt_drv.o
    0x00001d4a   0x00001d4a   0x0000000c   Code   RO         1775    .text.URT_IT_Config  mg32x02z_urt_drv.o
    0x00001d56   0x00001d56   0x00000036   Code   RO           91    .text.URT_Print     usart.o
    0x00001d8c   0x00001d8c   0x00000032   Code   RO         1935    .text.URT_SetTXData  mg32x02z_urt_drv.o
    0x00001dbe   0x00001dbe   0x00000002   PAD
    0x00001dc0   0x00001dc0   0x0000007c   Code   RO           97    .text.USART_Config  usart.o
    0x00001e3c   0x00001e3c   0x0000000c   Code   RO         2059    .text.UnProtectModuleReg  mg32x02z__common_drv.o
    0x00001e48   0x00001e48   0x00000020   Code   RO          373    .text.WDT_Config    wdt.o
    0x00001e68   0x00001e68   0x000008e0   Code   RO          320    .text.body          md5.o
    0x00002748   0x00002748   0x00000024   Code   RO          290    .text.getEvent      buffer.o
    0x0000276c   0x0000276c   0x0000000c   Code   RO          168    .text.hAccessToSleep  skud_algo.o
    0x00002778   0x00002778   0x00000020   Code   RO          174    .text.hDoorClosedNoAccess  skud_algo.o
    0x00002798   0x00002798   0x00000020   Code   RO          176    .text.hDoorOpenedNoAccess  skud_algo.o
    0x000027b8   0x000027b8   0x00000018   Code   RO          180    .text.hIndicationStop  skud_algo.o
    0x000027d0   0x000027d0   0x00000008   Code   RO          182    .text.hParseBusMessage  skud_algo.o
    0x000027d8   0x000027d8   0x00000040   Code   RO          172    .text.hReadingKeyResume  skud_algo.o
    0x00002818   0x00002818   0x00000038   Code   RO          170    .text.hReadingKeySuspend  skud_algo.o
    0x00002850   0x00002850   0x00000014   Code   RO          178    .text.hSendAlarmEvent  skud_algo.o
    0x00002864   0x00002864   0x00000040   Code   RO          164    .text.hSleepToWaiting  skud_algo.o
    0x000028a4   0x000028a4   0x0000007c   Code   RO          166    .text.hWaitingToAccess  skud_algo.o
    0x00002920   0x00002920   0x0000004c   Code   RO            2    .text.main          main.o
    0x0000296c   0x0000296c   0x00000030   Code   RO          292    .text.putEvent      buffer.o
    0x0000299c   0x0000299c   0x00000024   Code   RO          375    .text.wdt_enable    wdt.o
    0x000029c0   0x000029c0   0x00000008   Code   RO          377    .text.wdt_reset     wdt.o
    0x000029c8   0x000029c8   0x00000020   Code   RO         2221    i.__0printf$5       mc_p.l(printf5.o)
    0x000029e8   0x000029e8   0x0000000e   Code   RO         2407    i.__scatterload_copy  mc_p.l(handlers.o)
    0x000029f6   0x000029f6   0x00000002   Code   RO         2408    i.__scatterload_null  mc_p.l(handlers.o)
    0x000029f8   0x000029f8   0x0000000e   Code   RO         2409    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00002a06   0x00002a06   0x00000002   PAD
    0x00002a08   0x00002a08   0x000002dc   Code   RO         2228    i._printf_core      mc_p.l(printf5.o)
    0x00002ce4   0x00002ce4   0x00000012   Code   RO         2363    i.fputc             mc_p.l(fputc.o)
    0x00002cf6   0x00002cf6   0x00000100   Data   RO           74    .rodata.CRC_Table   crc.o
    0x00002df6   0x00002df6   0x00000033   Data   RO          437    .rodata.str1.1      system_mg32x02z.o
    0x00002e29   0x00002e29   0x00000003   PAD
    0x00002e2c   0x00002e2c   0x00000020   Data   RO         2406    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00002e4c, Size: 0x00000170, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x000000c4])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW         2367    .data               mc_p.l(stdout.o)
    0x20000004   COMPRESSED   0x00000006   Data   RW          265    .data.ActiveKeys    variables.o
    0x2000000a   COMPRESSED   0x00000006   Data   RW          260    .data.BuzzerOffTime  variables.o
    0x20000010   COMPRESSED   0x000000c0   Data   RW          204    .data.FSMTable      skud_algo.o
    0x200000d0   COMPRESSED   0x00000006   Data   RW          266    .data.FlashResourse  variables.o
    0x200000d6   COMPRESSED   0x00000006   Data   RW          262    .data.FreeAccess    variables.o
    0x200000dc   COMPRESSED   0x00000006   Data   RW          257    .data.GerkonFiltTime  variables.o
    0x200000e2   COMPRESSED   0x00000006   Data   RW          263    .data.MasterSlave   variables.o
    0x200000e8   COMPRESSED   0x00000004   Data   RW           29    .data.MessageLenArr  bus.o
    0x200000ec   COMPRESSED   0x00000006   Data   RW          259    .data.ReactivateAlarmTime  variables.o
    0x200000f2   COMPRESSED   0x00000006   Data   RW          258    .data.SendAlarmTime  variables.o
    0x200000f8   COMPRESSED   0x00000006   Data   RW          261    .data.SendOfflineEvents  variables.o
    0x200000fe   COMPRESSED   0x00000002   PAD
    0x20000100   COMPRESSED   0x00000004   Data   RW          428    .data.SystemCoreClock  system_mg32x02z.o
    0x20000104   COMPRESSED   0x00000006   Data   RW          264    .data.TotalKeys     variables.o
    0x2000010a   COMPRESSED   0x00000002   PAD
    0x2000010c   COMPRESSED   0x00000004   Data   RW          197    .data.alarmTimeoutMax  skud_algo.o
    0x20000110   COMPRESSED   0x00000008   Data   RW          294    .data.eBuf          buffer.o
    0x20000118   COMPRESSED   0x00000006   Data   RW          249    .data.eventAccess   events.o
    0x2000011e   COMPRESSED   0x00000006   Data   RW          250    .data.eventAlarm    events.o
    0x20000124   COMPRESSED   0x0000000c   Data   RW          251    .data.events        events.o
    0x20000130   COMPRESSED   0x00000001   Data   RW          199    .data.gerkonFilterMax  skud_algo.o
    0x20000131   COMPRESSED   0x00000001   Data   RW          193    .data.indicSpeed    skud_algo.o
    0x20000132   COMPRESSED   0x00000002   PAD
    0x20000134   COMPRESSED   0x00000004   Data   RW          191    .data.indicTimeCnt  skud_algo.o
    0x20000138   COMPRESSED   0x00000004   Data   RW          192    .data.indicTimeMax  skud_algo.o
    0x2000013c   COMPRESSED   0x00000001   Data   RW          190    .data.indicWaitMax  skud_algo.o
    0x2000013d   COMPRESSED   0x00000001   Data   RW          195    .data.indicationPhase  skud_algo.o
    0x2000013e   COMPRESSED   0x00000008   Data   RW          129    .data.key1          keys.o
    0x20000146   COMPRESSED   0x00000002   Data   RW          203    .data.protectionDelayMax  skud_algo.o
    0x20000148   COMPRESSED   0x00000028   Data   RW          267    .data.variables     variables.o


    Execution Region ER_ZI (Exec base: 0x20000170, Load base: 0x00002f10, Size: 0x00000880, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000170        -       0x00000001   Zero   RW           30    .bss.CommandSize    bus.o
    0x20000171   0x00002f10   0x00000003   PAD
    0x20000174        -       0x00000004   Zero   RW          434    .bss.HardFault_Handler_C.stacked_lr  system_mg32x02z.o
    0x20000178        -       0x00000004   Zero   RW          435    .bss.HardFault_Handler_C.stacked_pc  system_mg32x02z.o
    0x2000017c        -       0x00000004   Zero   RW          436    .bss.HardFault_Handler_C.stacked_psr  system_mg32x02z.o
    0x20000180        -       0x00000004   Zero   RW          429    .bss.HardFault_Handler_C.stacked_r0  system_mg32x02z.o
    0x20000184        -       0x00000004   Zero   RW          430    .bss.HardFault_Handler_C.stacked_r1  system_mg32x02z.o
    0x20000188        -       0x00000004   Zero   RW          433    .bss.HardFault_Handler_C.stacked_r12  system_mg32x02z.o
    0x2000018c        -       0x00000004   Zero   RW          431    .bss.HardFault_Handler_C.stacked_r2  system_mg32x02z.o
    0x20000190        -       0x00000004   Zero   RW          432    .bss.HardFault_Handler_C.stacked_r3  system_mg32x02z.o
    0x20000194        -       0x00000010   Zero   RW          139    .bss.KeyEncrypted   keys.o
    0x200001a4        -       0x00000008   Zero   RW          140    .bss.KeyRaw         keys.o
    0x200001ac        -       0x00000001   Zero   RW           28    .bss.MessLen        bus.o
    0x200001ad        -       0x0000001e   Zero   RW           33    .bss.RecBytes       bus.o
    0x200001cb   0x00002f10   0x00000001   PAD
    0x200001cc        -       0x00000004   Zero   RW          196    .bss.alarmTimeoutCnt  skud_algo.o
    0x200001d0        -       0x00000001   Zero   RW          194    .bss.buzzerMuted    skud_algo.o
    0x200001d1        -       0x00000001   Zero   RW          188    .bss.currentState   skud_algo.o
    0x200001d2        -       0x00000006   Zero   RW          248    .bss.eventDoor      events.o
    0x200001d8        -       0x00000400   Zero   RW          239    .bss.fpage          flash.o
    0x200005d8        -       0x00000001   Zero   RW          198    .bss.gerkonFilterCnt  skud_algo.o
    0x200005d9        -       0x00000001   Zero   RW          201    .bss.gerkonState    skud_algo.o
    0x200005da        -       0x00000001   Zero   RW          189    .bss.indicWaitCnt   skud_algo.o
    0x200005db        -       0x00000001   Zero   RW           27    .bss.iptr           bus.o
    0x200005dc        -       0x00000001   Zero   RW          200    .bss.oldGerkonState  skud_algo.o
    0x200005dd   0x00002f10   0x00000003   PAD
    0x200005e0        -       0x00000004   Zero   RW           34    .bss.operStatus     bus.o
    0x200005e4        -       0x00000001   Zero   RW           32    .bss.parsingStatus  bus.o
    0x200005e5   0x00002f10   0x00000001   PAD
    0x200005e6        -       0x00000002   Zero   RW          202    .bss.protectionDelayCnt  skud_algo.o
    0x200005e8        -       0x00000001   Zero   RW           31    .bss.usUsart        bus.o
    0x200005e9   0x00002f10   0x00000007   PAD
    0x200005f0        -       0x00000400   Zero   RW          412    STACK               startup_mg32x02z.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        84          4          0          8          0       1878   buffer.o
       728         40          0          4         39       9646   bus.o
        72          8        256          0          0       1519   crc.o
         0          0          0         24          6        746   events.o
      1504         68          0          0       1024       7503   flash.o
       640         12          0          0          0       3692   gpio.o
       630         20          0          0          0      11669   iap.o
        64          4          0          0          0        626   ibutton.o
         0          0          0          8         24        700   keys.o
        76          4          0          0          0      13937   main.o
      2586        272          0          0          0       7197   md5.o
        20          4          0          0          0       4999   mg32x02z__common_drv.o
        20          4          0          0          0       1394   mg32x02z_chipinit.o
        44          4          0          0          0      16623   mg32x02z_csc_drv.o
       632         32          0          0          0       8995   mg32x02z_csc_init.o
       124          4          0          0          0       8995   mg32x02z_gpio_drv.o
        60         16          0          0          0       4202   mg32x02z_iwdt_drv.o
       108          4          0          0          0      13535   mg32x02z_mem_drv.o
        24          4          0          0          0       6360   mg32x02z_rst_drv.o
       204          0          0          0          0      40705   mg32x02z_tm_drv.o
        98          4          0          0          0      32193   mg32x02z_urt_drv.o
       296          8          0          0          0       3492   onewire.o
       596         72          0        210         12      12165   skud_algo.o
        60         12        192          0       1024        680   startup_mg32x02z.o
       344        196         51          4         32       1666   system_mg32x02z.o
       772        100          0          0          0      19509   timers.o
       196         24          0          0          0      10925   usart.o
         0          0          0        100          0        969   variables.o
        76          8          0          0          0       2172   wdt.o

    ----------------------------------------------------------------------
     10068        928        534        364       2176     248692   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          3          6         15          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        18          0          0          0          0         72   fputc.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusesemip.o
        32          0          0          0          0         68   llshl.o
        34          0          0          0          0         68   llushr.o
        26          0          0          0          0         72   memcmp.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
       764         52          0          0          0        168   printf5.o
         0          0          0          0          0          0   semi.o
         0          0          0          4          0          0   stdout.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o

    ----------------------------------------------------------------------
      1250         68          0          4          0        832   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1248         68          0          4          0        832   mc_p.l

    ----------------------------------------------------------------------
      1250         68          0          4          0        832   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11318        996        534        368       2176     248916   Grand Totals
     11318        996        534        196       2176     248916   ELF Image Totals (compressed)
     11318        996        534        196          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11852 (  11.57kB)
    Total RW  Size (RW Data + ZI Data)              2544 (   2.48kB)
    Total ROM Size (Code + RO Data + RW Data)      12048 (  11.77kB)

==============================================================================

